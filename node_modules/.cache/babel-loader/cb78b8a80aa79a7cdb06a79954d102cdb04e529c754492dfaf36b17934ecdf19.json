{"ast":null,"code":"import \"core-js/modules/esnext.typed-array.to-reversed.js\";\nimport \"core-js/modules/esnext.typed-array.to-sorted.js\";\nimport \"core-js/modules/esnext.typed-array.with.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport * as THREE from \"three\";\nimport { MeshLine, MeshLineMaterial } from \"three.meshline\";\nimport { scenen } from \"../App.vue\";\n//import { canvas, currentShape } from \"./Canvas.vue\";\n\nlet draw = {\n  l: undefined,\n  draw: class {\n    constructor(stroke) {\n      this.stroke = stroke;\n      this.line = new MeshLine();\n      this.geometry = new THREE.BufferGeometry();\n      this.vertices = new Float32Array([]);\n      this.geometry.setAttribute(\"position\", new THREE.BufferAttribute(this.vertices, 3));\n      this.material = new MeshLineMaterial({\n        lineWidth: this.stroke.show_stroke ? this.stroke.lineWidth : 0.005,\n        sizeAttenuation: 1,\n        color: this.stroke.show_stroke ? this.stroke.color : 0xFFFFFF,\n        side: THREE.DoubleSide,\n        fog: true,\n        wireframe: false,\n        alphaTest: 0.9,\n        blending: THREE.NormalBlending,\n        transparent: false,\n        repeat: new THREE.Vector2(1, 1),\n        opacity: 1\n      });\n      this.mesh = new THREE.Mesh(this.line, this.material);\n    }\n    start() {\n      scene.add(this.mesh);\n    }\n    move(x, y, z) {\n      var v3 = new THREE.Vector3(x, y, z);\n      // Convert Float32Array to regular array, push new values, then convert back to Float32Array\n      this.vertices = Array.prototype.slice.call(this.vertices);\n      this.vertices.push(v3.x, v3.y, v3.z);\n      this.geometry.attributes.position.array = new Float32Array(this.vertices);\n      this.geometry.attributes.position.needsUpdate = true;\n    }\n    end() {\n      this.geometry.computeBoundingSphere();\n      //renderer.render(scene, camera);\n    }\n  },\n\n  onStart: function (x, y, z, stroke) {\n    this.l = new this.draw(stroke);\n    this.l.start();\n  },\n  onMove: function (x, y, z) {\n    this.l.move(x, y, z);\n  },\n  onEnd: function () {\n    this.l.end();\n  }\n};\nexport { draw };","map":{"version":3,"names":["THREE","MeshLine","MeshLineMaterial","scenen","draw","l","undefined","constructor","stroke","line","geometry","BufferGeometry","vertices","Float32Array","setAttribute","BufferAttribute","material","lineWidth","show_stroke","sizeAttenuation","color","side","DoubleSide","fog","wireframe","alphaTest","blending","NormalBlending","transparent","repeat","Vector2","opacity","mesh","Mesh","start","scene","add","move","x","y","z","v3","Vector3","Array","prototype","slice","call","push","attributes","position","array","needsUpdate","end","computeBoundingSphere","onStart","onMove","onEnd"],"sources":["/Users/olliearrison/Desktop/SURA/src/components/DrawHelper.js"],"sourcesContent":["import * as THREE from \"three\";\nimport { MeshLine, MeshLineMaterial } from \"three.meshline\";\nimport { scenen} from \"../App.vue\";\n//import { canvas, currentShape } from \"./Canvas.vue\";\n\nlet draw = {\n    l: undefined,\n    draw: class {\n        constructor(stroke) {\n            this.stroke = stroke;\n            this.line = new MeshLine();\n            this.geometry = new THREE.BufferGeometry();\n            this.vertices = new Float32Array([]);\n            this.geometry.setAttribute(\"position\", new THREE.BufferAttribute(this.vertices, 3));\n            this.material = new MeshLineMaterial({\n                lineWidth: this.stroke.show_stroke ? this.stroke.lineWidth : 0.005,\n                sizeAttenuation: 1,\n                color: this.stroke.show_stroke ? this.stroke.color : 0xFFFFFF,\n                side: THREE.DoubleSide,\n                fog: true,\n                wireframe: false,\n                alphaTest: 0.9,\n                blending: THREE.NormalBlending,\n                transparent: false,\n                repeat: new THREE.Vector2(1, 1),\n                opacity: 1,\n            });\n            this.mesh = new THREE.Mesh(this.line, this.material);\n        }\n\n        start() {\n            scene.add(this.mesh);\n        }\n\n        move(x, y, z) {\n            var v3 = new THREE.Vector3(x, y, z);\n            // Convert Float32Array to regular array, push new values, then convert back to Float32Array\n            this.vertices = Array.prototype.slice.call(this.vertices);\n            this.vertices.push(v3.x, v3.y, v3.z);\n            this.geometry.attributes.position.array = new Float32Array(this.vertices);\n            this.geometry.attributes.position.needsUpdate = true;\n        }\n\n        end() {\n            this.geometry.computeBoundingSphere();\n            //renderer.render(scene, camera);\n        }\n    },\n    onStart: function (x, y, z, stroke) {\n        this.l = new this.draw(stroke);\n        this.l.start();\n    },\n    onMove: function (x, y, z) {\n        this.l.move(x, y, z);\n    },\n    onEnd: function () {\n        this.l.end();\n    },\n}\n\nexport { draw }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}