{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-add1d17a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"layer-viewer\"\n};\nconst _hoisted_2 = {\n  class: \"card-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_slide_group_item = _resolveComponent(\"v-slide-group-item\");\n  const _component_v_slide_group = _resolveComponent(\"v-slide-group\");\n  const _component_v_sheet = _resolveComponent(\"v-sheet\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_v_sheet, {\n    class: \"mx-auto\",\n    elevation: \"0\",\n    \"max-width\": \"800\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_slide_group, {\n      modelValue: $data.model,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.model = $event),\n      class: \"pa-4\",\n      \"show-arrows\": \"\"\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.layerLength, (n, index) => {\n        return _openBlock(), _createBlock(_component_v_slide_group_item, {\n          key: n\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"div\", {\n            class: \"card-wrapper\",\n            ref_for: true,\n            ref: \"cardElements\"\n          }, [_createVNode(_component_v_card, {\n            width: \"70\",\n            height: \"70\",\n            class: _normalizeClass([['transparent-card', {\n              'selected-card': index === $data.model\n            }], \"ma-4\"]),\n            color: \"blue-grey-lighten-3\",\n            variant: index === $data.model ? 'outlined' : undefined,\n            onClick: $event => $options.selectCard(index)\n          }, {\n            default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"span\", null, _toDisplayString(n), 1 /* TEXT */)])]),\n\n            _: 2 /* DYNAMIC */\n          }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"class\", \"variant\", \"onClick\"])], 512 /* NEED_PATCH */)]),\n\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */);\n      }), 128 /* KEYED_FRAGMENT */))]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_v_sheet","elevation","_component_v_slide_group","$data","model","$event","_Fragment","_renderList","layerLength","n","index","_createBlock","_component_v_slide_group_item","key","_createElementVNode","ref","_component_v_card","width","height","_normalizeClass","color","variant","undefined","onClick","$options","selectCard","_hoisted_2","_toDisplayString"],"sources":["/Users/olliearrison/Desktop/SURA/src/components/LayerViewer.vue"],"sourcesContent":["<template>\n    <div class=\"layer-viewer\">\n      <v-sheet class=\"mx-auto\" elevation=\"0\" max-width=\"800\">\n        <v-slide-group v-model=\"model\" class=\"pa-4\" show-arrows>\n          <v-slide-group-item v-for=\"(n, index) in layerLength\" :key=\"n\">\n            <div class=\"card-wrapper\" ref=\"cardElements\">\n              <v-card\n                width=\"70\"\n                height=\"70\"\n                :class=\"['transparent-card', { 'selected-card': index === model }]\"\n                color=\"blue-grey-lighten-3\"\n                class=\"ma-4\"\n                :variant=\"index === model ? 'outlined' : undefined\"\n                @click=\"selectCard(index)\"\n              >\n                <div class=\"card-content\">\n                  <span>{{ n }}</span>\n                </div>\n              </v-card>\n            </div>\n          </v-slide-group-item>\n        </v-slide-group>\n      </v-sheet>\n    </div>\n  </template>\n  \n  <script>\n  import { WebGLRenderer } from 'three';\n  import { camera, drawSceneList, plane } from '../App.vue';\n  \n  export default {\n    data() {\n      return {\n        model: 0,\n        renderers: [],\n        layerLength: 1,\n      };\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initializeScene();\n      });\n    },\n    methods: {\n      initializeScene() {\n        this.updateScene();\n        this.animate(); // Start the animation loop\n      },\n      updateScene() {\n        const cardElements = this.$refs.cardElements;\n\n        console.log('cardElements:', cardElements.length);\n  \n        cardElements.forEach((cardElement) => {\n        console.log('cardElement:', cardElement)\n          const renderer = new WebGLRenderer({ antialias: true });\n          renderer.setClearColor(0xffffff, 0);\n          const width = cardElement.offsetWidth;\n          const height = cardElement.offsetHeight;\n          renderer.setSize(width, height);\n  \n          const cardContentElement = cardElement.querySelector('.card-content');\n\n          cardContentElement.appendChild(renderer.domElement);\n  \n          this.renderers.push({ cardElement, renderer });\n        });\n        console.log(this.renderers);\n      },\n      updateLayers() {\n        this.reset();\n\n        this.layerLength = drawSceneList.length;\n        this.$nextTick(() => {\n            this.updateScene();\n        });\n      },\n      animate() {\n        const animateFrame = () => {\n          requestAnimationFrame(animateFrame);\n        \n  \n          this.renderers.forEach(({ cardElement, renderer }) => {\n            if (!cardElement || !renderer) {\n                console.log(\"DANGER\");\n                return;\n            }\n\n\n            const scene = drawSceneList[0].remove(plane);\n            const cardCamera = camera;\n  \n            const width = cardElement.offsetWidth;\n            const height = cardElement.offsetHeight;\n            renderer.setSize(width, height);\n  \n            renderer.render(scene, cardCamera);\n          });\n        };\n  \n        animateFrame();\n      },\n      selectCard(index) {\n        this.model = index;\n        console.log('Selected Card Index:', index);\n      },\n      reset() {\n        // Dispose old renderers and remove the canvas from the DOM\n        this.renderers.forEach(({ cardElement, renderer }) => {\n            const cardContentElement = cardElement.querySelector('.card-content');\n            const oldCanvas = cardContentElement.querySelector('canvas');\n\n            // If there's a canvas already, remove it\n            if(oldCanvas) {\n            cardContentElement.removeChild(oldCanvas);\n            console.log(\"Removed old canvas\");\n            }\n\n            // Dispose of the renderer\n            renderer.dispose();\n            renderer = null;\n        });\n\n        // Clear the renderers array\n        this.renderers = [];\n        },\n    },\n  };\n  </script>\n  \n  \n  \n  <style scoped>\n\n  .slide-group {\n    color: rgb(176, 190, 197);\n    z-index: 1100;\n  }\n  .layer-viewer {\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n    height: 6%;\n    z-index: 1100;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    color: rgb(176, 190, 197);\n  }\n  \n  .v-card {\n    background-color: transparent;\n    box-shadow: none;\n    color: rgb(176, 190, 197);\n  }\n  \n  .transparent-card {\n    background-color: transparent;\n  }\n\n  .v-sheet {\n    position: fixed;\n    bottom: 0;\n    background-color: rgba(1, 1, 1, 0.7);\n    color: rgb(176, 190, 197);\n    border-radius: 5px;\n    width: 50%;\n  }\n  \n  .card-wrapper {\n    display: inline-block;\n  }\n  \n  .card-content {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    \n  }\n\n  .card-content canvas {\n    z-index: 2000;\n    }\n  \n  </style>\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAc;;EAcRA,KAAK,EAAC;AAAc;;;;;;uBAdrCC,mBAAA,CAsBM,OAtBNC,UAsBM,GArBJC,YAAA,CAoBUC,kBAAA;IApBDJ,KAAK,EAAC,SAAS;IAACK,SAAS,EAAC,GAAG;IAAC,WAAS,EAAC;;sBAC/C,MAkBgB,CAlBhBF,YAAA,CAkBgBG,wBAAA;kBAlBQC,KAAA,CAAAC,KAAK;iEAALD,KAAA,CAAAC,KAAK,GAAAC,MAAA;MAAET,KAAK,EAAC,MAAM;MAAC,aAAW,EAAX;;wBACtB,MAAiC,E,kBAArDC,mBAAA,CAgBqBS,SAAA,QAAAC,WAAA,CAhBoBJ,KAAA,CAAAK,WAAW,GAAxBC,CAAC,EAAEC,KAAK;6BAApCC,YAAA,CAgBqBC,6BAAA;UAhBkCC,GAAG,EAAEJ;QAAC;4BAC3D,MAcM,CAdNK,mBAAA,CAcM;YAdDlB,KAAK,EAAC,cAAc;;YAACmB,GAAG,EAAC;cAC5BhB,YAAA,CAYSiB,iBAAA;YAXPC,KAAK,EAAC,IAAI;YACVC,MAAM,EAAC,IAAI;YACVtB,KAAK,EAAAuB,eAAA;cAAA,iBAA0CT,KAAK,KAAKP,KAAA,CAAAC;YAAK,IAEzD,MAAM;YADZgB,KAAK,EAAC,qBAAqB;YAE1BC,OAAO,EAAEX,KAAK,KAAKP,KAAA,CAAAC,KAAK,gBAAgBkB,SAAS;YACjDC,OAAK,EAAAlB,MAAA,IAAEmB,QAAA,CAAAC,UAAU,CAACf,KAAK;;8BAExB,MAEM,CAFNI,mBAAA,CAEM,OAFNY,UAEM,GADJZ,mBAAA,CAAoB,cAAAa,gBAAA,CAAXlB,CAAC,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}