{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { WebGLRenderer } from 'three';\nimport { camera, drawSceneList, plane } from '../App.vue';\nexport default {\n  data() {\n    return {\n      model: 0,\n      renderers: [],\n      layerLength: 1\n    };\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.initializeScene();\n    });\n  },\n  methods: {\n    initializeScene() {\n      this.updateScene();\n      this.animate(); // Start the animation loop\n    },\n\n    updateScene() {\n      const cardElements = this.$refs.cardElements;\n      this.renderers = [];\n      cardElements.forEach(cardElement => {\n        console.log('cardElement:', cardElement);\n        const renderer = new WebGLRenderer({\n          antialias: true\n        });\n        renderer.setClearColor(0xffffff, 0);\n        const width = cardElement.offsetWidth;\n        const height = cardElement.offsetHeight;\n        renderer.setSize(width, height);\n        const cardContentElement = cardElement.querySelector('.card-content');\n        cardContentElement.appendChild(renderer.domElement);\n        this.renderers.push({\n          cardElement,\n          renderer\n        });\n      });\n    },\n    updateLayers() {\n      this.reset();\n      this.layerLength = drawSceneList.length;\n      this.$nextTick(() => {\n        this.updateScene();\n      });\n    },\n    animate() {\n      const animateFrame = () => {\n        requestAnimationFrame(animateFrame);\n        console.log(\"len: \", this.renderers.length);\n        this.renderers.forEach(({\n          cardElement,\n          renderer\n        }) => {\n          if (!cardElement || !renderer) {\n            return;\n          }\n          const scene = drawSceneList[0].remove(plane);\n          const cardCamera = camera;\n          const width = cardElement.offsetWidth;\n          const height = cardElement.offsetHeight;\n          renderer.setSize(width, height);\n          renderer.render(scene, cardCamera);\n        });\n      };\n      animateFrame();\n    },\n    selectCard(index) {\n      this.model = index;\n      console.log('Selected Card Index:', index);\n    },\n    reset() {\n      // Dispose old renderers and clear the array\n      this.renderers.forEach(({\n        renderer\n      }) => {\n        renderer.dispose();\n      });\n      this.renderers = [];\n\n      // Get card elements\n      const cardElements = this.$refs.cardElements;\n      cardElements.forEach(cardElement => {\n        // Get the card content element\n        const cardContentElement = cardElement.querySelector('.card-content');\n\n        // Get the existing canvas element\n        const oldCanvas = cardContentElement.querySelector('canvas');\n\n        // If there's a canvas already, remove it\n        if (oldCanvas) {\n          cardContentElement.removeChild(oldCanvas);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["WebGLRenderer","camera","drawSceneList","plane","data","model","renderers","layerLength","mounted","$nextTick","initializeScene","methods","updateScene","animate","cardElements","$refs","forEach","cardElement","console","log","renderer","antialias","setClearColor","width","offsetWidth","height","offsetHeight","setSize","cardContentElement","querySelector","appendChild","domElement","push","updateLayers","reset","length","animateFrame","requestAnimationFrame","scene","remove","cardCamera","render","selectCard","index","dispose","oldCanvas","removeChild"],"sources":["/Users/olliearrison/Desktop/SURA/src/components/LayerViewer.vue"],"sourcesContent":["<template>\n    <div class=\"layer-viewer\">\n      <v-sheet class=\"mx-auto\" elevation=\"0\" max-width=\"800\">\n        <v-slide-group v-model=\"model\" class=\"pa-4\" show-arrows>\n          <v-slide-group-item v-for=\"(n, index) in layerLength\" :key=\"n\">\n            <div class=\"card-wrapper\" ref=\"cardElements\">\n              <v-card\n                width=\"70\"\n                height=\"70\"\n                :class=\"['transparent-card', { 'selected-card': index === model }]\"\n                color=\"blue-grey-lighten-3\"\n                class=\"ma-4\"\n                :variant=\"index === model ? 'outlined' : undefined\"\n                @click=\"selectCard(index)\"\n              >\n                <div class=\"card-content\">\n                  <div class=\"d-flex fill-height align-center justify-center\"></div>\n                </div>\n              </v-card>\n            </div>\n          </v-slide-group-item>\n        </v-slide-group>\n      </v-sheet>\n    </div>\n  </template>\n  \n  <script>\n  import { WebGLRenderer } from 'three';\n  import { camera, drawSceneList, plane } from '../App.vue';\n  \n  export default {\n    data() {\n      return {\n        model: 0,\n        renderers: [],\n        layerLength: 1,\n      };\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initializeScene();\n      });\n    },\n    methods: {\n      initializeScene() {\n        this.updateScene();\n        this.animate(); // Start the animation loop\n      },\n      updateScene() {\n        const cardElements = this.$refs.cardElements;\n        this.renderers = [];\n  \n        cardElements.forEach((cardElement) => {\n        console.log('cardElement:', cardElement)\n          const renderer = new WebGLRenderer({ antialias: true });\n          renderer.setClearColor(0xffffff, 0);\n          const width = cardElement.offsetWidth;\n          const height = cardElement.offsetHeight;\n          renderer.setSize(width, height);\n  \n          const cardContentElement = cardElement.querySelector('.card-content');\n\n          cardContentElement.appendChild(renderer.domElement);\n  \n          this.renderers.push({ cardElement, renderer });\n        });\n      },\n      updateLayers() {\n        this.reset();\n\n        this.layerLength = drawSceneList.length;\n        this.$nextTick(() => {\n            this.updateScene();\n        });\n      },\n      animate() {\n        const animateFrame = () => {\n          requestAnimationFrame(animateFrame);\n        \n          console.log(\"len: \", this.renderers.length);\n  \n          this.renderers.forEach(({ cardElement, renderer }) => {\n            if (!cardElement || !renderer) {\n                return;\n            }\n\n            \n\n\n            const scene = drawSceneList[0].remove(plane);\n            const cardCamera = camera;\n  \n            const width = cardElement.offsetWidth;\n            const height = cardElement.offsetHeight;\n            renderer.setSize(width, height);\n  \n            renderer.render(scene, cardCamera);\n          });\n        };\n  \n        animateFrame();\n      },\n      selectCard(index) {\n        this.model = index;\n        console.log('Selected Card Index:', index);\n      },\n      reset() {\n        // Dispose old renderers and clear the array\n        this.renderers.forEach(({ renderer }) => {\n        renderer.dispose();\n        });\n        this.renderers = [];\n\n        // Get card elements\n        const cardElements = this.$refs.cardElements;\n\n        cardElements.forEach((cardElement) => {\n        // Get the card content element\n        const cardContentElement = cardElement.querySelector('.card-content');\n        \n        // Get the existing canvas element\n        const oldCanvas = cardContentElement.querySelector('canvas');\n        \n        // If there's a canvas already, remove it\n        if(oldCanvas) {\n            cardContentElement.removeChild(oldCanvas);\n        }\n    });\n    },\n    },\n  };\n  </script>\n  \n  \n  \n  <style scoped>\n\n  .slide-group {\n    color: rgb(176, 190, 197);\n    z-index: 1100;\n  }\n  .layer-viewer {\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n    height: 6%;\n    z-index: 1100;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    color: rgb(176, 190, 197);\n  }\n  \n  .v-card {\n    background-color: transparent;\n    box-shadow: none;\n    color: rgb(176, 190, 197);\n  }\n  \n  .transparent-card {\n    background-color: transparent;\n  }\n\n  .v-sheet {\n    position: fixed;\n    bottom: 0;\n    background-color: rgba(1, 1, 1, 0.7);\n    color: rgb(176, 190, 197);\n    border-radius: 5px;\n    width: 50%;\n  }\n  \n  .card-wrapper {\n    display: inline-block;\n  }\n  \n  .card-content {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n  }\n  </style>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}