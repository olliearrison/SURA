{"ast":null,"code":"import UserInput from './components/UserInput.vue';\nimport DrawingInput from './components/DrawingInput.vue';\nimport GridBackground from './components/GridBackground.vue';\nimport Arcball from './components/ArcballControl.vue';\nimport * as THREE from 'three';\nexport let camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\nexport let renderer = new THREE.WebGLRenderer();\nexport let scene = new THREE.Scene();\nexport let arcRenderer = new THREE.WebGLRenderer({\n  alpha: true,\n  antialias: true\n});\nexport let drawRenderer = new THREE.WebGLRenderer({\n  alpha: true,\n  antialias: true\n});\nconst geometry = new THREE.SphereGeometry(1, 3, 6);\nconst material = new THREE.MeshBasicMaterial({\n  color: 0x745DD9,\n  side: THREE.DoubleSide,\n  opacity: 0.25,\n  transparent: true\n});\nexport let plane = new THREE.Mesh(geometry, material);\nexport let drawSceneList = [new THREE.Scene()];\n//drawSceneList[0].add(plane);\n\n//import Vuetify from 'vuetify';\nimport 'vuetify/dist/vuetify.min.css';\nexport default {\n  name: 'App',\n  components: {\n    UserInput,\n    DrawingInput,\n    Arcball,\n    GridBackground\n  },\n  data() {\n    return {\n      camera: {\n        position: {\n          x: 0,\n          y: 0,\n          z: 5\n        },\n        angle: {\n          x: 0,\n          y: 0,\n          z: 0\n        }\n      }\n    };\n  },\n  mounted() {\n    plane.rotateX(Math.PI / 2);\n  },\n  methods: {\n    updateCamera({\n      position,\n      angle\n    }) {\n      // Update the camera position and angle based on the emitted data\n      this.camera.position = position;\n      this.camera.angle = angle;\n    },\n    logCameraPosition() {\n      console.log('Logging camera position');\n    }\n  }\n  /*\n  mounted() {\n  this.$nextTick(() => {\n    this.camera = this.$refs.arcball.camera;\n    console.log(\"Mounted camera: \", this.camera);\n  });\n  */\n};","map":{"version":3,"names":["UserInput","DrawingInput","GridBackground","Arcball","THREE","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","scene","Scene","arcRenderer","alpha","antialias","drawRenderer","geometry","SphereGeometry","material","MeshBasicMaterial","color","side","DoubleSide","opacity","transparent","plane","Mesh","drawSceneList","name","components","data","position","x","y","z","angle","mounted","rotateX","Math","PI","methods","updateCamera","logCameraPosition","console","log"],"sources":["/Users/olliearrison/Desktop/SURA/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <UserInput/>\n    <DrawingInput/>\n    <GridBackground :camera-position=\"camera.position\" :camera-angle=\"camera.angle\"/>\n    <div id = \"arcballContainer\">\n      <Arcball ref=\"arcball\" \n        :camera-position=\"camera.position\"\n        :camera-angle=\"camera.angle\"\n        @camera-updated=\"updateCamera\"/>\n    </div>\n  </div>\n</template>\n\n\n\n<script>\nimport UserInput from './components/UserInput.vue';\nimport DrawingInput from './components/DrawingInput.vue';\nimport GridBackground from './components/GridBackground.vue';\nimport Arcball from './components/ArcballControl.vue';\nimport * as THREE from 'three';\n\nexport let camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\nexport let renderer = new THREE.WebGLRenderer();\nexport let scene = new THREE.Scene();\nexport let arcRenderer = new THREE.WebGLRenderer({alpha: true, antialias: true});\nexport let drawRenderer = new THREE.WebGLRenderer({alpha: true, antialias: true});\nconst geometry = new THREE.SphereGeometry( 1, 3, 6 );\n    const material = new THREE.MeshBasicMaterial( {\n      color: 0x745DD9, \n      side: THREE.DoubleSide,\n      opacity: 0.25,\n      transparent: true,\n    } );\nexport let plane = new THREE.Mesh( geometry, material );\n\nexport let drawSceneList = [new THREE.Scene()];\n//drawSceneList[0].add(plane);\n\n\n//import Vuetify from 'vuetify';\nimport 'vuetify/dist/vuetify.min.css';\n\nexport default {\n  name: 'App',\n  components: {\n    UserInput,\n    DrawingInput,\n    Arcball,\n    GridBackground\n  },\n  data (){\n    return {\n      camera: {\n        position: { x: 0, y: 0, z: 5 },\n        angle: { x: 0, y: 0, z: 0 }\n      },\n    };\n  },\n  mounted (){\n    plane.rotateX(Math.PI/2);\n  },\n  methods: {\n    updateCamera({ position, angle }) {\n      // Update the camera position and angle based on the emitted data\n      this.camera.position = position;\n      this.camera.angle = angle;\n    },\n    logCameraPosition() {\n      console.log('Logging camera position');\n    },\n  },\n  /*\n  mounted() {\n  this.$nextTick(() => {\n    this.camera = this.$refs.arcball.camera;\n    console.log(\"Mounted camera: \", this.camera);\n  });\n  */\n\n}\n\n</script>\n\n<style>\nbody {\n  margin: 0;\n  overflow: hidden; /* Disable scroll */\n}\n\n#app {\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden; /* Disable scroll */\n}\n\n.drawing-input {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n}\n\n#arcballContainer {\n  height: calc(100vh - 1em); /* Adjust the height as needed */\n}\n\n</style>"],"mappings":"AAiBA,OAAOA,SAAQ,MAAO,4BAA4B;AAClD,OAAOC,YAAW,MAAO,+BAA+B;AACxD,OAAOC,cAAa,MAAO,iCAAiC;AAC5D,OAAOC,OAAM,MAAO,iCAAiC;AACrD,OAAO,KAAKC,KAAI,MAAO,OAAO;AAE9B,OAAO,IAAIC,MAAK,GAAI,IAAID,KAAK,CAACE,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAS,GAAID,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;AACtG,OAAO,IAAIC,QAAO,GAAI,IAAIN,KAAK,CAACO,aAAa,CAAC,CAAC;AAC/C,OAAO,IAAIC,KAAI,GAAI,IAAIR,KAAK,CAACS,KAAK,CAAC,CAAC;AACpC,OAAO,IAAIC,WAAU,GAAI,IAAIV,KAAK,CAACO,aAAa,CAAC;EAACI,KAAK,EAAE,IAAI;EAAEC,SAAS,EAAE;AAAI,CAAC,CAAC;AAChF,OAAO,IAAIC,YAAW,GAAI,IAAIb,KAAK,CAACO,aAAa,CAAC;EAACI,KAAK,EAAE,IAAI;EAAEC,SAAS,EAAE;AAAI,CAAC,CAAC;AACjF,MAAME,QAAO,GAAI,IAAId,KAAK,CAACe,cAAc,CAAE,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC;AAChD,MAAMC,QAAO,GAAI,IAAIhB,KAAK,CAACiB,iBAAiB,CAAE;EAC5CC,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAEnB,KAAK,CAACoB,UAAU;EACtBC,OAAO,EAAE,IAAI;EACbC,WAAW,EAAE;AACf,CAAE,CAAC;AACP,OAAO,IAAIC,KAAI,GAAI,IAAIvB,KAAK,CAACwB,IAAI,CAAEV,QAAQ,EAAEE,QAAS,CAAC;AAEvD,OAAO,IAAIS,aAAY,GAAI,CAAC,IAAIzB,KAAK,CAACS,KAAK,CAAC,CAAC,CAAC;AAC9C;;AAGA;AACA,OAAO,8BAA8B;AAErC,eAAe;EACbiB,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACV/B,SAAS;IACTC,YAAY;IACZE,OAAO;IACPD;EACF,CAAC;EACD8B,IAAGA,CAAA,EAAI;IACL,OAAO;MACL3B,MAAM,EAAE;QACN4B,QAAQ,EAAE;UAAEC,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAE,CAAC;QAC9BC,KAAK,EAAE;UAAEH,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAE;MAC5B;IACF,CAAC;EACH,CAAC;EACDE,OAAMA,CAAA,EAAI;IACRX,KAAK,CAACY,OAAO,CAACC,IAAI,CAACC,EAAE,GAAC,CAAC,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAC;MAAEV,QAAQ;MAAEI;IAAM,CAAC,EAAE;MAChC;MACA,IAAI,CAAChC,MAAM,CAAC4B,QAAO,GAAIA,QAAQ;MAC/B,IAAI,CAAC5B,MAAM,CAACgC,KAAI,GAAIA,KAAK;IAC3B,CAAC;IACDO,iBAAiBA,CAAA,EAAG;MAClBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACxC;EACF;EACA;;;;;;;AAQF"},"metadata":{},"sourceType":"module","externalDependencies":[]}