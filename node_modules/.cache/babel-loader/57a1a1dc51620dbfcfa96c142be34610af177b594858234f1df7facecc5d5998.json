{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { WebGLRenderer } from 'three';\nimport { camera, drawSceneList, plane } from '../App.vue';\nexport default {\n  data() {\n    return {\n      model: 0,\n      renderers: [],\n      layerLength: 1\n    };\n  },\n  mounted() {\n    this.$nextTick(() => {\n      this.initializeScene();\n    });\n  },\n  methods: {\n    initializeScene() {\n      this.updateScene();\n      this.animate(); // Start the animation loop\n    },\n\n    updateScene() {\n      const cardElements = this.$refs.cardElements;\n      console.log('cardElements:', cardElements.length);\n      cardElements.forEach(cardElement => {\n        console.log('cardElement:', cardElement);\n        const renderer = new WebGLRenderer({\n          antialias: true\n        });\n        renderer.setClearColor(0xffffff, 0);\n        const width = cardElement.offsetWidth;\n        const height = cardElement.offsetHeight;\n        renderer.setSize(width, height);\n        const cardContentElement = cardElement.querySelector('.card-content');\n        cardContentElement.appendChild(renderer.domElement);\n        this.renderers.push({\n          cardElement,\n          renderer\n        });\n      });\n      console.log(this.renderers);\n    },\n    updateLayers() {\n      this.reset();\n      this.layerLength = drawSceneList.length;\n      this.$nextTick(() => {\n        this.updateScene();\n      });\n    },\n    animate() {\n      const animateFrame = () => {\n        requestAnimationFrame(animateFrame);\n        this.renderers.forEach(({\n          cardElement,\n          renderer\n        }) => {\n          if (!cardElement || !renderer) {\n            console.log(\"DANGER\");\n            return;\n          }\n          const scene = drawSceneList[0].remove(plane);\n          const cardCamera = camera;\n          const width = cardElement.offsetWidth;\n          const height = cardElement.offsetHeight;\n          renderer.setSize(width, height);\n          renderer.render(scene, cardCamera);\n        });\n      };\n      animateFrame();\n    },\n    selectCard(index) {\n      this.model = index;\n      console.log('Selected Card Index:', index);\n    },\n    reset() {\n      // Dispose old renderers and remove the canvas from the DOM\n      this.renderers.forEach(({\n        cardElement,\n        renderer\n      }) => {\n        const cardContentElement = cardElement.querySelector('.card-content');\n        const oldCanvas = cardContentElement.querySelector('canvas');\n\n        // If there's a canvas already, remove it\n        if (oldCanvas) {\n          cardContentElement.removeChild(oldCanvas);\n          console.log(\"Removed old canvas\");\n        }\n\n        // Dispose of the renderer\n        renderer.dispose();\n        renderer = null;\n      });\n\n      // Clear the renderers array\n      this.renderers = [];\n    }\n  }\n};","map":{"version":3,"names":["WebGLRenderer","camera","drawSceneList","plane","data","model","renderers","layerLength","mounted","$nextTick","initializeScene","methods","updateScene","animate","cardElements","$refs","console","log","length","forEach","cardElement","renderer","antialias","setClearColor","width","offsetWidth","height","offsetHeight","setSize","cardContentElement","querySelector","appendChild","domElement","push","updateLayers","reset","animateFrame","requestAnimationFrame","scene","remove","cardCamera","render","selectCard","index","oldCanvas","removeChild","dispose"],"sources":["/Users/olliearrison/Desktop/SURA/src/components/LayerViewer.vue"],"sourcesContent":["<template>\n    <div class=\"layer-viewer\">\n      <v-sheet class=\"mx-auto\" elevation=\"0\" max-width=\"800\">\n        <v-slide-group v-model=\"model\" class=\"pa-4\" show-arrows>\n          <v-slide-group-item v-for=\"(n, index) in layerLength\" :key=\"n\">\n            <div class=\"card-wrapper\" ref=\"cardElements\">\n              <v-card\n                width=\"70\"\n                height=\"70\"\n                :class=\"['transparent-card', { 'selected-card': index === model }]\"\n                color=\"blue-grey-lighten-3\"\n                class=\"ma-4\"\n                :variant=\"index === model ? 'outlined' : undefined\"\n                @click=\"selectCard(index)\"\n              >\n                <div class=\"card-content\">\n                  <span class=\"card-text\" >{{ n }}</span>\n                  <div class=\"d-flex fill-height align-center justify-center\"></div>\n                </div>\n              </v-card>\n            </div>\n          </v-slide-group-item>\n        </v-slide-group>\n      </v-sheet>\n    </div>\n  </template>\n  \n  <script>\n  import { WebGLRenderer } from 'three';\n  import { camera, drawSceneList, plane } from '../App.vue';\n  \n  export default {\n    data() {\n      return {\n        model: 0,\n        renderers: [],\n        layerLength: 1,\n      };\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initializeScene();\n      });\n    },\n    methods: {\n      initializeScene() {\n        this.updateScene();\n        this.animate(); // Start the animation loop\n      },\n      updateScene() {\n        const cardElements = this.$refs.cardElements;\n\n        console.log('cardElements:', cardElements.length);\n  \n        cardElements.forEach((cardElement) => {\n        console.log('cardElement:', cardElement)\n          const renderer = new WebGLRenderer({ antialias: true });\n          renderer.setClearColor(0xffffff, 0);\n          const width = cardElement.offsetWidth;\n          const height = cardElement.offsetHeight;\n          renderer.setSize(width, height);\n  \n          const cardContentElement = cardElement.querySelector('.card-content');\n\n          cardContentElement.appendChild(renderer.domElement);\n  \n          this.renderers.push({ cardElement, renderer });\n        });\n        console.log(this.renderers);\n      },\n      updateLayers() {\n        this.reset();\n\n        this.layerLength = drawSceneList.length;\n        this.$nextTick(() => {\n            this.updateScene();\n        });\n      },\n      animate() {\n        const animateFrame = () => {\n          requestAnimationFrame(animateFrame);\n        \n  \n          this.renderers.forEach(({ cardElement, renderer }) => {\n            if (!cardElement || !renderer) {\n                console.log(\"DANGER\");\n                return;\n            }\n\n\n            const scene = drawSceneList[0].remove(plane);\n            const cardCamera = camera;\n  \n            const width = cardElement.offsetWidth;\n            const height = cardElement.offsetHeight;\n            renderer.setSize(width, height);\n  \n            renderer.render(scene, cardCamera);\n          });\n        };\n  \n        animateFrame();\n      },\n      selectCard(index) {\n        this.model = index;\n        console.log('Selected Card Index:', index);\n      },\n      reset() {\n        // Dispose old renderers and remove the canvas from the DOM\n        this.renderers.forEach(({ cardElement, renderer }) => {\n            const cardContentElement = cardElement.querySelector('.card-content');\n            const oldCanvas = cardContentElement.querySelector('canvas');\n\n            // If there's a canvas already, remove it\n            if(oldCanvas) {\n            cardContentElement.removeChild(oldCanvas);\n            console.log(\"Removed old canvas\");\n            }\n\n            // Dispose of the renderer\n            renderer.dispose();\n            renderer = null;\n        });\n\n        // Clear the renderers array\n        this.renderers = [];\n        },\n    },\n  };\n  </script>\n  \n  \n  \n  <style scoped>\n\n  .slide-group {\n    color: rgb(176, 190, 197);\n    z-index: 1100;\n  }\n  .layer-viewer {\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n    height: 6%;\n    z-index: 1100;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    color: rgb(176, 190, 197);\n  }\n  \n  .v-card {\n    background-color: transparent;\n    box-shadow: none;\n    color: rgb(176, 190, 197);\n  }\n  \n  .transparent-card {\n    background-color: transparent;\n  }\n\n  .v-sheet {\n    position: fixed;\n    bottom: 0;\n    background-color: rgba(1, 1, 1, 0.7);\n    color: rgb(176, 190, 197);\n    border-radius: 5px;\n    width: 50%;\n  }\n  \n  .card-wrapper {\n    display: inline-block;\n  }\n  \n  .card-content {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n  }\n\n  .card-content canvas {\n    z-index: 2000;\n    }\n  \n.card-text {\n  text-align: center;\n  font-size: 14px;\n  font-weight: bold;\n  z-index: 2100;\n  olor: rgb(176, 190, 197);\n}\n\n  </style>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}