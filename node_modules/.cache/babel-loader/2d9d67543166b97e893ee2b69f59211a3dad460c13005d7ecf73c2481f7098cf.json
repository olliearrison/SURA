{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { draw } from \"./DrawHelper.js\";\nimport { arcRenderer, drawSceneList } from '../App.vue';\nimport * as THREE from 'three';\n//import * as THREE from \"three\";\n//import { renderer, scene, camera } from \"../App.vue\";\n\nexport let index = 0;\nlet drawing = false;\nlet rotatingInterval = null; // Interval to rotate index\n//let rotatingCondition = false;\n\nexport default {\n  name: 'DrawingInput',\n  data() {\n    return {\n      isDrawing: false,\n      rotatingCondition: false,\n      stroke: {\n        show_stroke: true,\n        lineWidth: .25,\n        color: 0x000000,\n        eraser: false,\n        showColorPicker: false\n      }\n    };\n  },\n  mounted() {\n    this.$watch(() => this.rotatingCondition, newValue => {\n      console.log(\"hello\");\n      if (newValue) {\n        if (rotatingInterval == null) {\n          console.log(\"hello\");\n          // Rotate the index 5 times per second\n          rotatingInterval = setInterval(() => {\n            index = (index + 1) % drawSceneList.length;\n          }, 1000 / 5); // 1000 ms (1s) divided by 5 gives 200 ms\n        }\n      } else {\n        // Stop rotating the index\n        if (rotatingInterval != null) {\n          clearInterval(rotatingInterval);\n          rotatingInterval = null;\n        }\n      }\n    });\n    // document.body \n    /*\n    const button = this.$refs.eraserButton;\n    \n    button.addEventListener('click', () => {\n        console.log(\"pointer down\");\n        this.isEraserMode = !this.isEraserMode;\n    });\n    */\n\n    document.body.addEventListener('mouseup', event => {\n      if (this.inCanvas(event)) {\n        this.handleMouseUp();\n        drawing = false;\n      }\n    });\n    document.body.addEventListener('mousedown', event => {\n      if (this.inCanvas(event)) {\n        drawing = true;\n        this.handleMouseDown(event);\n      }\n    });\n    document.body.addEventListener('pointermove', event => {\n      //console.log(event.pressure);\n      if (event.pressure > 0) {\n        this.stroke.lineWidth = event.pressure * .5;\n      }\n    });\n    document.body.addEventListener('mousemove', event => {\n      //console.log(event.pressure);\n      if (this.inCanvas(event)) {\n        if (drawing) {\n          this.handleMouseMove(event);\n        }\n      } else {\n        if (drawing) {\n          this.handleMouseUp();\n          drawing = false;\n        }\n      }\n    });\n    //this.handleMouseMove(event);\n  },\n\n  methods: {\n    inCanvas(event) {\n      var rect = arcRenderer.domElement.getBoundingClientRect();\n      var centerX = rect.left + rect.width / 2;\n      var centerY = rect.top + rect.height / 2;\n      const dx = event.clientX - centerX;\n      const dy = event.clientY - centerY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      if (distance < rect.width / 2) {\n        return false;\n      }\n      return true;\n    },\n    handleMouseMove(event) {\n      if (!this.isDrawing) return;\n      let x = event.clientX;\n      let y = event.clientY;\n      // Assuming a 2D drawing, so Z is constant, but this could be modified as per the requirement.\n      draw.onMove(x, y, this.stroke);\n    },\n    handleMouseDown(event) {\n      //console.log(\"mouse down\");\n      this.isDrawing = true;\n      let x = event.clientX;\n      let y = event.clientY;\n      draw.onStart(x, y, this.stroke);\n    },\n    handleMouseUp() {\n      this.isDrawing = false;\n      draw.onEnd();\n    },\n    toggleEraserMode() {\n      this.stroke.eraser = !this.stroke.eraser;\n    },\n    backward() {\n      if (index > 0) {\n        index--;\n        console.log(drawSceneList[index].children.length);\n      }\n    },\n    forward() {\n      if (index < drawSceneList.length - 1) {\n        index++;\n        console.log(drawSceneList[index].children.length);\n      } else {\n        const newScene = new THREE.Scene();\n        //newScene.add(plane);\n        drawSceneList.push(newScene);\n        index++;\n        console.log(drawSceneList[index].children.length);\n      }\n    },\n    play() {\n      console.log(!this.rotatingCondition);\n      this.rotatingCondition = !this.rotatingCondition;\n    }\n  }\n};","map":{"version":3,"names":["draw","arcRenderer","drawSceneList","THREE","index","drawing","rotatingInterval","name","data","isDrawing","rotatingCondition","stroke","show_stroke","lineWidth","color","eraser","showColorPicker","mounted","$watch","newValue","console","log","setInterval","length","clearInterval","document","body","addEventListener","event","inCanvas","handleMouseUp","handleMouseDown","pressure","handleMouseMove","methods","rect","domElement","getBoundingClientRect","centerX","left","width","centerY","top","height","dx","clientX","dy","clientY","distance","Math","sqrt","x","y","onMove","onStart","onEnd","toggleEraserMode","backward","children","forward","newScene","Scene","push","play"],"sources":["/Users/olliearrison/Desktop/SURA/src/components/DrawingInput.vue"],"sourcesContent":["<template>\n    <div class=\"drawing-input\">\n        <v-app>\n            <v-color-picker v-if=\"showColorPicker\"></v-color-picker>\n            <v-app-bar class=\"small-bar justify-center\" >\n                <div class=\"spacer\"></div>\n                <v-btn icon class=\"fixed-button\" @click=\"showColorPicker = !showColorPicker\">\n                    <v-icon>mdi-home</v-icon>\n                </v-btn>\n                <div class=\"spacer\"></div>\n                <v-btn icon class=\"fixed-button\">\n                    <v-icon>mdi-home</v-icon>\n                </v-btn>\n                <v-spacer></v-spacer>\n                <v-btn icon class=\"fixed-button\" ref=\"eraserButton\" @click=\"toggleEraserMode\">\n                    <v-icon>\n                    {{ stroke.eraser ? 'mdi-eraser' : 'mdi-brush-outline' }}\n                    </v-icon>\n                </v-btn>\n                \n            </v-app-bar>\n\n        \n\n\n            <v-card class=\"pa-2\" outlined>\n                <v-container class=\"align-center\">\n                    <v-row justify=\"center\">\n                        <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                            <v-slider class=\"my-slider\" color=\"blue-grey-lighten-3\" density=\"compact\" track-size=\"15\" direction=\"vertical\"></v-slider>\n                        </v-col>\n                    </v-row>\n\n                    <v-row justify=\"center\">\n                        <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                            <v-btn icon class=\"fixed-button\" @click=\"showColorPicker = !showColorPicker\">\n                                        <v-icon>mdi-home</v-icon>\n                            </v-btn>\n                        </v-col>\n                    </v-row>\n\n                    <v-row justify=\"center\">\n                        <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                            <v-btn icon class=\"fixed-button\">\n                                        <v-icon>mdi-arrow-u-right-top</v-icon>\n                            </v-btn>\n                        </v-col>\n                    </v-row>\n\n                    <v-row justify=\"center\">\n                        <v-col cols=\"12\" sm=\"6\" md=\"4\">\n                            <v-btn icon class=\"fixed-button\">\n                                        <v-icon>mdi-arrow-u-left-top</v-icon>\n                            </v-btn>\n                        </v-col>\n                    </v-row>\n                </v-container>\n            </v-card>\n            \n            \n            <v-row class=\"bottom-buttons\">\n                <v-btn class=\"fixed-button\" @click=\"backward\" large>\n                    <v-icon>\n                        mdi-arrow-left\n                    </v-icon>\n                </v-btn>\n                <v-spacer></v-spacer>\n                <v-btn class=\"fixed-button\" @click=\"forward\" large>\n                    <v-icon>\n                        mdi-arrow-right\n                    </v-icon>\n                </v-btn>\n                <v-spacer></v-spacer>\n                <v-btn class=\"fixed-button\" @click=\"play\" large>\n                    <v-icon>\n                        mdi-play\n                    </v-icon>\n                </v-btn>\n            </v-row>\n    </v-app>\n    </div>\n    \n</template>\n  \n<script>\nimport { draw } from \"./DrawHelper.js\";\nimport { arcRenderer, drawSceneList } from '../App.vue';\nimport * as THREE from 'three';\n//import * as THREE from \"three\";\n//import { renderer, scene, camera } from \"../App.vue\";\n\nexport let index = 0;\nlet drawing = false;\n\nlet rotatingInterval = null;  // Interval to rotate index\n//let rotatingCondition = false;\n\n\nexport default {\n    name: 'DrawingInput',\n\n    data(){\n        return {\n            isDrawing: false,\n            rotatingCondition: false,\n            stroke: {\n                show_stroke: true,\n                lineWidth: .25,\n                color: 0x000000,\n                eraser: false,\n                showColorPicker: false,\n                \n            }\n        };\n    },\n    mounted (){\n        this.$watch(() => this.rotatingCondition, (newValue) => {\n            console.log(\"hello\");\n            if(newValue){\n                if(rotatingInterval == null){\n                    console.log(\"hello\");\n                    // Rotate the index 5 times per second\n                    rotatingInterval = setInterval(() => {\n                        index = (index + 1) % drawSceneList.length;\n                    }, 1000/5); // 1000 ms (1s) divided by 5 gives 200 ms\n                }\n            }else{\n                // Stop rotating the index\n                if(rotatingInterval != null){\n                    clearInterval(rotatingInterval);\n                    rotatingInterval = null;\n                }\n            }\n        });\n        // document.body \n        /*\n        const button = this.$refs.eraserButton;\n        \n        button.addEventListener('click', () => {\n            console.log(\"pointer down\");\n            this.isEraserMode = !this.isEraserMode;\n        });\n        */\n\n\n        document.body.addEventListener('mouseup', (event) => {\n            if (this.inCanvas(event)){\n                this.handleMouseUp();\n                drawing = false;\n            }\n        });\n\n        document.body.addEventListener('mousedown', (event) => {\n            if (this.inCanvas(event)) {\n                drawing = true;\n                this.handleMouseDown(event);\n            }\n        });\n\n        document.body.addEventListener('pointermove', (event) => {\n            //console.log(event.pressure);\n            if (event.pressure > 0){\n                this.stroke.lineWidth = event.pressure * .5;\n            }\n\n        });\n\n        document.body.addEventListener('mousemove', (event) => {\n            //console.log(event.pressure);\n            if (this.inCanvas(event)) {\n                if (drawing) {\n                    this.handleMouseMove(event);\n                }\n            } else {\n                if (drawing){\n                    this.handleMouseUp();\n                    drawing = false;\n                }\n            }\n        });\n        //this.handleMouseMove(event);\n\n       \n\n    },\n    methods: {\n        inCanvas( event ) {\n            var rect = arcRenderer.domElement.getBoundingClientRect();\n            var centerX = rect.left + rect.width / 2;\n            var centerY = rect.top + rect.height / 2;\n\n            const dx = event.clientX - centerX;\n            const dy = event.clientY - centerY;\n            const distance = Math.sqrt(dx * dx + dy * dy);\n\n            if (distance < rect.width/2){\n                return false;\n            }\n            return true;\n        },\n        handleMouseMove(event) {\n            if (!this.isDrawing) return;\n            let x = event.clientX;\n            let y = event.clientY;\n            // Assuming a 2D drawing, so Z is constant, but this could be modified as per the requirement.\n            draw.onMove(x, y, this.stroke);\n        },\n        handleMouseDown(event) {\n            //console.log(\"mouse down\");\n            this.isDrawing = true;\n            let x = event.clientX;\n            let y = event.clientY;\n            draw.onStart(x, y, this.stroke);\n        },\n        handleMouseUp() {\n            this.isDrawing = false;\n            draw.onEnd();\n        },\n        toggleEraserMode() {\n            this.stroke.eraser = !this.stroke.eraser;\n        },\n        backward() {\n            if (index > 0){\n                index--;\n                console.log(drawSceneList[index].children.length);\n            }\n            \n        },\n        forward() {\n            if (index < drawSceneList.length - 1){\n                index++;\n                console.log(drawSceneList[index].children.length);\n            } else {\n                const newScene = new THREE.Scene();\n                //newScene.add(plane);\n                drawSceneList.push(newScene);\n                index++;\n                console.log(drawSceneList[index].children.length);\n            }\n        },\n        play() {\n            console.log(!this.rotatingCondition);\n            this.rotatingCondition = !this.rotatingCondition;\n        }\n        \n    }\n}\n</script>\n\n<style scoped>\n.drawing-input {\n    width: 100%;\n    height: 100%;\n}\n\n.fixed-button {\n  z-index: 1000;\n  background-color: rgb(33, 33, 33);\n  color: rgb(176, 190, 197);\n}\n\n.v-card {\n  position: fixed;\n  top: 10%;\n  bottom: 90%;\n  left: 1%;\n  display: flex;\n  align-items: center;\n  z-index: 998;\n  height: 80%;\n  width: 5%;\n  justify-content: flex-start;\n  background-color: rgba(1, 1, 1, 0.7);\n}\n\n.button-container {\n  position: fixed;\n  top: 2%;\n  left: 2%;\n  height: 50%;\n  z-index: 999;\n  width: 10%;\n}\n\n.spacer {\n  width: 1%;\n  height: 1%;\n}\n\n.small-bar {\n  height: 8%;  /* Adjust this value as needed */\n  background-color: rgba(1, 1, 1, 0.7) !important;\n}\n\n.bottom-buttons {\n  position: fixed;\n  width: 20%;\n  bottom: 40px; /* Adjust the bottom value as needed */\n  left: 40px; /* Adjust the right value as needed */\n  z-index: 999; /* Set an appropriate z-index if necessary */\n  /* Add any other desired styles */\n}\n\n.v-color-picker {\n    z-index=1001;\n}\n\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}