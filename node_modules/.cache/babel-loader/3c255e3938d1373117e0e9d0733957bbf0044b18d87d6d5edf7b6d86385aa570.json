{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"grid\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"p\", null, \"Camera Position: x=\" + _toDisplayString($props.cameraPosition.x) + \", y=\" + _toDisplayString($props.cameraPosition.y) + \", z=\" + _toDisplayString($props.cameraPosition.z), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Camera Angle: x=\" + _toDisplayString($props.cameraAngle.x) + \", y=\" + _toDisplayString($props.cameraAngle.y) + \", z=\" + _toDisplayString($props.cameraAngle.z), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","_hoisted_1","_toDisplayString","$props","cameraPosition","x","y","z","cameraAngle"],"sources":["/Users/olliearrison/Desktop/SURA/src/components/GridBackground.vue"],"sourcesContent":["<template>\n    <div class=\"grid\"> </div>\n    <p>Camera Position: x={{ cameraPosition.x }}, y={{ cameraPosition.y }}, z={{ cameraPosition.z }}</p>\n    <p>Camera Angle: x={{ cameraAngle.x }}, y={{ cameraAngle.y }}, z={{ cameraAngle.z }}</p>\n</template>\n\n<script>\nimport * as THREE from 'three';\nimport InfiniteGridHelper from \"./InfiniteGridHelper.js\";\n\nexport let camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\nexport let renderer = new THREE.WebGLRenderer();\n\nexport default {\n  name: 'GridBackground',\n  props: {\n    cameraPosition: {\n      type: Object,\n      required: true\n    },\n    cameraAngle: {\n      type: Object,\n      required: true\n    }\n  },\n  mounted(){\n    const scene = new THREE.Scene();\n\n    // Create a renderer\n    renderer.setSize(this.$el.clientWidth, this.$el.clientHeight);\n    document.body.appendChild(renderer.domElement);\n\n    // Create a camera\n    \n    //camera = camera;\n    camera.position.z = 2;\n    camera.position.x = 0;\n\n\n    renderer.setClearColor(new THREE.Color(0x000000));\n\n\n    // Create a geometry\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\n\n    const edges = new THREE.EdgesGeometry(geometry);\n\n    // Create a material\n\n    const lineMaterial = new THREE.LineBasicMaterial({ color: 0x00ff00 });\n\n    // Create a mesh\n\n    const cube = new THREE.LineSegments(edges, lineMaterial);\n\n    // Add the mesh to the scene\n\n\n    scene.add(cube);\n\n    const grid = InfiniteGridHelper();\n    scene.add(grid);\n\n    let rotationSpeed = 0.01; // Initial rotation speed\n    \n    function animate() {\n        requestAnimationFrame(animate);\n\n        // Rotate the cube\n        cube.rotation.x += rotationSpeed;\n        cube.rotation.y += rotationSpeed;\n\n        grid.rotation.x += .005;\n        grid.rotation.y += .003;\n\n\n        // Render the scene with the camera\n        renderer.render(scene, camera);\n        \n    }\n    this.windowResizeHandler();\n    animate();\n    window.addEventListener('resize', this.windowResizeHandler);\n  }, \n  beforeUnmount() {\n    window.removeEventListener('resize', this.windowResizeHandler);\n},\n  methods: {\n    windowResizeHandler() {\n        console.log(\"hi\");\n        const width = this.$el.clientWidth;\n        const height = this.$el.clientHeight;\n\n        camera.aspect = width / height;\n        camera.updateProjectionMatrix();\n        renderer.setSize(width, height);\n    }\n  }\n}\n</script>\n\n<style>\n\n.grid {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n</style>"],"mappings":";gCACIA,mBAAA,CAAyB;EAApBC,KAAK,EAAC;AAAM;;;6DAAjBC,UAAyB,EACzBF,mBAAA,CAAoG,WAAjG,qBAAmB,GAAAG,gBAAA,CAAGC,MAAA,CAAAC,cAAc,CAACC,CAAC,IAAG,MAAI,GAAAH,gBAAA,CAAGC,MAAA,CAAAC,cAAc,CAACE,CAAC,IAAG,MAAI,GAAAJ,gBAAA,CAAGC,MAAA,CAAAC,cAAc,CAACG,CAAC,kBAC7FR,mBAAA,CAAwF,WAArF,kBAAgB,GAAAG,gBAAA,CAAGC,MAAA,CAAAK,WAAW,CAACH,CAAC,IAAG,MAAI,GAAAH,gBAAA,CAAGC,MAAA,CAAAK,WAAW,CAACF,CAAC,IAAG,MAAI,GAAAJ,gBAAA,CAAGC,MAAA,CAAAK,WAAW,CAACD,CAAC,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}