{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"arcballContainer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_UserInput = _resolveComponent(\"UserInput\");\n  const _component_DrawingInput = _resolveComponent(\"DrawingInput\");\n  const _component_GridBackground = _resolveComponent(\"GridBackground\");\n  const _component_Arcball = _resolveComponent(\"Arcball\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_UserInput), _createVNode(_component_DrawingInput), _createVNode(_component_GridBackground, {\n    \"camera-position\": $data.camera.position,\n    \"camera-angle\": $data.camera.angle\n  }, null, 8 /* PROPS */, [\"camera-position\", \"camera-angle\"]), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_Arcball, {\n    ref: \"arcball\",\n    \"camera-position\": $data.camera.position,\n    \"camera-angle\": $data.camera.angle,\n    onCameraUpdated: $options.updateCamera\n  }, null, 8 /* PROPS */, [\"camera-position\", \"camera-angle\", \"onCameraUpdated\"])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["id","_createVNode","_component_UserInput","_component_DrawingInput","_component_GridBackground","$data","camera","position","angle","_createElementVNode","_hoisted_1","_component_Arcball","ref","onCameraUpdated","$options","updateCamera"],"sources":["/Users/olliearrison/Desktop/SURA/src/App.vue"],"sourcesContent":["<template>\n  <UserInput/>\n  <DrawingInput/>\n  <GridBackground :camera-position=\"camera.position\" :camera-angle=\"camera.angle\"/>\n  <div id = \"arcballContainer\">\n    <Arcball ref=\"arcball\" \n      :camera-position=\"camera.position\"\n      :camera-angle=\"camera.angle\"\n      @camera-updated=\"updateCamera\"/>\n    </div>\n</template>\n\n\n<script>\nimport UserInput from './components/UserInput.vue';\nimport DrawingInput from './components/DrawingInput.vue';\nimport GridBackground from './components/GridBackground.vue';\nimport Arcball from './components/ArcballControl.vue';\nimport * as THREE from 'three';\n\nexport let camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\nexport let renderer = new THREE.WebGLRenderer();\nexport let scene = new THREE.Scene();\nexport let arcRenderer = new THREE.WebGLRenderer({alpha: true, antialias: true});\nconst geometry = new THREE.PlaneGeometry( 3, 3 );\n    const material = new THREE.MeshBasicMaterial( {\n      color: 0x000000, \n      side: THREE.DoubleSide,\n      opacity: 0.3,\n      transparent: true,\n    } );\nexport let plane = new THREE.Mesh( geometry, material );\n    \n\nexport default {\n  name: 'App',\n  components: {\n    UserInput,\n    DrawingInput,\n    Arcball,\n    GridBackground\n  },\n  data (){\n    return {\n      camera: {\n        position: { x: .5, y: -5, z: 5 },\n        angle: { x: 0, y: 0, z: 0 }\n      },\n    };\n  },\n  mounted (){\n    plane.rotateX(Math.PI/2);\n    scene.add( plane );\n\n  },\n  methods: {\n    updateCamera({ position, angle }) {\n      // Update the camera position and angle based on the emitted data\n      this.camera.position = position;\n      this.camera.angle = angle;\n    },\n    logCameraPosition() {\n      console.log('Logging camera position');\n    },\n  },\n  /*\n  mounted() {\n  this.$nextTick(() => {\n    this.camera = this.$refs.arcball.camera;\n    console.log(\"Mounted camera: \", this.camera);\n  });\n  */\n\n}\n\n</script>\n\n<style>\nbody {\n  margin: 0;\n}\n\n#app {\n  margin: 0;\n  padding: 0;\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n}\n\n.drawing-input {\n  position: relative;\n}\n\n</style>"],"mappings":";;EAIOA,EAAE,EAAG;AAAkB;;;;;;6DAH5BC,YAAA,CAAYC,oBAAA,GACZD,YAAA,CAAeE,uBAAA,GACfF,YAAA,CAAiFG,yBAAA;IAAhE,iBAAe,EAAEC,KAAA,CAAAC,MAAM,CAACC,QAAQ;IAAG,cAAY,EAAEF,KAAA,CAAAC,MAAM,CAACE;gEACzEC,mBAAA,CAKQ,OALRC,UAKQ,GAJNT,YAAA,CAGkCU,kBAAA;IAHzBC,GAAG,EAAC,SAAS;IACnB,iBAAe,EAAEP,KAAA,CAAAC,MAAM,CAACC,QAAQ;IAChC,cAAY,EAAEF,KAAA,CAAAC,MAAM,CAACE,KAAK;IAC1BK,eAAc,EAAEC,QAAA,CAAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}