{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"grid-background\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1"],"sources":["/Users/olliearrison/Desktop/SURA/src/components/GridBackground.vue"],"sourcesContent":["<template>\n    <div id=\"grid-background\"></div>\n  </template>\n  \n  <script>\n  import * as THREE from 'three';\n  import InfiniteGridHelper from './InfiniteGridHelper';\n  \n  export default {\n    props: {\n      camera: {\n        type: THREE.PerspectiveCamera,\n        required: true\n      }\n    },\n    mounted() {\n      const scene = new THREE.Scene();\n      const grid = InfiniteGridHelper();\n      scene.add(grid);\n  \n      const renderer = new THREE.WebGLRenderer();\n      renderer.setSize(window.innerWidth, window.innerHeight);\n      document.getElementById('grid-background').appendChild(renderer.domElement);\n  \n      const animate = () => {\n        requestAnimationFrame(animate);\n        renderer.render(scene, this.camera);\n      };\n      animate();\n    }\n  };\n  </script>\n  \n\n<style>\n.grid {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n</style>"],"mappings":";;EACSA,EAAE,EAAC;AAAiB;;uBAAzBC,mBAAA,CAAgC,OAAhCC,UAAgC"},"metadata":{},"sourceType":"module","externalDependencies":[]}