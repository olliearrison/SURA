{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { WebGLRenderer } from 'three';\nimport { camera, drawSceneList, plane } from '../App.vue';\n//import { background } from '../components/GridBackground.vue';\n\nexport default {\n  data() {\n    return {\n      model: 0,\n      renderers: [],\n      layerLength: 1\n    };\n  },\n  props: {\n    updateLayers: Boolean\n  },\n  watch: {\n    newLayer(newVal) {\n      if (newVal) {\n        // Code to handle a new layer...\n        // Reset newLayer to false after handling it\n        this.$emit('reset-new-layer');\n      }\n    }\n  },\n  mounted() {\n    this.initializeScene();\n  },\n  methods: {\n    initializeScene() {\n      const cardElements = this.$refs.cardElements;\n      this.renderers = [];\n      cardElements.forEach(cardElement => {\n        const renderer = new WebGLRenderer({\n          antialias: true\n        });\n        renderer.setClearColor(0xffffff, 0);\n        const width = cardElement.offsetWidth;\n        const height = cardElement.offsetHeight;\n        renderer.setSize(width, height);\n        const cardContentElement = cardElement.querySelector('.card-content');\n        cardContentElement.appendChild(renderer.domElement);\n        this.renderers.push(renderer);\n      });\n      this.animate();\n    },\n    animate() {\n      requestAnimationFrame(this.animate);\n      const cardElements = this.$refs.cardElements;\n      cardElements.forEach((cardElement, index) => {\n        const renderer = this.renderers[index];\n        const scene = drawSceneList[0].remove(plane);\n        const cardCamera = camera;\n        const width = cardElement.offsetWidth;\n        const height = cardElement.offsetHeight;\n        renderer.setSize(width, height);\n        renderer.render(scene, cardCamera);\n      });\n    },\n    selectCard(index) {\n      this.model = index;\n      console.log('Selected Card Index:', index);\n    }\n  }\n};","map":{"version":3,"names":["WebGLRenderer","camera","drawSceneList","plane","data","model","renderers","layerLength","props","updateLayers","Boolean","watch","newLayer","newVal","$emit","mounted","initializeScene","methods","cardElements","$refs","forEach","cardElement","renderer","antialias","setClearColor","width","offsetWidth","height","offsetHeight","setSize","cardContentElement","querySelector","appendChild","domElement","push","animate","requestAnimationFrame","index","scene","remove","cardCamera","render","selectCard","console","log"],"sources":["/Users/olliearrison/Desktop/SURA/src/components/LayerViewer.vue"],"sourcesContent":["<template>\n    <div class=\"layer-viewer\">\n      <v-sheet class=\"mx-auto\" elevation=\"0\" max-width=\"800\">\n        <v-slide-group v-model=\"model\" class=\"pa-4\" show-arrows>\n          <v-slide-group-item v-for=\"(n, index) in 1\" :key=\"n\">\n            <div class=\"card-wrapper\" ref=\"cardElements\">\n              <v-card\n                width=\"100\"\n                height=\"100\"\n                :class=\"['transparent-card', { 'selected-card': index === model }]\"\n                color=\"blue-grey-lighten-3\"\n                class=\"ma-4\"\n                :variant=\"index === model ? 'outlined' : undefined\"\n                @click=\"selectCard(index)\"\n              >\n                <div class=\"card-content\">\n                  <div class=\"d-flex fill-height align-center justify-center\"></div>\n                </div>\n              </v-card>\n            </div>\n          </v-slide-group-item>\n        </v-slide-group>\n      </v-sheet>\n    </div>\n  </template>\n  \n  \n  <script>\n  import { WebGLRenderer } from 'three';\n  import { camera, drawSceneList, plane } from '../App.vue';\n  //import { background } from '../components/GridBackground.vue';\n  \n  export default {\n    data() {\n      return {\n        model: 0,\n        renderers: [],\n        layerLength: 1,\n      };\n    },\n    props: {\n        updateLayers: Boolean,\n    },\n    watch: {\n        newLayer(newVal) {\n            if (newVal) {\n                // Code to handle a new layer...\n                // Reset newLayer to false after handling it\n                this.$emit('reset-new-layer');\n                }\n            },\n    },\n    mounted() {\n      this.initializeScene();\n    },\n    methods: {\n      initializeScene() {\n        const cardElements = this.$refs.cardElements;\n        this.renderers = [];\n  \n        cardElements.forEach((cardElement) => {\n          const renderer = new WebGLRenderer({ antialias: true });\n          renderer.setClearColor(0xffffff, 0);\n          const width = cardElement.offsetWidth;\n          const height = cardElement.offsetHeight;\n          renderer.setSize(width, height);\n  \n          const cardContentElement = cardElement.querySelector('.card-content');\n          cardContentElement.appendChild(renderer.domElement);\n  \n          this.renderers.push(renderer);\n        });\n  \n        this.animate();\n      },\n      animate() {\n        requestAnimationFrame(this.animate);\n  \n        const cardElements = this.$refs.cardElements;\n        cardElements.forEach((cardElement, index) => {\n          const renderer = this.renderers[index];\n          const scene = drawSceneList[0].remove(plane);\n          const cardCamera = camera;\n  \n          const width = cardElement.offsetWidth;\n          const height = cardElement.offsetHeight;\n          renderer.setSize(width, height);\n  \n          renderer.render(scene, cardCamera);\n        });\n      },\n      selectCard(index) {\n        this.model = index;\n        console.log('Selected Card Index:', index);\n      },\n    },\n  };\n  </script>\n  \n  \n  \n  <style scoped>\n\n  .slide-group {\n    color: rgb(176, 190, 197);\n    z-index: 1100;\n  }\n  .layer-viewer {\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n    height: 6%;\n    z-index: 1100;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    color: rgb(176, 190, 197);\n  }\n  \n  .v-card {\n    background-color: transparent;\n    box-shadow: none;\n    color: rgb(176, 190, 197);\n  }\n  \n  .transparent-card {\n    background-color: transparent;\n  }\n\n  .v-sheet {\n    position: fixed;\n    bottom: 0;\n    background-color: rgba(1, 1, 1, 0.7);\n    color: rgb(176, 190, 197);\n    border-radius: 5px;\n    width: 50%;\n  }\n  \n  .card-wrapper {\n    display: inline-block;\n  }\n  \n  .card-content {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  </style>\n  "],"mappings":";AA4BE,SAASA,aAAY,QAAS,OAAO;AACrC,SAASC,MAAM,EAAEC,aAAa,EAAEC,KAAI,QAAS,YAAY;AACzD;;AAEA,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,CAAC;MACRC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACHC,YAAY,EAAEC;EAClB,CAAC;EACDC,KAAK,EAAE;IACHC,QAAQA,CAACC,MAAM,EAAE;MACb,IAAIA,MAAM,EAAE;QACR;QACA;QACA,IAAI,CAACC,KAAK,CAAC,iBAAiB,CAAC;MAC7B;IACJ;EACR,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACPD,eAAeA,CAAA,EAAG;MAChB,MAAME,YAAW,GAAI,IAAI,CAACC,KAAK,CAACD,YAAY;MAC5C,IAAI,CAACZ,SAAQ,GAAI,EAAE;MAEnBY,YAAY,CAACE,OAAO,CAAEC,WAAW,IAAK;QACpC,MAAMC,QAAO,GAAI,IAAItB,aAAa,CAAC;UAAEuB,SAAS,EAAE;QAAK,CAAC,CAAC;QACvDD,QAAQ,CAACE,aAAa,CAAC,QAAQ,EAAE,CAAC,CAAC;QACnC,MAAMC,KAAI,GAAIJ,WAAW,CAACK,WAAW;QACrC,MAAMC,MAAK,GAAIN,WAAW,CAACO,YAAY;QACvCN,QAAQ,CAACO,OAAO,CAACJ,KAAK,EAAEE,MAAM,CAAC;QAE/B,MAAMG,kBAAiB,GAAIT,WAAW,CAACU,aAAa,CAAC,eAAe,CAAC;QACrED,kBAAkB,CAACE,WAAW,CAACV,QAAQ,CAACW,UAAU,CAAC;QAEnD,IAAI,CAAC3B,SAAS,CAAC4B,IAAI,CAACZ,QAAQ,CAAC;MAC/B,CAAC,CAAC;MAEF,IAAI,CAACa,OAAO,CAAC,CAAC;IAChB,CAAC;IACDA,OAAOA,CAAA,EAAG;MACRC,qBAAqB,CAAC,IAAI,CAACD,OAAO,CAAC;MAEnC,MAAMjB,YAAW,GAAI,IAAI,CAACC,KAAK,CAACD,YAAY;MAC5CA,YAAY,CAACE,OAAO,CAAC,CAACC,WAAW,EAAEgB,KAAK,KAAK;QAC3C,MAAMf,QAAO,GAAI,IAAI,CAAChB,SAAS,CAAC+B,KAAK,CAAC;QACtC,MAAMC,KAAI,GAAIpC,aAAa,CAAC,CAAC,CAAC,CAACqC,MAAM,CAACpC,KAAK,CAAC;QAC5C,MAAMqC,UAAS,GAAIvC,MAAM;QAEzB,MAAMwB,KAAI,GAAIJ,WAAW,CAACK,WAAW;QACrC,MAAMC,MAAK,GAAIN,WAAW,CAACO,YAAY;QACvCN,QAAQ,CAACO,OAAO,CAACJ,KAAK,EAAEE,MAAM,CAAC;QAE/BL,QAAQ,CAACmB,MAAM,CAACH,KAAK,EAAEE,UAAU,CAAC;MACpC,CAAC,CAAC;IACJ,CAAC;IACDE,UAAUA,CAACL,KAAK,EAAE;MAChB,IAAI,CAAChC,KAAI,GAAIgC,KAAK;MAClBM,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEP,KAAK,CAAC;IAC5C;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}