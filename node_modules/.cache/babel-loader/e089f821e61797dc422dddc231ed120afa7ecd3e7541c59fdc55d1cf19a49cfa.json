{"ast":null,"code":"import { draw } from \"./DrawHelper.js\";\n//import * as THREE from \"three\";\n//import { renderer, scene, camera } from \"../App.vue\";\n\nexport default {\n  name: 'DrawingInput',\n  data() {\n    return {\n      isDrawing: false,\n      stroke: {\n        show_stroke: true,\n        lineWidth: .01,\n        color: 0x000000\n      }\n    };\n  },\n  mounted() {\n    // document.body \n\n    document.body.addEventListener('mouseup', () => {\n      this.handleMouseUp();\n    });\n    document.body.addEventListener('mousedown', event => {\n      console.log(this.valid(event));\n      this.handleMouseDown(event);\n    });\n    document.body.addEventListener('mousemove', event => {\n      this.handleMouseMove(event);\n    });\n  },\n  methods: {\n    valid(event) {\n      return event.target.className === \"drawing-input\";\n    },\n    handleMouseMove(event) {\n      if (!this.isDrawing) return;\n      let x = event.clientX;\n      let y = event.clientY;\n      // Assuming a 2D drawing, so Z is constant, but this could be modified as per the requirement.\n      let z = 0;\n      draw.onMove(x, y, z);\n    },\n    handleMouseDown(event) {\n      console.log(\"mouse down\");\n      this.isDrawing = true;\n      let x = event.clientX;\n      let y = event.clientY;\n      let z = 0;\n      draw.onStart(x, y, z, this.stroke);\n    },\n    handleMouseUp() {\n      this.isDrawing = false;\n      draw.onEnd();\n    }\n  }\n};","map":{"version":3,"names":["draw","name","data","isDrawing","stroke","show_stroke","lineWidth","color","mounted","document","body","addEventListener","handleMouseUp","event","console","log","valid","handleMouseDown","handleMouseMove","methods","target","className","x","clientX","y","clientY","z","onMove","onStart","onEnd"],"sources":["/Users/olliearrison/Desktop/SURA/src/components/DrawingInput.vue"],"sourcesContent":["<template>\n    <div class=\"drawing-input\" ></div>\n</template>\n  \n<script>\nimport { draw } from \"./DrawHelper.js\";\n//import * as THREE from \"three\";\n//import { renderer, scene, camera } from \"../App.vue\";\n\nexport default {\n    name: 'DrawingInput',\n\n    data(){\n        return {\n            isDrawing: false,\n            stroke: {\n                show_stroke: true,\n                lineWidth: .01,\n                color: 0x000000,\n            }\n        };\n    },\n    mounted (){\n        // document.body \n\n\n        document.body.addEventListener('mouseup', () => {\n        this.handleMouseUp();\n        });\n\n        document.body.addEventListener('mousedown', (event) => {\n            console.log(this.valid(event));\n            this.handleMouseDown(event);\n        });\n\n        document.body.addEventListener('mousemove', (event) => {\n        this.handleMouseMove(event);\n        });\n\n    },\n    methods: {\n        valid(event) {\n            return event.target.className === \"drawing-input\";\n        },\n        handleMouseMove(event) {\n            if (!this.isDrawing) return;\n            let x = event.clientX;\n            let y = event.clientY;\n            // Assuming a 2D drawing, so Z is constant, but this could be modified as per the requirement.\n            let z = 0;\n            draw.onMove(x, y, z);\n        },\n        handleMouseDown(event) {\n            console.log(\"mouse down\");\n            this.isDrawing = true;\n            let x = event.clientX;\n            let y = event.clientY;\n            let z = 0;\n            draw.onStart(x, y, z, this.stroke);\n        },\n        handleMouseUp() {\n            this.isDrawing = false;\n            draw.onEnd();\n        }\n    }\n}\n</script>\n\n<style scoped>\n.drawing-input {\n    width: 100%;\n    height: 100%;\n}\n</style>\n"],"mappings":"AAKA,SAASA,IAAG,QAAS,iBAAiB;AACtC;AACA;;AAEA,eAAe;EACXC,IAAI,EAAE,cAAc;EAEpBC,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,SAAS,EAAE,KAAK;MAChBC,MAAM,EAAE;QACJC,WAAW,EAAE,IAAI;QACjBC,SAAS,EAAE,GAAG;QACdC,KAAK,EAAE;MACX;IACJ,CAAC;EACL,CAAC;EACDC,OAAMA,CAAA,EAAI;IACN;;IAGAC,QAAQ,CAACC,IAAI,CAACC,gBAAgB,CAAC,SAAS,EAAE,MAAM;MAChD,IAAI,CAACC,aAAa,CAAC,CAAC;IACpB,CAAC,CAAC;IAEFH,QAAQ,CAACC,IAAI,CAACC,gBAAgB,CAAC,WAAW,EAAGE,KAAK,IAAK;MACnDC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC,CAAC;MAC9B,IAAI,CAACI,eAAe,CAACJ,KAAK,CAAC;IAC/B,CAAC,CAAC;IAEFJ,QAAQ,CAACC,IAAI,CAACC,gBAAgB,CAAC,WAAW,EAAGE,KAAK,IAAK;MACvD,IAAI,CAACK,eAAe,CAACL,KAAK,CAAC;IAC3B,CAAC,CAAC;EAEN,CAAC;EACDM,OAAO,EAAE;IACLH,KAAKA,CAACH,KAAK,EAAE;MACT,OAAOA,KAAK,CAACO,MAAM,CAACC,SAAQ,KAAM,eAAe;IACrD,CAAC;IACDH,eAAeA,CAACL,KAAK,EAAE;MACnB,IAAI,CAAC,IAAI,CAACV,SAAS,EAAE;MACrB,IAAImB,CAAA,GAAIT,KAAK,CAACU,OAAO;MACrB,IAAIC,CAAA,GAAIX,KAAK,CAACY,OAAO;MACrB;MACA,IAAIC,CAAA,GAAI,CAAC;MACT1B,IAAI,CAAC2B,MAAM,CAACL,CAAC,EAAEE,CAAC,EAAEE,CAAC,CAAC;IACxB,CAAC;IACDT,eAAeA,CAACJ,KAAK,EAAE;MACnBC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MACzB,IAAI,CAACZ,SAAQ,GAAI,IAAI;MACrB,IAAImB,CAAA,GAAIT,KAAK,CAACU,OAAO;MACrB,IAAIC,CAAA,GAAIX,KAAK,CAACY,OAAO;MACrB,IAAIC,CAAA,GAAI,CAAC;MACT1B,IAAI,CAAC4B,OAAO,CAACN,CAAC,EAAEE,CAAC,EAAEE,CAAC,EAAE,IAAI,CAACtB,MAAM,CAAC;IACtC,CAAC;IACDQ,aAAaA,CAAA,EAAG;MACZ,IAAI,CAACT,SAAQ,GAAI,KAAK;MACtBH,IAAI,CAAC6B,KAAK,CAAC,CAAC;IAChB;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}