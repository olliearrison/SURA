{"ast":null,"code":"import { WebGLRenderer } from 'three';\nimport { camera, drawSceneList, plane } from '../App.vue';\nexport default {\n  data() {\n    return {\n      model: null\n    };\n  },\n  mounted() {\n    this.initializeScene();\n  },\n  methods: {\n    initializeScene() {\n      // Create a scene\n\n      // Create a camera\n\n      // Create a renderer\n      const renderer = new WebGLRenderer({\n        antialias: true\n      });\n      const cardElements = this.$refs.cardElements;\n      const width = cardElements[0].offsetWidth;\n      const height = cardElements[0].offsetHeight;\n      renderer.setSize(width, height);\n      cardElements.forEach(cardElement => {\n        const cardContentElement = cardElement.querySelector('.card-content');\n        cardContentElement.appendChild(renderer.domElement);\n      });\n\n      // Render the scene\n      function animate() {\n        requestAnimationFrame(animate);\n        renderer.render(drawSceneList[0].remove(plane), camera);\n      }\n      animate();\n    }\n  }\n};","map":{"version":3,"names":["WebGLRenderer","camera","drawSceneList","plane","data","model","mounted","initializeScene","methods","renderer","antialias","cardElements","$refs","width","offsetWidth","height","offsetHeight","setSize","forEach","cardElement","cardContentElement","querySelector","appendChild","domElement","animate","requestAnimationFrame","render","remove"],"sources":["/Users/olliearrison/Desktop/SURA/src/components/LayerViewer.vue"],"sourcesContent":["<template>\n    <div class=\"layer-viewer\">\n      <v-sheet class=\"mx-auto\" elevation=\"0\" max-width=\"800\">\n        <v-slide-group\n          v-model=\"model\"\n          class=\"pa-4\"\n          show-arrows\n        >\n          <v-slide-group-item\n            v-for=\"n in 15\"\n            :key=\"n\"\n          >\n            <div class=\"card-wrapper\" ref=\"cardElements\">\n              <v-card\n                width=\"100\"\n                height=\"100\"\n                class=\"transparent-card ma-4\"\n              >\n                <div class=\"card-content\">\n                  <div class=\"d-flex fill-height align-center justify-center\">\n                  </div>\n                </div>\n              </v-card>\n            </div>\n          </v-slide-group-item>\n        </v-slide-group>\n      </v-sheet>\n    </div>\n  </template>\n  \n  <script>\n  import { WebGLRenderer } from 'three';\n  import { camera, drawSceneList, plane } from '../App.vue';\n  \n  export default {\n    data() {\n      return {\n        model: null,\n      };\n    },\n    mounted() {\n      this.initializeScene();\n    },\n    methods: {\n      initializeScene() {\n        // Create a scene\n  \n        // Create a camera\n       \n  \n        // Create a renderer\n        const renderer = new WebGLRenderer({ antialias: true });\n        const cardElements = this.$refs.cardElements;\n        const width = cardElements[0].offsetWidth;\n        const height = cardElements[0].offsetHeight;\n        renderer.setSize(width, height);\n        cardElements.forEach((cardElement) => {\n          const cardContentElement = cardElement.querySelector('.card-content');\n          cardContentElement.appendChild(renderer.domElement);\n        });\n  \n        // Render the scene\n        function animate() {\n          requestAnimationFrame(animate);\n          \n          renderer.render(drawSceneList[0].remove(plane), camera);\n        }\n        animate();\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n\n  .slide-group {\n    color: rgb(176, 190, 197);\n    z-index: 1100;\n  }\n  .layer-viewer {\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n    height: 6%;\n    z-index: 1100;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    color: rgb(176, 190, 197);\n  }\n  \n  .v-card {\n    background-color: transparent;\n    box-shadow: none;\n    color: rgb(176, 190, 197);\n  }\n  \n  .transparent-card {\n    background-color: transparent;\n    border: none;\n  }\n\n  .v-sheet {\n    position: fixed;\n    bottom: 0;\n    background-color: rgba(1, 1, 1, 0.7);\n    color: rgb(176, 190, 197);\n    border-radius: 5px;\n    width: 50%;\n    height:\n  }\n  \n  .card-wrapper {\n    display: inline-block;\n  }\n  \n  .card-content {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  </style>\n  "],"mappings":"AA+BE,SAASA,aAAY,QAAS,OAAO;AACrC,SAASC,MAAM,EAAEC,aAAa,EAAEC,KAAI,QAAS,YAAY;AAEzD,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,eAAe,CAAC,CAAC;EACxB,CAAC;EACDC,OAAO,EAAE;IACPD,eAAeA,CAAA,EAAG;MAChB;;MAEA;;MAGA;MACA,MAAME,QAAO,GAAI,IAAIT,aAAa,CAAC;QAAEU,SAAS,EAAE;MAAK,CAAC,CAAC;MACvD,MAAMC,YAAW,GAAI,IAAI,CAACC,KAAK,CAACD,YAAY;MAC5C,MAAME,KAAI,GAAIF,YAAY,CAAC,CAAC,CAAC,CAACG,WAAW;MACzC,MAAMC,MAAK,GAAIJ,YAAY,CAAC,CAAC,CAAC,CAACK,YAAY;MAC3CP,QAAQ,CAACQ,OAAO,CAACJ,KAAK,EAAEE,MAAM,CAAC;MAC/BJ,YAAY,CAACO,OAAO,CAAEC,WAAW,IAAK;QACpC,MAAMC,kBAAiB,GAAID,WAAW,CAACE,aAAa,CAAC,eAAe,CAAC;QACrED,kBAAkB,CAACE,WAAW,CAACb,QAAQ,CAACc,UAAU,CAAC;MACrD,CAAC,CAAC;;MAEF;MACA,SAASC,OAAOA,CAAA,EAAG;QACjBC,qBAAqB,CAACD,OAAO,CAAC;QAE9Bf,QAAQ,CAACiB,MAAM,CAACxB,aAAa,CAAC,CAAC,CAAC,CAACyB,MAAM,CAACxB,KAAK,CAAC,EAAEF,MAAM,CAAC;MACzD;MACAuB,OAAO,CAAC,CAAC;IACX;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}