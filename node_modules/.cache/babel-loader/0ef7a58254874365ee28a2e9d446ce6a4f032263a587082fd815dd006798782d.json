{"ast":null,"code":"import LayerViewer from \"./LayerViewer.vue\";\nimport { draw } from \"./DrawHelper.js\";\n//import { HistoryController } from \"./HistoryController.js\";\nimport { arcRenderer, frames } from '../App.vue';\nimport { camera } from './Camera.js';\n//import { FrameController } from './components/FrameController';\n//import * as THREE from 'three';\n\nexport let cameraDistance = 4;\nexport let canvasIndex = 0;\nlet drawing = false;\nlet selecting = false;\nlet rotatingInterval = null; // Interval to rotate index\n//let historyController = new HistoryController();\n\nexport default {\n  name: 'DrawingInput',\n  components: {\n    LayerViewer\n  },\n  data() {\n    return {\n      icons: ['mdi-square-outline', 'mdi-sphere', 'mdi-cylinder'],\n      currentIconIndex: 0,\n      isDrawing: false,\n      rotatingCondition: false,\n      stroke: {\n        show_stroke: true,\n        lineWidth: .25 * .5,\n        color: 0x000000,\n        eraser: false\n      },\n      showColorPicker: false,\n      onionSkin: false,\n      canUndo: false,\n      canRedo: false,\n      sizeMultiplier: .5,\n      newMode: false,\n      value: 25,\n      cameraDistance: 4\n    };\n  },\n  computed: {\n    color: {\n      get() {\n        // Convert color from 0xRRGGBB to #RRGGBB when getting\n        return '#' + this.stroke.color.toString(16).padStart(6, '0');\n      },\n      set(value) {\n        // Convert color from #RRGGBB to 0xRRGGBB when setting\n        this.stroke.color = parseInt(value.slice(1), 16);\n      }\n    }\n  },\n  mounted() {\n    this.$watch(() => this.rotatingCondition, newValue => {\n      frames.calculateAnimation();\n      if (newValue) {\n        if (rotatingInterval == null) {\n          // Rotate the index 5 times per second\n          rotatingInterval = setInterval(() => {\n            frames.updateAnimationFrame();\n            const layerViewer = this.$refs.layerViewer;\n            layerViewer.updateLayers();\n          }, 1000 / frames.animationDetail);\n        }\n      } else {\n        // Stop rotating the index\n        if (rotatingInterval != null) {\n          clearInterval(rotatingInterval);\n          rotatingInterval = null;\n        }\n      }\n    });\n    document.body.addEventListener('contextmenu', event => {\n      drawing = false;\n      selecting = true;\n      event.preventDefault();\n      this.addGuidePoint(event);\n      selecting = false;\n    });\n    document.body.addEventListener('mouseup', event => {\n      const x = event.clientX;\n      const y = event.clientY;\n      if (this.inCanvas(x, y) && drawing && !selecting) {\n        this.handleMouseUp();\n        drawing = false;\n      }\n    });\n    document.body.addEventListener('mousedown', event => {\n      const x = event.clientX;\n      const y = event.clientY;\n      if (this.inCanvas(x, y) && !selecting) {\n        drawing = true;\n        this.handleMouseDown(x, y);\n      }\n    });\n    document.body.addEventListener('touchstart', event => {\n      const x = event.targetTouches[0] ? event.targetTouches[0].pageX : event.changedTouches[event.changedTouches.length - 1].pageX;\n      const y = event.targetTouches[0] ? event.targetTouches[0].pageY : event.changedTouches[event.changedTouches.length - 1].pageY;\n      if (this.inCanvas(x, y) && !selecting) {\n        drawing = true;\n        this.handleMouseDown(x, y);\n      }\n      drawing = true;\n    });\n    document.body.addEventListener('touchmove', event => {\n      const x = event.targetTouches[0] ? event.targetTouches[0].pageX : event.changedTouches[event.changedTouches.length - 1].pageX;\n      const y = event.targetTouches[0] ? event.targetTouches[0].pageY : event.changedTouches[event.changedTouches.length - 1].pageY;\n      if (this.inCanvas(x, y)) {\n        //console.log(\"not getting other click\", this.isDrawing);\n        if (drawing && !selecting) {\n          this.handleMouseMove(x, y);\n        }\n      } else {\n        if (drawing) {\n          this.handleMouseUp();\n          drawing = false;\n        }\n      }\n    });\n    document.body.addEventListener('touchend', event => {\n      const x = event.targetTouches[0] ? event.targetTouches[0].pageX : event.changedTouches[event.changedTouches.length - 1].pageX;\n      const y = event.targetTouches[0] ? event.targetTouches[0].pageY : event.changedTouches[event.changedTouches.length - 1].pageY;\n      if (this.inCanvas(x, y) && drawing && !selecting) {\n        this.handleMouseUp();\n        drawing = false;\n      }\n    });\n    document.body.addEventListener('pointermove', event => {\n      if (event.pressure > 0) {\n        this.stroke.lineWidth = event.pressure * .5 * this.sizeMultiplier;\n      }\n    });\n    document.body.addEventListener('mousemove', event => {\n      //console.log(event.pressure);\n      //console.log(event);\n      const x = event.clientX;\n      const y = event.clientY;\n      if (this.inCanvas(x, y)) {\n        //console.log(\"not getting other click\", this.isDrawing);\n        if (drawing && !selecting) {\n          this.handleMouseMove(x, y);\n        }\n      } else {\n        if (drawing) {\n          this.handleMouseUp();\n          drawing = false;\n        }\n      }\n    });\n  },\n  methods: {\n    updateCameraDistance() {\n      console.log(\"updating\", cameraDistance);\n      this.cameraDistance = cameraDistance;\n    },\n    goToGuide() {\n      frames.updateGuide();\n    },\n    addGuidePoint(event) {\n      const result = draw.getCoors(event.clientX, event.clientY);\n      if (result) {\n        frames.getFrame().setGuidePoint(result);\n      }\n    },\n    inCanvas(x, y) {\n      var rect = arcRenderer.domElement.getBoundingClientRect();\n      var centerX = rect.left + rect.width / 2;\n      var centerY = rect.top + rect.height / 2;\n      const dx = x - centerX;\n      const dy = y - centerY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      if (distance < rect.width / 2) {\n        return false;\n      }\n      return true;\n    },\n    handleMouseMove(x, y) {\n      //console.log(\"draw\", this.isDrawing);\n      if (!this.isDrawing) return;\n      // Assuming a 2D drawing, so Z is constant, but this could be modified as per the requirement.\n      draw.onMove(x, y, this.stroke);\n    },\n    handleMouseDown(x, y) {\n      //console.log(\"mouse down\");\n      this.isDrawing = true;\n      //this.updateSizeMultiplier();\n      draw.onStart(x, y, this.stroke);\n      this.canUndo = frames.getFrame().history.canUndo();\n      this.canRedo = frames.getFrame().history.canRedo();\n    },\n    handleMouseUp() {\n      this.isDrawing = false;\n      let result = draw.onEnd(this.stroke);\n      if (result[0] != false) {\n        frames.getFrame().history.action(result);\n      }\n      this.canUndo = frames.getFrame().history.canUndo();\n      this.canRedo = frames.getFrame().history.canRedo();\n\n      //console.log(this.canUndo);\n    },\n\n    toggleEraserMode() {\n      this.stroke.eraser = !this.stroke.eraser;\n    },\n    toggleColorSelect() {\n      console.log(this.showColorPicker);\n      this.showColorPicker = !this.showColorPicker;\n    },\n    toggleOnionSkin() {\n      this.onionSkin = !this.onionSkin;\n      frames.onion = !frames.onion;\n    },\n    toggleNewMode() {\n      this.newMode = !this.newMode;\n    },\n    backward() {\n      frames.delFrame();\n\n      // Call the function in the child component\n      const layerViewer = this.$refs.layerViewer;\n      layerViewer.updateLayers();\n    },\n    forward() {\n      frames.addFrame();\n      const layerViewer = this.$refs.layerViewer;\n\n      // Call the function in the child component\n      layerViewer.updateLayers();\n    },\n    play() {\n      this.rotatingCondition = !this.rotatingCondition;\n      this.isDrawing = this.rotatingCondition;\n      frames.play = this.rotatingCondition;\n    },\n    undo() {\n      frames.getFrame().history.undo();\n      this.canRedo = frames.getFrame().history.canRedo();\n    },\n    redo() {\n      frames.getFrame().history.redo();\n      this.canUndo = frames.getFrame().history.canUndo();\n    },\n    updateSizeMultiplier() {\n      // .5 is the constant multiplier\n      // this is multiplied by .5, the default pressure\n      this.stroke.lineWidth = .25 * this.sizeMultiplier;\n    },\n    handleCardSelected(selectedIndex) {\n      // Use the selected index as needed\n      console.log('Selected index:', selectedIndex);\n      frames.setIndex(selectedIndex);\n    },\n    nextIcon() {\n      this.currentIconIndex = (this.currentIconIndex + 1) % this.icons.length;\n      console.log(\"index changed\", this.currentIconIndex);\n      canvasIndex = this.currentIconIndex;\n    },\n    loadCameraPosition() {\n      console.log(\"saving position\");\n      const cameraPosition = camera.position.clone();\n      const cameraAngle = camera.rotation.clone();\n      frames.setPos(cameraPosition);\n      frames.setAngle(cameraAngle);\n    }\n  }\n};","map":{"version":3,"names":["LayerViewer","draw","arcRenderer","frames","camera","cameraDistance","canvasIndex","drawing","selecting","rotatingInterval","name","components","data","icons","currentIconIndex","isDrawing","rotatingCondition","stroke","show_stroke","lineWidth","color","eraser","showColorPicker","onionSkin","canUndo","canRedo","sizeMultiplier","newMode","value","computed","get","toString","padStart","set","parseInt","slice","mounted","$watch","newValue","calculateAnimation","setInterval","updateAnimationFrame","layerViewer","$refs","updateLayers","animationDetail","clearInterval","document","body","addEventListener","event","preventDefault","addGuidePoint","x","clientX","y","clientY","inCanvas","handleMouseUp","handleMouseDown","targetTouches","pageX","changedTouches","length","pageY","handleMouseMove","pressure","methods","updateCameraDistance","console","log","goToGuide","updateGuide","result","getCoors","getFrame","setGuidePoint","rect","domElement","getBoundingClientRect","centerX","left","width","centerY","top","height","dx","dy","distance","Math","sqrt","onMove","onStart","history","onEnd","action","toggleEraserMode","toggleColorSelect","toggleOnionSkin","onion","toggleNewMode","backward","delFrame","forward","addFrame","play","undo","redo","updateSizeMultiplier","handleCardSelected","selectedIndex","setIndex","nextIcon","loadCameraPosition","cameraPosition","position","clone","cameraAngle","rotation","setPos","setAngle"],"sources":["C:\\Users\\peopl\\Documents\\Arduino\\6d2\\SURA\\src\\components\\DrawingInput.vue"],"sourcesContent":["<template>\r\n    <div class=\"drawing-input\" >\r\n        <LayerViewer @card-selected=\"handleCardSelected\" ref=\"layerViewer\"/>\r\n        <v-app>\r\n            <v-color-picker v-if=\"showColorPicker\" v-model=\"color\"></v-color-picker>\r\n\r\n            <v-app-bar class=\"small-bar justify-center\" >\r\n                <div class=\"spacer\"></div>\r\n                <v-btn icon class=\"fixed-button\" @click=\"toggleColorSelect\">\r\n                    <v-icon>mdi-home</v-icon>\r\n                </v-btn>\r\n                <div class=\"spacer\"></div>\r\n                <v-btn icon class=\"fixed-button\">\r\n                    <v-icon>mdi-file</v-icon>\r\n                </v-btn>\r\n                <v-spacer></v-spacer>\r\n                <v-tooltip bottom>\r\n                    <template v-slot:activator=\"{ attrs }\">\r\n                                <v-slider\r\n                                                show-ticks\r\n                                                class=\"my-slider\"\r\n                                                color=\"blue-grey-lighten-3\"\r\n                                                density=\"compact\"\r\n                                                track-size=\"15\"\r\n                                                v-model=\"cameraDistance\"\r\n                                                label=\"Regular\"\r\n                                                :step=\"0.1\"\r\n                                                :min=\"0.4\"\r\n                                                :max=\"10\"\r\n                                                v-bind=\"attrs\"\r\n                                               \r\n                                                @click=\"updateCameraDistance\"\r\n                                                >\r\n                                </v-slider>\r\n                            </template>\r\n                    <span>Current Value: </span>\r\n                </v-tooltip>\r\n                <div class=\"spacer\"></div>\r\n                <v-slider\r\n                                show-ticks\r\n                                class=\"my-slider\"\r\n                                color=\"blue-grey-lighten-3\"\r\n                                density=\"compact\"\r\n                                track-size=\"15\"\r\n                                v-model=\"sizeMultiplier\"\r\n                                :step=\"0.1\"\r\n                                :min=\"0.4\"\r\n                                :max=\"1.5\"\r\n                                @click=\"updateSizeMultiplier\"\r\n                                >\r\n                </v-slider>\r\n                <div class=\"spacer\"></div>\r\n                <v-slider\r\n                                show-ticks\r\n                                class=\"my-slider\"\r\n                                color=\"blue-grey-lighten-3\"\r\n                                density=\"compact\"\r\n                                track-size=\"15\"\r\n                                v-model=\"sizeMultiplier\"\r\n                                :step=\"0.1\"\r\n                                :min=\"0.4\"\r\n                                :max=\"1.5\"\r\n                                @click=\"updateSizeMultiplier\"\r\n                                >\r\n                </v-slider>\r\n                <div class=\"spacer\"></div>\r\n                <v-btn icon class=\"fixed-button\" @click=\"toggleNewMode\">\r\n                    <v-icon>\r\n                        {{ newMode ? 'mdi-toggle-switch-outline' : 'mdi-toggle-switch-off-outline' }}\r\n                    </v-icon>\r\n                </v-btn>\r\n                <div class=\"spacer\"></div>\r\n                <v-btn icon class=\"fixed-button\" @click=\"loadCameraPosition\">\r\n                    <v-icon>mdi-target</v-icon>\r\n                </v-btn>\r\n                <div class=\"spacer\"></div>\r\n                <v-btn icon class=\"fixed-button\" @click=\"goToGuide\">\r\n                    <v-icon>mdi-target-variant</v-icon>\r\n                </v-btn>\r\n                <div class=\"spacer\"></div>\r\n                <v-btn icon class=\"fixed-button\" ref=\"eraserButton\" @click=\"toggleEraserMode\">\r\n                    <v-icon>\r\n                    {{ stroke.eraser ? 'mdi-eraser' : 'mdi-brush-outline' }}\r\n                    </v-icon>\r\n                </v-btn>\r\n                <div class=\"spacer\"></div>\r\n                <v-btn icon class=\"fixed-button\">\r\n                    <v-icon>mdi-layers-outline</v-icon>\r\n                </v-btn>\r\n                <div class=\"spacer\"></div>\r\n                <v-btn icon class=\"fixed-button\" @click=\"toggleOnionSkin\">\r\n                    <v-icon>\r\n                        {{ onionSkin ? 'mdi-animation' : 'mdi-animation-outline' }}\r\n                    </v-icon>\r\n                </v-btn>\r\n                \r\n            </v-app-bar>\r\n\r\n        \r\n\r\n\r\n            <v-card class=\"pa-2\" outlined>\r\n                <v-container class=\"align-center\">\r\n                    <v-row justify=\"center\">\r\n                        <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n                            <v-slider\r\n                                show-ticks\r\n                                class=\"my-slider\"\r\n                                color=\"blue-grey-lighten-3\"\r\n                                density=\"compact\"\r\n                                track-size=\"15\"\r\n                                direction=\"vertical\"\r\n                                v-model=\"sizeMultiplier\"\r\n                                :step=\"0.1\"\r\n                                :min=\"0.4\"\r\n                                :max=\"1.5\"\r\n                                @click=\"updateSizeMultiplier\"\r\n                                >\r\n                            </v-slider>\r\n                        </v-col>\r\n                    </v-row>\r\n\r\n                    <v-row justify=\"center\">\r\n                        <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n                            <v-btn icon class=\"fixed-button\" @click=\"showColorPicker = !showColorPicker\">\r\n                                        <v-icon>mdi-palette</v-icon>\r\n                            </v-btn>\r\n                        </v-col>\r\n                    </v-row>\r\n\r\n                    <v-row justify=\"center\">\r\n                        <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n                            <v-btn icon class=\"fixed-button\" @click=\"nextIcon\">\r\n                                <v-icon>{{ icons[currentIconIndex] }}</v-icon>\r\n                            </v-btn>\r\n                        </v-col>\r\n                    </v-row>\r\n\r\n                    <v-row justify=\"center\">\r\n                        <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n                            <v-btn icon class=\"fixed-button custom-button\" :style=\"{ color: canRedo ? '#B0BEC5' : '#78909C'}\" @click=\"redo\">\r\n                                        <v-icon>mdi-arrow-u-right-top</v-icon>\r\n                            </v-btn>\r\n                        </v-col>\r\n                    </v-row>\r\n\r\n                    <v-row justify=\"center\">\r\n                        <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n                            <v-btn icon class=\"fixed-button custom-button\" :style=\"{ color: canUndo ? '#B0BEC5' : '#78909C'}\" @click=\"undo\">\r\n                                        <v-icon>mdi-arrow-u-left-top</v-icon>\r\n                            </v-btn>\r\n                        </v-col>\r\n                    </v-row>\r\n                </v-container>\r\n            </v-card>\r\n            \r\n            \r\n            <v-row class=\"bottom-buttons\">\r\n                <v-btn class=\"fixed-button\" @click=\"backward\" large>\r\n                    <v-icon>\r\n                        mdi-minus\r\n                    </v-icon>\r\n                </v-btn>\r\n                <v-spacer></v-spacer>\r\n                <v-btn class=\"fixed-button\" @click=\"forward\" large>\r\n                    <v-icon>\r\n                        mdi-plus\r\n                    </v-icon>\r\n                </v-btn>\r\n                <v-spacer></v-spacer>\r\n                <v-btn class=\"fixed-button\" @click=\"play\" large>\r\n                    <v-icon>\r\n                        {{ rotatingCondition ? 'mdi-pause' : 'mdi-play' }}\r\n                    </v-icon>\r\n                </v-btn>\r\n            </v-row>\r\n    </v-app>\r\n    </div>\r\n    \r\n</template>\r\n  \r\n<script>\r\nimport LayerViewer from \"./LayerViewer.vue\";\r\nimport { draw } from \"./DrawHelper.js\";\r\n//import { HistoryController } from \"./HistoryController.js\";\r\nimport { arcRenderer, frames } from '../App.vue';\r\nimport { camera } from './Camera.js';\r\n//import { FrameController } from './components/FrameController';\r\n//import * as THREE from 'three';\r\n\r\nexport let cameraDistance = 4;\r\nexport let canvasIndex = 0;\r\n\r\nlet drawing = false;\r\nlet selecting = false;\r\n\r\nlet rotatingInterval = null;  // Interval to rotate index\r\n//let historyController = new HistoryController();\r\n\r\nexport default {\r\n    name: 'DrawingInput',\r\n    components: {\r\n        LayerViewer,\r\n    },\r\n\r\n    data(){\r\n        return {\r\n            icons: ['mdi-square-outline', 'mdi-sphere', 'mdi-cylinder'],\r\n            currentIconIndex: 0,\r\n            isDrawing: false,\r\n            rotatingCondition: false,\r\n            stroke: {\r\n                show_stroke: true,\r\n                lineWidth: .25 * .5,\r\n                color: 0x000000,\r\n                eraser: false,\r\n                \r\n                \r\n            },\r\n            showColorPicker: false,\r\n            onionSkin: false,\r\n            canUndo: false,\r\n            canRedo: false,\r\n            sizeMultiplier: .5,\r\n            newMode: false,\r\n            value: 25,\r\n            cameraDistance: 4,\r\n        };\r\n    },\r\n    computed: {\r\n        color: {\r\n        get() {\r\n            // Convert color from 0xRRGGBB to #RRGGBB when getting\r\n            return '#' + this.stroke.color.toString(16).padStart(6, '0');\r\n        },\r\n        set(value) {\r\n            // Convert color from #RRGGBB to 0xRRGGBB when setting\r\n            this.stroke.color = parseInt(value.slice(1), 16);\r\n        },\r\n        },\r\n    },\r\n    mounted (){\r\n        this.$watch(() => this.rotatingCondition, (newValue) => {\r\n            frames.calculateAnimation();\r\n\r\n            if(newValue){\r\n                if(rotatingInterval == null){\r\n                    // Rotate the index 5 times per second\r\n                    rotatingInterval = setInterval(() => {\r\n                        frames.updateAnimationFrame();\r\n                        const layerViewer = this.$refs.layerViewer;\r\n                        layerViewer.updateLayers();\r\n                    }, 1000/(frames.animationDetail));\r\n                }\r\n            }else{\r\n                // Stop rotating the index\r\n                if(rotatingInterval != null){\r\n                    clearInterval(rotatingInterval);\r\n                    rotatingInterval = null;\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        document.body.addEventListener('contextmenu', (event) => {\r\n            drawing = false;\r\n            selecting = true;\r\n            event.preventDefault();\r\n\r\n            this.addGuidePoint(event);\r\n            selecting = false;\r\n        });\r\n\r\n\r\n        document.body.addEventListener('mouseup', (event) => {\r\n            const x = event.clientX;\r\n            const y = event.clientY;\r\n            if (this.inCanvas(x, y) && drawing && !selecting){\r\n                this.handleMouseUp();\r\n                drawing = false;\r\n            }\r\n        });\r\n\r\n        document.body.addEventListener('mousedown', (event) => {\r\n            const x = event.clientX;\r\n            const y = event.clientY;\r\n            if (this.inCanvas(x, y) && !selecting) {\r\n                drawing = true;\r\n                this.handleMouseDown(x, y);\r\n            }\r\n            \r\n        });\r\n\r\n        document.body.addEventListener('touchstart', (event) => {\r\n            const x = (event.targetTouches[0] ? event.targetTouches[0].pageX : event.changedTouches[event.changedTouches.length-1].pageX);\r\n            const y = (event.targetTouches[0] ? event.targetTouches[0].pageY : event.changedTouches[event.changedTouches.length-1].pageY);\r\n\r\n            if (this.inCanvas(x, y) && !selecting) {\r\n                drawing = true;\r\n                this.handleMouseDown(x, y);\r\n            }\r\n\r\n            drawing = true;\r\n            \r\n        });\r\n\r\n        document.body.addEventListener('touchmove', (event) => {\r\n            const x = (event.targetTouches[0] ? event.targetTouches[0].pageX : event.changedTouches[event.changedTouches.length-1].pageX);\r\n            const y = (event.targetTouches[0] ? event.targetTouches[0].pageY : event.changedTouches[event.changedTouches.length-1].pageY);\r\n\r\n\r\n            if (this.inCanvas(x, y)) {\r\n                //console.log(\"not getting other click\", this.isDrawing);\r\n                if (drawing && !selecting) {\r\n                    this.handleMouseMove(x, y);\r\n                }\r\n            } else {\r\n                if (drawing){\r\n                    this.handleMouseUp();\r\n                    drawing = false;\r\n                }\r\n            }\r\n        });\r\n\r\n        document.body.addEventListener('touchend', (event) => {\r\n            const x = (event.targetTouches[0] ? event.targetTouches[0].pageX : event.changedTouches[event.changedTouches.length-1].pageX);\r\n            const y = (event.targetTouches[0] ? event.targetTouches[0].pageY : event.changedTouches[event.changedTouches.length-1].pageY);\r\n\r\n            if (this.inCanvas(x, y) && drawing && !selecting){\r\n                this.handleMouseUp();\r\n                drawing = false;\r\n            }\r\n        });\r\n\r\n        document.body.addEventListener('pointermove', (event) => {\r\n            \r\n            if (event.pressure > 0){\r\n            \r\n                this.stroke.lineWidth = event.pressure * .5 * this.sizeMultiplier;\r\n            }\r\n\r\n\r\n            \r\n\r\n        });\r\n\r\n        document.body.addEventListener('mousemove', (event) => {\r\n            //console.log(event.pressure);\r\n            //console.log(event);\r\n            const x = event.clientX;\r\n            const y = event.clientY;\r\n\r\n            if (this.inCanvas(x, y)) {\r\n                //console.log(\"not getting other click\", this.isDrawing);\r\n                if (drawing && !selecting) {\r\n                    this.handleMouseMove(x, y);\r\n                }\r\n            } else {\r\n                if (drawing){\r\n                    this.handleMouseUp();\r\n                    drawing = false;\r\n                }\r\n            }\r\n        });\r\n\r\n       \r\n\r\n    },\r\n    methods: {\r\n        updateCameraDistance(){\r\n            console.log(\"updating\",cameraDistance);\r\n            this.cameraDistance = cameraDistance;\r\n        },\r\n        goToGuide () {\r\n            frames.updateGuide();\r\n        },\r\n        addGuidePoint (event) {\r\n            const result = draw.getCoors(event.clientX, event.clientY)\r\n            if (result) {\r\n                frames.getFrame().setGuidePoint(result);\r\n            }\r\n\r\n\r\n        },\r\n        inCanvas( x, y ) {\r\n            var rect = arcRenderer.domElement.getBoundingClientRect();\r\n            var centerX = rect.left + rect.width / 2;\r\n            var centerY = rect.top + rect.height / 2;\r\n\r\n            const dx = x - centerX;\r\n            const dy = y - centerY;\r\n            const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n            if (distance < rect.width/2){\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        handleMouseMove(x, y) {\r\n            //console.log(\"draw\", this.isDrawing);\r\n            if (!this.isDrawing) return;\r\n            // Assuming a 2D drawing, so Z is constant, but this could be modified as per the requirement.\r\n            draw.onMove(x, y, this.stroke);\r\n        },\r\n        handleMouseDown(x, y) {\r\n            //console.log(\"mouse down\");\r\n            this.isDrawing = true;\r\n            //this.updateSizeMultiplier();\r\n            draw.onStart(x, y, this.stroke);\r\n            this.canUndo = frames.getFrame().history.canUndo();\r\n            this.canRedo = frames.getFrame().history.canRedo();\r\n        },\r\n        handleMouseUp() {\r\n            this.isDrawing = false;\r\n            let result = draw.onEnd(this.stroke);\r\n            if (result[0] != false){\r\n                frames.getFrame().history.action(result);\r\n            }\r\n            this.canUndo = frames.getFrame().history.canUndo();\r\n            this.canRedo = frames.getFrame().history.canRedo();\r\n\r\n            //console.log(this.canUndo);\r\n        },\r\n        toggleEraserMode() {\r\n            this.stroke.eraser = !this.stroke.eraser;\r\n        },\r\n        toggleColorSelect(){\r\n            console.log(this.showColorPicker);\r\n            this.showColorPicker = !this.showColorPicker;\r\n        },\r\n        toggleOnionSkin(){\r\n            this.onionSkin = !this.onionSkin;\r\n            frames.onion = !frames.onion;\r\n        },\r\n        toggleNewMode(){\r\n            this.newMode = !this.newMode;\r\n        },\r\n        backward() {\r\n            frames.delFrame();\r\n\r\n            // Call the function in the child component\r\n            const layerViewer = this.$refs.layerViewer;\r\n            layerViewer.updateLayers();\r\n        },\r\n        forward() {\r\n            frames.addFrame();\r\n            const layerViewer = this.$refs.layerViewer;\r\n      \r\n            // Call the function in the child component\r\n            layerViewer.updateLayers();\r\n        },\r\n        play() {\r\n            this.rotatingCondition = !this.rotatingCondition;\r\n            this.isDrawing = this.rotatingCondition;\r\n            frames.play = this.rotatingCondition;\r\n        },\r\n        undo(){\r\n            frames.getFrame().history.undo();\r\n            this.canRedo = frames.getFrame().history.canRedo();\r\n        },\r\n        redo(){\r\n            frames.getFrame().history.redo();\r\n            this.canUndo = frames.getFrame().history.canUndo();\r\n        },\r\n        updateSizeMultiplier() {\r\n            // .5 is the constant multiplier\r\n            // this is multiplied by .5, the default pressure\r\n            this.stroke.lineWidth = .25 * this.sizeMultiplier;\r\n        },\r\n        handleCardSelected(selectedIndex) {\r\n        // Use the selected index as needed\r\n            console.log('Selected index:', selectedIndex);\r\n            frames.setIndex(selectedIndex);\r\n        },\r\n        nextIcon() {\r\n\r\n\r\n            this.currentIconIndex = (this.currentIconIndex + 1) % this.icons.length;\r\n            console.log(\"index changed\", this.currentIconIndex);\r\n            canvasIndex = this.currentIconIndex;\r\n\r\n\r\n\r\n        },\r\n        loadCameraPosition(){\r\n            console.log(\"saving position\");\r\n            const cameraPosition = camera.position.clone();\r\n            const cameraAngle = camera.rotation.clone();\r\n\r\n\r\n            frames.setPos(cameraPosition);\r\n            frames.setAngle(cameraAngle);\r\n\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.drawing-input {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.fixed-button {\r\n  z-index: 1200;\r\n  background-color: rgb(33, 33, 33);\r\n  color: rgb(176, 190, 197);\r\n}\r\n\r\n.v-card {\r\n  position: fixed;\r\n  top: 10%;\r\n  bottom: 90%;\r\n  left: 1%;\r\n  display: flex;\r\n  align-items: center;\r\n  z-index: 998;\r\n  height: 80%;\r\n  width: 5%;\r\n  justify-content: flex-start;\r\n  background-color: rgba(1, 1, 1, 0.7);\r\n}\r\n\r\n.button-container {\r\n  position: fixed;\r\n  top: 2%;\r\n  left: 2%;\r\n  height: 50%;\r\n  z-index: 999;\r\n  width: 10%;\r\n}\r\n\r\n.spacer {\r\n  width: 1%;\r\n  height: 1%;\r\n}\r\n\r\n.small-bar {\r\n  height: 8%;  /* Adjust this value as needed */\r\n  background-color: rgba(1, 1, 1, 0.7) !important;\r\n}\r\n\r\n.bottom-buttons {\r\n  position: fixed;\r\n  width: 20%;\r\n  bottom: 40px; /* Adjust the bottom value as needed */\r\n  left: 2%; /* Adjust the right value as needed */\r\n  z-index: 999; /* Set an appropriate z-index if necessary */\r\n  /* Add any other desired styles */\r\n}\r\n\r\n.v-color-picker {\r\n    position: fixed;\r\n    top: 10%;\r\n    left: 10%;\r\n    z-index: 1001;\r\n}\r\n\r\n.custom-button {\r\n  color: inherit;\r\n}\r\n\r\n</style>\r\n"],"mappings":"AAsLA,OAAOA,WAAU,MAAO,mBAAmB;AAC3C,SAASC,IAAG,QAAS,iBAAiB;AACtC;AACA,SAASC,WAAW,EAAEC,MAAK,QAAS,YAAY;AAChD,SAASC,MAAK,QAAS,aAAa;AACpC;AACA;;AAEA,OAAO,IAAIC,cAAa,GAAI,CAAC;AAC7B,OAAO,IAAIC,WAAU,GAAI,CAAC;AAE1B,IAAIC,OAAM,GAAI,KAAK;AACnB,IAAIC,SAAQ,GAAI,KAAK;AAErB,IAAIC,gBAAe,GAAI,IAAI,EAAG;AAC9B;;AAEA,eAAe;EACXC,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE;IACRX;EACJ,CAAC;EAEDY,IAAIA,CAAA,EAAE;IACF,OAAO;MACHC,KAAK,EAAE,CAAC,oBAAoB,EAAE,YAAY,EAAE,cAAc,CAAC;MAC3DC,gBAAgB,EAAE,CAAC;MACnBC,SAAS,EAAE,KAAK;MAChBC,iBAAiB,EAAE,KAAK;MACxBC,MAAM,EAAE;QACJC,WAAW,EAAE,IAAI;QACjBC,SAAS,EAAE,GAAE,GAAI,EAAE;QACnBC,KAAK,EAAE,QAAQ;QACfC,MAAM,EAAE;MAGZ,CAAC;MACDC,eAAe,EAAE,KAAK;MACtBC,SAAS,EAAE,KAAK;MAChBC,OAAO,EAAE,KAAK;MACdC,OAAO,EAAE,KAAK;MACdC,cAAc,EAAE,EAAE;MAClBC,OAAO,EAAE,KAAK;MACdC,KAAK,EAAE,EAAE;MACTvB,cAAc,EAAE;IACpB,CAAC;EACL,CAAC;EACDwB,QAAQ,EAAE;IACNT,KAAK,EAAE;MACPU,GAAGA,CAAA,EAAG;QACF;QACA,OAAO,GAAE,GAAI,IAAI,CAACb,MAAM,CAACG,KAAK,CAACW,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAChE,CAAC;MACDC,GAAGA,CAACL,KAAK,EAAE;QACP;QACA,IAAI,CAACX,MAAM,CAACG,KAAI,GAAIc,QAAQ,CAACN,KAAK,CAACO,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;MACpD;IACA;EACJ,CAAC;EACDC,OAAMA,CAAA,EAAI;IACN,IAAI,CAACC,MAAM,CAAC,MAAM,IAAI,CAACrB,iBAAiB,EAAGsB,QAAQ,IAAK;MACpDnC,MAAM,CAACoC,kBAAkB,CAAC,CAAC;MAE3B,IAAGD,QAAQ,EAAC;QACR,IAAG7B,gBAAe,IAAK,IAAI,EAAC;UACxB;UACAA,gBAAe,GAAI+B,WAAW,CAAC,MAAM;YACjCrC,MAAM,CAACsC,oBAAoB,CAAC,CAAC;YAC7B,MAAMC,WAAU,GAAI,IAAI,CAACC,KAAK,CAACD,WAAW;YAC1CA,WAAW,CAACE,YAAY,CAAC,CAAC;UAC9B,CAAC,EAAE,IAAI,GAAEzC,MAAM,CAAC0C,eAAgB,CAAC;QACrC;MACJ,CAAC,MAAI;QACD;QACA,IAAGpC,gBAAe,IAAK,IAAI,EAAC;UACxBqC,aAAa,CAACrC,gBAAgB,CAAC;UAC/BA,gBAAe,GAAI,IAAI;QAC3B;MACJ;IACJ,CAAC,CAAC;IAGFsC,QAAQ,CAACC,IAAI,CAACC,gBAAgB,CAAC,aAAa,EAAGC,KAAK,IAAK;MACrD3C,OAAM,GAAI,KAAK;MACfC,SAAQ,GAAI,IAAI;MAChB0C,KAAK,CAACC,cAAc,CAAC,CAAC;MAEtB,IAAI,CAACC,aAAa,CAACF,KAAK,CAAC;MACzB1C,SAAQ,GAAI,KAAK;IACrB,CAAC,CAAC;IAGFuC,QAAQ,CAACC,IAAI,CAACC,gBAAgB,CAAC,SAAS,EAAGC,KAAK,IAAK;MACjD,MAAMG,CAAA,GAAIH,KAAK,CAACI,OAAO;MACvB,MAAMC,CAAA,GAAIL,KAAK,CAACM,OAAO;MACvB,IAAI,IAAI,CAACC,QAAQ,CAACJ,CAAC,EAAEE,CAAC,KAAKhD,OAAM,IAAK,CAACC,SAAS,EAAC;QAC7C,IAAI,CAACkD,aAAa,CAAC,CAAC;QACpBnD,OAAM,GAAI,KAAK;MACnB;IACJ,CAAC,CAAC;IAEFwC,QAAQ,CAACC,IAAI,CAACC,gBAAgB,CAAC,WAAW,EAAGC,KAAK,IAAK;MACnD,MAAMG,CAAA,GAAIH,KAAK,CAACI,OAAO;MACvB,MAAMC,CAAA,GAAIL,KAAK,CAACM,OAAO;MACvB,IAAI,IAAI,CAACC,QAAQ,CAACJ,CAAC,EAAEE,CAAC,KAAK,CAAC/C,SAAS,EAAE;QACnCD,OAAM,GAAI,IAAI;QACd,IAAI,CAACoD,eAAe,CAACN,CAAC,EAAEE,CAAC,CAAC;MAC9B;IAEJ,CAAC,CAAC;IAEFR,QAAQ,CAACC,IAAI,CAACC,gBAAgB,CAAC,YAAY,EAAGC,KAAK,IAAK;MACpD,MAAMG,CAAA,GAAKH,KAAK,CAACU,aAAa,CAAC,CAAC,IAAIV,KAAK,CAACU,aAAa,CAAC,CAAC,CAAC,CAACC,KAAI,GAAIX,KAAK,CAACY,cAAc,CAACZ,KAAK,CAACY,cAAc,CAACC,MAAM,GAAC,CAAC,CAAC,CAACF,KAAM;MAC7H,MAAMN,CAAA,GAAKL,KAAK,CAACU,aAAa,CAAC,CAAC,IAAIV,KAAK,CAACU,aAAa,CAAC,CAAC,CAAC,CAACI,KAAI,GAAId,KAAK,CAACY,cAAc,CAACZ,KAAK,CAACY,cAAc,CAACC,MAAM,GAAC,CAAC,CAAC,CAACC,KAAM;MAE7H,IAAI,IAAI,CAACP,QAAQ,CAACJ,CAAC,EAAEE,CAAC,KAAK,CAAC/C,SAAS,EAAE;QACnCD,OAAM,GAAI,IAAI;QACd,IAAI,CAACoD,eAAe,CAACN,CAAC,EAAEE,CAAC,CAAC;MAC9B;MAEAhD,OAAM,GAAI,IAAI;IAElB,CAAC,CAAC;IAEFwC,QAAQ,CAACC,IAAI,CAACC,gBAAgB,CAAC,WAAW,EAAGC,KAAK,IAAK;MACnD,MAAMG,CAAA,GAAKH,KAAK,CAACU,aAAa,CAAC,CAAC,IAAIV,KAAK,CAACU,aAAa,CAAC,CAAC,CAAC,CAACC,KAAI,GAAIX,KAAK,CAACY,cAAc,CAACZ,KAAK,CAACY,cAAc,CAACC,MAAM,GAAC,CAAC,CAAC,CAACF,KAAM;MAC7H,MAAMN,CAAA,GAAKL,KAAK,CAACU,aAAa,CAAC,CAAC,IAAIV,KAAK,CAACU,aAAa,CAAC,CAAC,CAAC,CAACI,KAAI,GAAId,KAAK,CAACY,cAAc,CAACZ,KAAK,CAACY,cAAc,CAACC,MAAM,GAAC,CAAC,CAAC,CAACC,KAAM;MAG7H,IAAI,IAAI,CAACP,QAAQ,CAACJ,CAAC,EAAEE,CAAC,CAAC,EAAE;QACrB;QACA,IAAIhD,OAAM,IAAK,CAACC,SAAS,EAAE;UACvB,IAAI,CAACyD,eAAe,CAACZ,CAAC,EAAEE,CAAC,CAAC;QAC9B;MACJ,OAAO;QACH,IAAIhD,OAAO,EAAC;UACR,IAAI,CAACmD,aAAa,CAAC,CAAC;UACpBnD,OAAM,GAAI,KAAK;QACnB;MACJ;IACJ,CAAC,CAAC;IAEFwC,QAAQ,CAACC,IAAI,CAACC,gBAAgB,CAAC,UAAU,EAAGC,KAAK,IAAK;MAClD,MAAMG,CAAA,GAAKH,KAAK,CAACU,aAAa,CAAC,CAAC,IAAIV,KAAK,CAACU,aAAa,CAAC,CAAC,CAAC,CAACC,KAAI,GAAIX,KAAK,CAACY,cAAc,CAACZ,KAAK,CAACY,cAAc,CAACC,MAAM,GAAC,CAAC,CAAC,CAACF,KAAM;MAC7H,MAAMN,CAAA,GAAKL,KAAK,CAACU,aAAa,CAAC,CAAC,IAAIV,KAAK,CAACU,aAAa,CAAC,CAAC,CAAC,CAACI,KAAI,GAAId,KAAK,CAACY,cAAc,CAACZ,KAAK,CAACY,cAAc,CAACC,MAAM,GAAC,CAAC,CAAC,CAACC,KAAM;MAE7H,IAAI,IAAI,CAACP,QAAQ,CAACJ,CAAC,EAAEE,CAAC,KAAKhD,OAAM,IAAK,CAACC,SAAS,EAAC;QAC7C,IAAI,CAACkD,aAAa,CAAC,CAAC;QACpBnD,OAAM,GAAI,KAAK;MACnB;IACJ,CAAC,CAAC;IAEFwC,QAAQ,CAACC,IAAI,CAACC,gBAAgB,CAAC,aAAa,EAAGC,KAAK,IAAK;MAErD,IAAIA,KAAK,CAACgB,QAAO,GAAI,CAAC,EAAC;QAEnB,IAAI,CAACjD,MAAM,CAACE,SAAQ,GAAI+B,KAAK,CAACgB,QAAO,GAAI,EAAC,GAAI,IAAI,CAACxC,cAAc;MACrE;IAKJ,CAAC,CAAC;IAEFqB,QAAQ,CAACC,IAAI,CAACC,gBAAgB,CAAC,WAAW,EAAGC,KAAK,IAAK;MACnD;MACA;MACA,MAAMG,CAAA,GAAIH,KAAK,CAACI,OAAO;MACvB,MAAMC,CAAA,GAAIL,KAAK,CAACM,OAAO;MAEvB,IAAI,IAAI,CAACC,QAAQ,CAACJ,CAAC,EAAEE,CAAC,CAAC,EAAE;QACrB;QACA,IAAIhD,OAAM,IAAK,CAACC,SAAS,EAAE;UACvB,IAAI,CAACyD,eAAe,CAACZ,CAAC,EAAEE,CAAC,CAAC;QAC9B;MACJ,OAAO;QACH,IAAIhD,OAAO,EAAC;UACR,IAAI,CAACmD,aAAa,CAAC,CAAC;UACpBnD,OAAM,GAAI,KAAK;QACnB;MACJ;IACJ,CAAC,CAAC;EAIN,CAAC;EACD4D,OAAO,EAAE;IACLC,oBAAoBA,CAAA,EAAE;MAClBC,OAAO,CAACC,GAAG,CAAC,UAAU,EAACjE,cAAc,CAAC;MACtC,IAAI,CAACA,cAAa,GAAIA,cAAc;IACxC,CAAC;IACDkE,SAAQA,CAAA,EAAK;MACTpE,MAAM,CAACqE,WAAW,CAAC,CAAC;IACxB,CAAC;IACDpB,aAAYA,CAAGF,KAAK,EAAE;MAClB,MAAMuB,MAAK,GAAIxE,IAAI,CAACyE,QAAQ,CAACxB,KAAK,CAACI,OAAO,EAAEJ,KAAK,CAACM,OAAO;MACzD,IAAIiB,MAAM,EAAE;QACRtE,MAAM,CAACwE,QAAQ,CAAC,CAAC,CAACC,aAAa,CAACH,MAAM,CAAC;MAC3C;IAGJ,CAAC;IACDhB,QAAQA,CAAEJ,CAAC,EAAEE,CAAA,EAAI;MACb,IAAIsB,IAAG,GAAI3E,WAAW,CAAC4E,UAAU,CAACC,qBAAqB,CAAC,CAAC;MACzD,IAAIC,OAAM,GAAIH,IAAI,CAACI,IAAG,GAAIJ,IAAI,CAACK,KAAI,GAAI,CAAC;MACxC,IAAIC,OAAM,GAAIN,IAAI,CAACO,GAAE,GAAIP,IAAI,CAACQ,MAAK,GAAI,CAAC;MAExC,MAAMC,EAAC,GAAIjC,CAAA,GAAI2B,OAAO;MACtB,MAAMO,EAAC,GAAIhC,CAAA,GAAI4B,OAAO;MACtB,MAAMK,QAAO,GAAIC,IAAI,CAACC,IAAI,CAACJ,EAAC,GAAIA,EAAC,GAAIC,EAAC,GAAIA,EAAE,CAAC;MAE7C,IAAIC,QAAO,GAAIX,IAAI,CAACK,KAAK,GAAC,CAAC,EAAC;QACxB,OAAO,KAAK;MAChB;MACA,OAAO,IAAI;IACf,CAAC;IACDjB,eAAeA,CAACZ,CAAC,EAAEE,CAAC,EAAE;MAClB;MACA,IAAI,CAAC,IAAI,CAACxC,SAAS,EAAE;MACrB;MACAd,IAAI,CAAC0F,MAAM,CAACtC,CAAC,EAAEE,CAAC,EAAE,IAAI,CAACtC,MAAM,CAAC;IAClC,CAAC;IACD0C,eAAeA,CAACN,CAAC,EAAEE,CAAC,EAAE;MAClB;MACA,IAAI,CAACxC,SAAQ,GAAI,IAAI;MACrB;MACAd,IAAI,CAAC2F,OAAO,CAACvC,CAAC,EAAEE,CAAC,EAAE,IAAI,CAACtC,MAAM,CAAC;MAC/B,IAAI,CAACO,OAAM,GAAIrB,MAAM,CAACwE,QAAQ,CAAC,CAAC,CAACkB,OAAO,CAACrE,OAAO,CAAC,CAAC;MAClD,IAAI,CAACC,OAAM,GAAItB,MAAM,CAACwE,QAAQ,CAAC,CAAC,CAACkB,OAAO,CAACpE,OAAO,CAAC,CAAC;IACtD,CAAC;IACDiC,aAAaA,CAAA,EAAG;MACZ,IAAI,CAAC3C,SAAQ,GAAI,KAAK;MACtB,IAAI0D,MAAK,GAAIxE,IAAI,CAAC6F,KAAK,CAAC,IAAI,CAAC7E,MAAM,CAAC;MACpC,IAAIwD,MAAM,CAAC,CAAC,KAAK,KAAK,EAAC;QACnBtE,MAAM,CAACwE,QAAQ,CAAC,CAAC,CAACkB,OAAO,CAACE,MAAM,CAACtB,MAAM,CAAC;MAC5C;MACA,IAAI,CAACjD,OAAM,GAAIrB,MAAM,CAACwE,QAAQ,CAAC,CAAC,CAACkB,OAAO,CAACrE,OAAO,CAAC,CAAC;MAClD,IAAI,CAACC,OAAM,GAAItB,MAAM,CAACwE,QAAQ,CAAC,CAAC,CAACkB,OAAO,CAACpE,OAAO,CAAC,CAAC;;MAElD;IACJ,CAAC;;IACDuE,gBAAgBA,CAAA,EAAG;MACf,IAAI,CAAC/E,MAAM,CAACI,MAAK,GAAI,CAAC,IAAI,CAACJ,MAAM,CAACI,MAAM;IAC5C,CAAC;IACD4E,iBAAiBA,CAAA,EAAE;MACf5B,OAAO,CAACC,GAAG,CAAC,IAAI,CAAChD,eAAe,CAAC;MACjC,IAAI,CAACA,eAAc,GAAI,CAAC,IAAI,CAACA,eAAe;IAChD,CAAC;IACD4E,eAAeA,CAAA,EAAE;MACb,IAAI,CAAC3E,SAAQ,GAAI,CAAC,IAAI,CAACA,SAAS;MAChCpB,MAAM,CAACgG,KAAI,GAAI,CAAChG,MAAM,CAACgG,KAAK;IAChC,CAAC;IACDC,aAAaA,CAAA,EAAE;MACX,IAAI,CAACzE,OAAM,GAAI,CAAC,IAAI,CAACA,OAAO;IAChC,CAAC;IACD0E,QAAQA,CAAA,EAAG;MACPlG,MAAM,CAACmG,QAAQ,CAAC,CAAC;;MAEjB;MACA,MAAM5D,WAAU,GAAI,IAAI,CAACC,KAAK,CAACD,WAAW;MAC1CA,WAAW,CAACE,YAAY,CAAC,CAAC;IAC9B,CAAC;IACD2D,OAAOA,CAAA,EAAG;MACNpG,MAAM,CAACqG,QAAQ,CAAC,CAAC;MACjB,MAAM9D,WAAU,GAAI,IAAI,CAACC,KAAK,CAACD,WAAW;;MAE1C;MACAA,WAAW,CAACE,YAAY,CAAC,CAAC;IAC9B,CAAC;IACD6D,IAAIA,CAAA,EAAG;MACH,IAAI,CAACzF,iBAAgB,GAAI,CAAC,IAAI,CAACA,iBAAiB;MAChD,IAAI,CAACD,SAAQ,GAAI,IAAI,CAACC,iBAAiB;MACvCb,MAAM,CAACsG,IAAG,GAAI,IAAI,CAACzF,iBAAiB;IACxC,CAAC;IACD0F,IAAIA,CAAA,EAAE;MACFvG,MAAM,CAACwE,QAAQ,CAAC,CAAC,CAACkB,OAAO,CAACa,IAAI,CAAC,CAAC;MAChC,IAAI,CAACjF,OAAM,GAAItB,MAAM,CAACwE,QAAQ,CAAC,CAAC,CAACkB,OAAO,CAACpE,OAAO,CAAC,CAAC;IACtD,CAAC;IACDkF,IAAIA,CAAA,EAAE;MACFxG,MAAM,CAACwE,QAAQ,CAAC,CAAC,CAACkB,OAAO,CAACc,IAAI,CAAC,CAAC;MAChC,IAAI,CAACnF,OAAM,GAAIrB,MAAM,CAACwE,QAAQ,CAAC,CAAC,CAACkB,OAAO,CAACrE,OAAO,CAAC,CAAC;IACtD,CAAC;IACDoF,oBAAoBA,CAAA,EAAG;MACnB;MACA;MACA,IAAI,CAAC3F,MAAM,CAACE,SAAQ,GAAI,GAAE,GAAI,IAAI,CAACO,cAAc;IACrD,CAAC;IACDmF,kBAAkBA,CAACC,aAAa,EAAE;MAClC;MACIzC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEwC,aAAa,CAAC;MAC7C3G,MAAM,CAAC4G,QAAQ,CAACD,aAAa,CAAC;IAClC,CAAC;IACDE,QAAQA,CAAA,EAAG;MAGP,IAAI,CAAClG,gBAAe,GAAI,CAAC,IAAI,CAACA,gBAAe,GAAI,CAAC,IAAI,IAAI,CAACD,KAAK,CAACkD,MAAM;MACvEM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,IAAI,CAACxD,gBAAgB,CAAC;MACnDR,WAAU,GAAI,IAAI,CAACQ,gBAAgB;IAIvC,CAAC;IACDmG,kBAAkBA,CAAA,EAAE;MAChB5C,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9B,MAAM4C,cAAa,GAAI9G,MAAM,CAAC+G,QAAQ,CAACC,KAAK,CAAC,CAAC;MAC9C,MAAMC,WAAU,GAAIjH,MAAM,CAACkH,QAAQ,CAACF,KAAK,CAAC,CAAC;MAG3CjH,MAAM,CAACoH,MAAM,CAACL,cAAc,CAAC;MAC7B/G,MAAM,CAACqH,QAAQ,CAACH,WAAW,CAAC;IAEhC;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}