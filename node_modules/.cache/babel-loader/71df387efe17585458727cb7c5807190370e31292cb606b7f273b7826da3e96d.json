{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"arc\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1"],"sources":["/Users/olliearrison/Desktop/SURA/src/components/ArcballControl.vue"],"sourcesContent":["<template>\n  <div class=\"arc\"> </div>\n</template>\n\n<script>\nimport * as THREE from 'three';\nimport { ArcballControls } from 'three/addons/controls/ArcballControls.js';\n\nexport default {\nname: 'ArcballControl',\nprops: {\n  value: {\n    type: THREE.PerspectiveCamera,\n    required: true\n  }\n},\nmounted() {\n  const renderer = new THREE.WebGLRenderer();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  document.body.appendChild(renderer.domElement);\n\n  const scene = new THREE.Scene();\n\n  const controls = new ArcballControls(this.value, renderer.domElement, scene);\n\n  controls.addEventListener('change', () => {\n    renderer.render(scene, this.value);\n  });\n\n  // controls.update() must be called after any manual changes to the camera's transform\n  this.value.position.set(0, , 100);\n  controls.update();\n}\n}\n\n</script>\n\n\n<style>\n.arc {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAK;;uBAAhBC,mBAAA,CAAwB,OAAxBC,UAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}