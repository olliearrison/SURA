{"ast":null,"code":"import * as THREE from 'three';\nimport { ArcballControls } from 'three/addons/controls/ArcballControls.js';\nexport let renderer = new THREE.WebGLRenderer({\n  alpha: true,\n  antialias: true\n});\nexport let camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 10000);\nlet controls, scene;\nexport default {\n  name: 'ArcballControl',\n  props: {\n    cameraPosition: {\n      type: Object,\n      required: true\n    },\n    cameraAngle: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      renderer: renderer,\n      controls: null,\n      scene: null\n    };\n  },\n  mounted() {\n    renderer.setSize(this.$el.clientWidth, this.$el.clientHeight);\n    this.$el.appendChild(renderer.domElement);\n    scene = new THREE.Scene();\n\n    //this.$emit('update:camera', camera);\n\n    //this.$emit('update:camera', camera.clone());\n\n    controls = new ArcballControls(camera, renderer.domElement, scene);\n    controls.addEventListener('change', function () {\n      const cameraPosition = camera.position.clone();\n      const cameraAngle = camera.rotation.clone();\n      this.$emit('camera-updated', {\n        position: cameraPosition,\n        angle: cameraAngle\n      });\n      renderer.render(scene, camera);\n    });\n\n    //controls.update() must be called after any manual changes to the camera's transform\n    camera.position.set(0, 20, 100);\n    this.windowResizeHandler();\n    controls.update();\n    this.animate();\n    window.addEventListener('resize', this.windowResizeHandler);\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.windowResizeHandler);\n  },\n  methods: {\n    windowResizeHandler() {\n      const width = this.$el.clientWidth;\n      const height = this.$el.clientHeight;\n      this.$emit('update:camera', {\n        aspect: width / height,\n        width: width,\n        height: height\n      });\n      renderer.setSize(width, height);\n    },\n    animate() {\n      requestAnimationFrame(this.animate);\n      controls.update();\n      renderer.render(scene, camera);\n    }\n  }\n};","map":{"version":3,"names":["THREE","ArcballControls","renderer","WebGLRenderer","alpha","antialias","camera","PerspectiveCamera","window","innerWidth","innerHeight","controls","scene","name","props","cameraPosition","type","Object","required","cameraAngle","data","mounted","setSize","$el","clientWidth","clientHeight","appendChild","domElement","Scene","addEventListener","position","clone","rotation","$emit","angle","render","set","windowResizeHandler","update","animate","beforeUnmount","removeEventListener","methods","width","height","aspect","requestAnimationFrame"],"sources":["/Users/olliearrison/Desktop/SURA/src/components/ArcballControl.vue"],"sourcesContent":["<template>\n    <div class=\"arc\" ref=\"arcballContainer\"></div>\n</template>\n\n<script>\nimport * as THREE from 'three';\nimport { ArcballControls } from 'three/addons/controls/ArcballControls.js';\n\nexport let renderer = new THREE.WebGLRenderer({alpha: true, antialias: true});\nexport let camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 10000 );\nlet controls, scene;\n\nexport default {\n  name: 'ArcballControl',\n  props: {\n    cameraPosition: {\n      type: Object,\n      required: true\n    },\n    cameraAngle: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      renderer: renderer,\n      controls: null,\n      scene: null\n    };\n  },\n  mounted() {\n    \n    renderer.setSize(this.$el.clientWidth, this.$el.clientHeight);\n    this.$el.appendChild(renderer.domElement);\n\n    scene = new THREE.Scene();\n\n    //this.$emit('update:camera', camera);\n\n    //this.$emit('update:camera', camera.clone());\n\n    controls = new ArcballControls( camera, renderer.domElement, scene );\n\n    controls.addEventListener( 'change', function () {\n      const cameraPosition = camera.position.clone();\n      const cameraAngle = camera.rotation.clone();\n\n      this.$emit('camera-updated', {\n        position: cameraPosition,\n        angle: cameraAngle\n      });\n\n      renderer.render( scene, camera );\n    });\n\n    \n\n    //controls.update() must be called after any manual changes to the camera's transform\n    camera.position.set( 0, 20, 100 );\n    this.windowResizeHandler();\n    controls.update();\n    this.animate();\n    window.addEventListener('resize', this.windowResizeHandler);\n\n  },beforeUnmount() {\n    window.removeEventListener('resize', this.windowResizeHandler);\n  },\n   methods: {\n    windowResizeHandler() {\n      const width = this.$el.clientWidth;\n      const height = this.$el.clientHeight;\n\n      this.$emit('update:camera', {\n        aspect: width / height,\n        width: width,\n        height: height\n      });\n      \n\n      renderer.setSize(width, height);\n    },\n    animate() {\n      requestAnimationFrame(this.animate);\n      controls.update();\n      renderer.render(scene, camera);\n    }\n  }\n}\n</script>\n\n<style>\n.arc {\n  position: absolute;\n  top: 10%;\n  right: 5%;\n  width: 150px;  /* Adjust these as necessary */\n  height: 150px; /* Adjust these as necessary */\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}