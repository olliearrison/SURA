{"ast":null,"code":"import { draw } from \"./DrawHelper.js\";\nimport { arcRenderer } from '../App.vue';\n//import * as THREE from \"three\";\n//import { renderer, scene, camera } from \"../App.vue\";\n\nlet drawing = false;\nexport default {\n  name: 'DrawingInput',\n  data() {\n    return {\n      isDrawing: false,\n      stroke: {\n        show_stroke: true,\n        lineWidth: .01,\n        color: 0x000000\n      }\n    };\n  },\n  mounted() {\n    // document.body \n\n    document.body.addEventListener('mouseup', event => {\n      if (this.inCanvas(event)) {\n        this.handleMouseUp();\n        drawing = false;\n      }\n    });\n    document.body.addEventListener('mousedown', event => {\n      if (this.inCanvas(event)) {\n        drawing = true;\n        this.handleMouseDown(event);\n      }\n    });\n    document.body.addEventListener('pointerdown', event => {\n      console.log(event.pressure);\n      this.stroke.lineWidth = event.pressure * 0.01;\n    });\n    document.body.addEventListener('mousemove', event => {\n      //console.log(event.pressure);\n      if (this.inCanvas(event)) {\n        if (drawing) {\n          this.handleMouseMove(event);\n        }\n      } else {\n        if (drawing) {\n          this.handleMouseUp();\n          drawing = false;\n        }\n      }\n    });\n    //this.handleMouseMove(event);\n  },\n\n  methods: {\n    inCanvas(event) {\n      var rect = arcRenderer.domElement.getBoundingClientRect();\n      var centerX = rect.left + rect.width / 2;\n      var centerY = rect.top + rect.height / 2;\n      const dx = event.clientX - centerX;\n      const dy = event.clientY - centerY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      if (distance < rect.width / 2) {\n        return false;\n      }\n      return true;\n    },\n    handleMouseMove(event) {\n      if (!this.isDrawing) return;\n      let x = event.clientX;\n      let y = event.clientY;\n      // Assuming a 2D drawing, so Z is constant, but this could be modified as per the requirement.\n      let z = 0;\n      draw.onMove(x, y, z);\n    },\n    handleMouseDown(event) {\n      //console.log(\"mouse down\");\n      this.isDrawing = true;\n      let x = event.clientX;\n      let y = event.clientY;\n      let z = 0;\n      draw.onStart(x, y, z, this.stroke);\n    },\n    handleMouseUp() {\n      this.isDrawing = false;\n      draw.onEnd();\n    }\n  }\n};","map":{"version":3,"names":["draw","arcRenderer","drawing","name","data","isDrawing","stroke","show_stroke","lineWidth","color","mounted","document","body","addEventListener","event","inCanvas","handleMouseUp","handleMouseDown","console","log","pressure","handleMouseMove","methods","rect","domElement","getBoundingClientRect","centerX","left","width","centerY","top","height","dx","clientX","dy","clientY","distance","Math","sqrt","x","y","z","onMove","onStart","onEnd"],"sources":["/Users/olliearrison/Desktop/SURA/src/components/DrawingInput.vue"],"sourcesContent":["<template>\n    <div class=\"drawing-input\" ></div>\n</template>\n  \n<script>\nimport { draw } from \"./DrawHelper.js\";\nimport { arcRenderer } from '../App.vue';\n//import * as THREE from \"three\";\n//import { renderer, scene, camera } from \"../App.vue\";\n\nlet drawing = false;\n\n\nexport default {\n    name: 'DrawingInput',\n\n    data(){\n        return {\n            isDrawing: false,\n            stroke: {\n                show_stroke: true,\n                lineWidth: .01,\n                color: 0x000000,\n            }\n        };\n    },\n    mounted (){\n        // document.body \n\n\n        document.body.addEventListener('mouseup', (event) => {\n            if (this.inCanvas(event)){\n                this.handleMouseUp();\n                drawing = false;\n            }\n        });\n\n        document.body.addEventListener('mousedown', (event) => {\n            if (this.inCanvas(event)) {\n                drawing = true;\n                this.handleMouseDown(event);\n            }\n        });\n\n        document.body.addEventListener('pointerdown', (event) => {\n            console.log(event.pressure);\n            this.stroke.lineWidth = event.pressure * 0.01;\n\n        });\n\n        document.body.addEventListener('mousemove', (event) => {\n            //console.log(event.pressure);\n            if (this.inCanvas(event)) {\n                if (drawing) {\n                    this.handleMouseMove(event);\n                }\n            } else {\n                if (drawing){\n                    this.handleMouseUp();\n                    drawing = false;\n                }\n            }\n        });\n        //this.handleMouseMove(event);\n\n       \n\n    },\n    methods: {\n        inCanvas( event ) {\n            var rect = arcRenderer.domElement.getBoundingClientRect();\n            var centerX = rect.left + rect.width / 2;\n            var centerY = rect.top + rect.height / 2;\n\n            const dx = event.clientX - centerX;\n            const dy = event.clientY - centerY;\n            const distance = Math.sqrt(dx * dx + dy * dy);\n\n            if (distance < rect.width/2){\n                return false;\n            }\n            return true;\n        },\n        handleMouseMove(event) {\n            if (!this.isDrawing) return;\n            let x = event.clientX;\n            let y = event.clientY;\n            // Assuming a 2D drawing, so Z is constant, but this could be modified as per the requirement.\n            let z = 0;\n            draw.onMove(x, y, z);\n        },\n        handleMouseDown(event) {\n            //console.log(\"mouse down\");\n            this.isDrawing = true;\n            let x = event.clientX;\n            let y = event.clientY;\n            let z = 0;\n            draw.onStart(x, y, z, this.stroke);\n        },\n        handleMouseUp() {\n            this.isDrawing = false;\n            draw.onEnd();\n        }\n    }\n}\n</script>\n\n<style scoped>\n.drawing-input {\n    width: 100%;\n    height: 100%;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}