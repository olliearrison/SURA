{"ast":null,"code":"import * as THREE from 'three';\nimport { ArcballControls } from 'three/addons/controls/ArcballControls.js';\nexport let renderer = new THREE.WebGLRenderer({\n  alpha: true,\n  antialias: true\n});\nexport let camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 10000);\nlet controls, scene;\nexport default {\n  name: 'ArcballControl',\n  props: {\n    cameraPosition: {\n      type: Object,\n      required: true\n    },\n    cameraAngle: {\n      type: Object,\n      required: true\n    }\n  },\n  /*\n  data() {\n    return {\n      renderer: renderer,\n      controls: null,\n      scene: null\n    };\n  },\n  */\n  mounted() {\n    renderer.setSize(this.$el.clientWidth, this.$el.clientHeight);\n    this.$el.appendChild(renderer.domElement);\n    scene = new THREE.Scene();\n\n    //this.$emit('update:camera', camera);\n\n    //this.$emit('update:camera', camera.clone());\n\n    controls = new ArcballControls(camera, renderer.domElement, scene);\n    controls.addEventListener('change', this.handleCameraChange);\n    camera.position.set(0, 0, 2);\n    this.windowResizeHandler();\n    controls.update();\n    this.animate();\n    window.addEventListener('resize', this.windowResizeHandler);\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.windowResizeHandler);\n    controls.removeEventListener('change', this.handleCameraChange);\n  },\n  methods: {\n    handleCameraChange(event) {\n      const rect = this.$refs.arcballContainer.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n\n      // Only respond to mouse events within a certain area.\n      const minX = 0;\n      const maxX = this.$refs.arcballContainer.clientWidth;\n      const minY = 0;\n      const maxY = this.$refs.arcballContainer.clientHeight;\n      console.log(\"hii\");\n      if (x >= minX && x <= maxX && y >= minY && y <= maxY) {\n        console.log(\"hi\");\n        const cameraPosition = camera.position.clone();\n        const cameraAngle = camera.rotation.clone();\n        this.$emit('camera-updated', {\n          position: cameraPosition,\n          angle: cameraAngle\n        });\n        renderer.render(scene, camera);\n      }\n    },\n    windowResizeHandler() {\n      const width = this.$el.clientWidth;\n      const height = this.$el.clientHeight;\n\n      /*\n      this.$emit('update:camera', {\n        aspect: width / height,\n        width: width,\n        height: height\n      });\n      */\n\n      renderer.setSize(width, height);\n    },\n    animate() {\n      requestAnimationFrame(this.animate);\n      controls.update();\n      renderer.render(scene, camera);\n    }\n  }\n};","map":{"version":3,"names":["THREE","ArcballControls","renderer","WebGLRenderer","alpha","antialias","camera","PerspectiveCamera","window","innerWidth","innerHeight","controls","scene","name","props","cameraPosition","type","Object","required","cameraAngle","mounted","setSize","$el","clientWidth","clientHeight","appendChild","domElement","Scene","addEventListener","handleCameraChange","position","set","windowResizeHandler","update","animate","beforeUnmount","removeEventListener","methods","event","rect","$refs","arcballContainer","getBoundingClientRect","x","clientX","left","y","clientY","top","minX","maxX","minY","maxY","console","log","clone","rotation","$emit","angle","render","width","height","requestAnimationFrame"],"sources":["/Users/olliearrison/Desktop/SURA/src/components/ArcballControl.vue"],"sourcesContent":["<template>\n    <div class=\"arc\" ref=\"arcballContainer\"></div>\n</template>\n\n<script>\nimport * as THREE from 'three';\nimport { ArcballControls } from 'three/addons/controls/ArcballControls.js';\n\nexport let renderer = new THREE.WebGLRenderer({alpha: true, antialias: true});\nexport let camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 10000 );\nlet controls, scene;\n\nexport default {\n  name: 'ArcballControl',\n  props: {\n    cameraPosition: {\n      type: Object,\n      required: true\n    },\n    cameraAngle: {\n      type: Object,\n      required: true\n    }\n  },\n  /*\n  data() {\n    return {\n      renderer: renderer,\n      controls: null,\n      scene: null\n    };\n  },\n  */\n  mounted() {\n    \n    renderer.setSize(this.$el.clientWidth, this.$el.clientHeight);\n    this.$el.appendChild(renderer.domElement);\n\n    scene = new THREE.Scene();\n\n    //this.$emit('update:camera', camera);\n\n    //this.$emit('update:camera', camera.clone());\n\n    controls = new ArcballControls( camera, renderer.domElement, scene );\n    controls.addEventListener('change', this.handleCameraChange);\n\n\n    camera.position.set( 0, 0, 2 );\n    this.windowResizeHandler();\n    controls.update();\n    this.animate();\n    \n    window.addEventListener('resize', this.windowResizeHandler);\n\n  },beforeUnmount() {\n    window.removeEventListener('resize', this.windowResizeHandler);\n    controls.removeEventListener('change', this.handleCameraChange);\n  },\n   methods: {\n    handleCameraChange(event) {\n      const rect = this.$refs.arcballContainer.getBoundingClientRect();\n      const x = event.clientX - rect.left;\n      const y = event.clientY - rect.top;\n      \n      // Only respond to mouse events within a certain area.\n      const minX = 0;\n      const maxX = this.$refs.arcballContainer.clientWidth;\n      const minY = 0;\n      const maxY = this.$refs.arcballContainer.clientHeight;\n      console.log(\"hii\")\n      if (x >= minX && x <= maxX && y >= minY && y <= maxY) {\n        console.log(\"hi\")\n        const cameraPosition = camera.position.clone();\n        const cameraAngle = camera.rotation.clone();\n\n        this.$emit('camera-updated', {\n          position: cameraPosition,\n          angle: cameraAngle\n        });\n\n        renderer.render( scene, camera );\n      }\n\n    },\n\n    windowResizeHandler() {\n      const width = this.$el.clientWidth;\n      const height = this.$el.clientHeight;\n\n      /*\n      this.$emit('update:camera', {\n        aspect: width / height,\n        width: width,\n        height: height\n      });\n      */\n      \n\n      renderer.setSize(width, height);\n    },\n    animate() {\n      requestAnimationFrame(this.animate);\n      controls.update();\n      renderer.render(scene, camera);\n    }\n  }\n}\n</script>\n\n<style>\n.arc {\n  position: absolute;\n  top: 5%;\n  right: 5%;\n  width: 150px;  /* Adjust these as necessary */\n  height: 150px; /* Adjust these as necessary */\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}