{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  ref: \"mount\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, null, 512 /* NEED_PATCH */);\n}","map":{"version":3,"names":["ref","_createElementBlock","_hoisted_1"],"sources":["/Users/olliearrison/Desktop/v1/src/App.vue"],"sourcesContent":["<template>\n  <div ref=\"mount\"></div>\n</template>\n\n<script>\nimport * as THREE from 'three';\nimport InfiniteGridHelper from './components/InfiniteGridHelper.js'; // import the module, adjust path if needed\n\nexport default {\n  name: 'ThreeScene',\n  data() {\n    return {\n      scene: null,\n      camera: null,\n      renderer: null,\n    }\n  },\n  mounted() {\n    this.initThree();\n  },\n  methods: {\n    initThree() {\n      const width = this.$refs.mount.clientWidth;\n      const height = this.$refs.mount.clientHeight;\n\n      this.scene = new THREE.Scene();\n      this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n      this.renderer = new THREE.WebGLRenderer();\n      this.renderer.setSize(width, height);\n      this.$refs.mount.appendChild(this.renderer.domElement);\n\n      const grid = InfiniteGridHelper(800, 80);\n      this.scene.add(grid);\n\n      this.camera.position.z = 5;\n      this.animate();\n    },\n    animate() {\n      requestAnimationFrame(this.animate);\n\n      this.renderer.render(this.scene, this.camera);\n    },\n  },\n  beforeUnmount() {\n    cancelAnimationFrame(this.animationId);\n    this.renderer.domElement.removeEventListener('dblclick', null);\n    this.renderer = null;\n    this.scene = null;\n    this.camera = null;\n  }\n}\n</script>\n\n<style scoped>\ndiv {\n  width: 800px;\n  height: 600px;\n}\n</style>\n"],"mappings":";;;EACOA,GAAG,EAAC;AAAO;;uBAAhBC,mBAAA,CAAuB,OAAvBC,UAAuB"},"metadata":{},"sourceType":"module","externalDependencies":[]}