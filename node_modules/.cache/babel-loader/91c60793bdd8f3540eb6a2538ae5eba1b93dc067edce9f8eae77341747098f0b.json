{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { camera } from './Camera.js';\nimport { HistoryController } from \"./HistoryController.js\";\nimport * as THREE from 'three';\nclass Frame {\n  constructor() {\n    this.history = new HistoryController();\n    this.scene = new THREE.Scene();\n    this.pos = camera.position.clone();\n    this.angle = camera.rotation.clone();\n  }\n}\nclass FrameController {\n  constructor() {\n    this.frameList = [new Frame()];\n    this.index = 0;\n    this.play = false;\n    this.animationPos = [];\n    this.animationAngle = [];\n    this.animationDetail = 0;\n    this.animationFPS = 10;\n    this.drawingFPS = 5;\n    this.currentPos = new THREE.Vector3();\n    this.currentAngle = new THREE.Euler();\n    this.animationIndex = 0;\n    this.needsUpdate = false;\n    this.onion = false;\n  }\n  updateCamera() {\n    this.needsUpdate = true;\n  }\n  calculateAnimation() {\n    const positions = [];\n    const rotations = [];\n    for (let i = 0; i < this.frameList.length; i++) {\n      const frame = this.getFrameAtIndex(i);\n      positions.push(frame.pos);\n      const v = new THREE.Vector3();\n      v.setFromEuler(frame.angle);\n      rotations.push(v);\n    }\n    console.log(positions, rotations);\n    this.animationDetail = this.animationFPS * this.drawingFPS * this.frameList.length;\n    const posCurve = new THREE.CatmullRomCurve3(positions);\n    const angleCurve = new THREE.CatmullRomCurve3(rotations);\n    this.animationPos = posCurve.getPoints(this.animationDetail);\n    this.animationAngle = angleCurve.getPoints(this.animationDetail);\n  }\n  updateAnimationFrame() {\n    this.currentPos = this.animationPos[this.animationIndex];\n    this.currentAngle = this.animationAngle[this.animationIndex];\n    if (this.animationIndex % this.animationFPS == 0) {\n      this.setIndex((this.index + 1) % this.frameList.length);\n    }\n    this.animationIndex = (this.animationIndex + 1) % this.animationDetail;\n  }\n  setPos(pos) {\n    this.setPosAtFrame(pos, this.index);\n  }\n  setPosAtFrame(p, i) {\n    this.getFrameAtIndex(i).pos = p;\n  }\n  setAngle(angle) {\n    this.setAngleAtFrame(angle, this.index);\n  }\n  setAngleAtFrame(a, i) {\n    this.getFrameAtIndex(i).angle = a;\n  }\n  addIndex() {\n    this.setIndex(1 + this.index);\n  }\n  subIndex() {\n    this.setIndex(-1 + this.index);\n  }\n  setIndex(v) {\n    this.check(v);\n    this.index = v;\n  }\n  getFrameScene() {\n    return this.getFrame().scene;\n  }\n  getFrame() {\n    return this.getFrameAtIndex(this.index);\n  }\n  getFrameAtIndex(i) {\n    this.check(i);\n    return this.frameList[i];\n  }\n  addFrame() {\n    this.addFrameAtIndex(this.index);\n  }\n  addFrameAtIndex(i) {\n    console.log(i);\n    this.check(i);\n    this.frameList.splice(i + 1, 0, new Frame());\n    this.index++;\n  }\n  delFrame() {\n    this.delFrameAtIndex(this.index);\n  }\n  delFrameAtIndex(i) {\n    this.check(i);\n    if (this.index > 0 && i > 0) {\n      this.frameList.splice(i, 1);\n      this.index--;\n    }\n  }\n  check(i) {\n    if (i < 0 || i >= this.frameList.length) {\n      console.log(\"frame accessed out of bounds\", i);\n    }\n  }\n}\nexport { FrameController };","map":{"version":3,"names":["camera","HistoryController","THREE","Frame","constructor","history","scene","Scene","pos","position","clone","angle","rotation","FrameController","frameList","index","play","animationPos","animationAngle","animationDetail","animationFPS","drawingFPS","currentPos","Vector3","currentAngle","Euler","animationIndex","needsUpdate","onion","updateCamera","calculateAnimation","positions","rotations","i","length","frame","getFrameAtIndex","push","v","setFromEuler","console","log","posCurve","CatmullRomCurve3","angleCurve","getPoints","updateAnimationFrame","setIndex","setPos","setPosAtFrame","p","setAngle","setAngleAtFrame","a","addIndex","subIndex","check","getFrameScene","getFrame","addFrame","addFrameAtIndex","splice","delFrame","delFrameAtIndex"],"sources":["C:/Users/peopl/Documents/Arduino/6d2/SURA/src/components/FrameController.js"],"sourcesContent":["import { camera } from './Camera.js';\r\nimport { HistoryController } from \"./HistoryController.js\";\r\nimport * as THREE from 'three';\r\n\r\nclass Frame {\r\n    constructor() {\r\n        this.history = new HistoryController();\r\n        this.scene = new THREE.Scene();\r\n        this.pos = camera.position.clone();\r\n        this.angle = camera.rotation.clone();\r\n    }\r\n\r\n}\r\n\r\nclass FrameController {\r\n    constructor() {\r\n        this.frameList = [new Frame()];\r\n        this.index = 0;\r\n\r\n        this.play = false;\r\n        this.animationPos = [];\r\n        this.animationAngle = [];\r\n        this.animationDetail = 0;\r\n        this.animationFPS = 10;\r\n        this.drawingFPS = 5;\r\n\r\n        this.currentPos = new THREE.Vector3();\r\n        this.currentAngle = new THREE.Euler();\r\n        this.animationIndex = 0;\r\n\r\n        this.needsUpdate = false;\r\n\r\n        this.onion = false;\r\n    }\r\n\r\n    updateCamera(){\r\n        this.needsUpdate = true;\r\n        \r\n    }\r\n\r\n    calculateAnimation(){\r\n        const positions = [];\r\n        const rotations = [];\r\n        for (let i = 0; i < this.frameList.length; i++){\r\n            const frame = this.getFrameAtIndex(i);\r\n            positions.push(frame.pos);\r\n            const v = new THREE.Vector3();\r\n            v.setFromEuler(frame.angle);\r\n            rotations.push(v);\r\n        }\r\n        console.log(positions, rotations);\r\n\r\n        this.animationDetail = this.animationFPS * this.drawingFPS * this.frameList.length;\r\n\r\n        const posCurve = new THREE.CatmullRomCurve3(positions);\r\n        const angleCurve = new THREE.CatmullRomCurve3(rotations);\r\n        this.animationPos = posCurve.getPoints(this.animationDetail);\r\n        this.animationAngle = angleCurve.getPoints(this.animationDetail);\r\n    }\r\n\r\n    updateAnimationFrame(){\r\n        this.currentPos = this.animationPos[this.animationIndex];\r\n        this.currentAngle = this.animationAngle[this.animationIndex];\r\n        \r\n        if (this.animationIndex % this.animationFPS == 0){\r\n            this.setIndex((this.index + 1) % this.frameList.length);\r\n        }\r\n\r\n        this.animationIndex = (this.animationIndex + 1) % this.animationDetail;\r\n    }\r\n\r\n    setPos(pos){\r\n        this.setPosAtFrame(pos, this.index);\r\n    }\r\n\r\n    setPosAtFrame(p, i){\r\n        this.getFrameAtIndex(i).pos = p;\r\n    }\r\n\r\n    setAngle(angle){\r\n        this.setAngleAtFrame(angle, this.index);\r\n    }\r\n\r\n    setAngleAtFrame(a, i){\r\n        this.getFrameAtIndex(i).angle = a;\r\n    }\r\n\r\n    addIndex(){\r\n        this.setIndex(1 + this.index);\r\n    }\r\n\r\n    subIndex(){\r\n        this.setIndex(-1 + this.index);\r\n    }\r\n\r\n    setIndex(v){\r\n        this.check(v);\r\n        this.index = v;\r\n    }\r\n\r\n    getFrameScene(){\r\n        return this.getFrame().scene;\r\n    }\r\n\r\n    getFrame(){\r\n        return this.getFrameAtIndex(this.index);\r\n    }\r\n\r\n    getFrameAtIndex(i){\r\n        this.check(i);\r\n        return this.frameList[i];\r\n    }\r\n\r\n    addFrame(){\r\n        this.addFrameAtIndex(this.index);\r\n    }\r\n\r\n    addFrameAtIndex(i){\r\n        console.log(i);\r\n        this.check(i);\r\n        this.frameList.splice(i+1, 0, new Frame());\r\n        this.index ++;\r\n\r\n    }\r\n\r\n    delFrame(){\r\n        this.delFrameAtIndex(this.index);\r\n    }\r\n\r\n    delFrameAtIndex(i){\r\n        this.check(i);\r\n        if (this.index > 0 && i > 0){\r\n            this.frameList.splice(i, 1);\r\n            this.index --;\r\n        }\r\n    }\r\n\r\n    check(i){\r\n        if (i < 0 || i >= this.frameList.length){\r\n            console.log(\"frame accessed out of bounds\", i);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport { FrameController }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}