{"ast":null,"code":"import * as THREE from 'three';\nimport InfiniteGridHelper from \"./InfiniteGridHelper.js\";\nimport { renderer, camera } from '../App.vue';\nexport default {\n  name: 'GridBackground',\n  props: {\n    cameraPosition: {\n      type: Object,\n      required: true\n    },\n    cameraAngle: {\n      type: Object,\n      required: true\n    }\n  },\n  mounted() {\n    const scene = new THREE.Scene();\n\n    // Create a renderer\n    renderer.setSize(this.$el.clientWidth, this.$el.clientHeight);\n    document.body.appendChild(renderer.domElement);\n\n    // Create a camera\n\n    //camera = camera;\n    camera.rotation.order = \"XYZ\";\n    camera.position.set(this.cameraPosition.x, this.cameraPosition.y, this.cameraPosition.z);\n    camera.rotation.set(new THREE.Euler(this.cameraAngle.x, this.cameraAngle.y, this.cameraAngle.z));\n    renderer.setClearColor(new THREE.Color(0x000000));\n\n    // Create a geometry\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\n    const edges = new THREE.EdgesGeometry(geometry);\n\n    // Create a material\n\n    const lineMaterial = new THREE.LineBasicMaterial({\n      color: 0x00ff00\n    });\n\n    // Create a mesh\n\n    const cube = new THREE.LineSegments(edges, lineMaterial);\n\n    // Add the mesh to the scene\n\n    scene.add(cube);\n    const grid = InfiniteGridHelper();\n    grid.rotation.x += .1;\n    grid.rotation.y += .2;\n    scene.add(grid);\n    let rotationSpeed = 0.01; // Initial rotation speed\n    const self = this;\n    function animate() {\n      requestAnimationFrame(animate);\n\n      // Rotate the cube\n      cube.rotation.x += rotationSpeed;\n      cube.rotation.y += rotationSpeed;\n      camera.position.copy(self.cameraPosition);\n      camera.rotation.set(self.cameraAngle.x, self.cameraAngle.y, self.cameraAngle.z);\n\n      // Render the scene with the camera\n      renderer.render(scene, camera);\n    }\n    this.windowResizeHandler();\n    animate();\n    window.addEventListener('resize', this.windowResizeHandler);\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.windowResizeHandler);\n  },\n  methods: {\n    windowResizeHandler() {\n      console.log(\"hi\");\n      const width = this.$el.clientWidth;\n      const height = this.$el.clientHeight;\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n      renderer.setSize(width, height);\n    }\n  }\n};","map":{"version":3,"names":["THREE","InfiniteGridHelper","renderer","camera","name","props","cameraPosition","type","Object","required","cameraAngle","mounted","scene","Scene","setSize","$el","clientWidth","clientHeight","document","body","appendChild","domElement","rotation","order","position","set","x","y","z","Euler","setClearColor","Color","geometry","BoxGeometry","edges","EdgesGeometry","lineMaterial","LineBasicMaterial","color","cube","LineSegments","add","grid","rotationSpeed","self","animate","requestAnimationFrame","copy","render","windowResizeHandler","window","addEventListener","beforeUnmount","removeEventListener","methods","console","log","width","height","aspect","updateProjectionMatrix"],"sources":["/Users/olliearrison/Desktop/SURA/src/components/GridBackground.vue"],"sourcesContent":["<template>\n    <div class=\"grid\"> </div>\n</template>\n\n<script>\nimport * as THREE from 'three';\nimport InfiniteGridHelper from \"./InfiniteGridHelper.js\";\nimport { renderer, camera } from '../App.vue';\n\n\nexport default {\n  name: 'GridBackground',\n  props: {\n    cameraPosition: {\n      type: Object,\n      required: true\n    },\n    cameraAngle: {\n      type: Object,\n      required: true\n    }\n  },\n  mounted(){\n    const scene = new THREE.Scene();\n\n    // Create a renderer\n    renderer.setSize(this.$el.clientWidth, this.$el.clientHeight);\n    document.body.appendChild(renderer.domElement);\n\n    // Create a camera\n    \n    //camera = camera;\n    camera.rotation.order = \"XYZ\";\n    camera.position.set(this.cameraPosition.x, this.cameraPosition.y, this.cameraPosition.z);\n    camera.rotation.set(new THREE.Euler(this.cameraAngle.x, this.cameraAngle.y, this.cameraAngle.z));\n\n\n    renderer.setClearColor(new THREE.Color(0x000000));\n\n\n    // Create a geometry\n    const geometry = new THREE.BoxGeometry(1, 1, 1);\n\n    const edges = new THREE.EdgesGeometry(geometry);\n\n    // Create a material\n\n    const lineMaterial = new THREE.LineBasicMaterial({ color: 0x00ff00 });\n\n    // Create a mesh\n\n    const cube = new THREE.LineSegments(edges, lineMaterial);\n\n    // Add the mesh to the scene\n\n\n    scene.add(cube);\n\n    const grid = InfiniteGridHelper();\n    grid.rotation.x += .1;\n    grid.rotation.y += .2;\n\n    scene.add(grid);\n\n    let rotationSpeed = 0.01; // Initial rotation speed\n    const self = this;\n    function animate() {\n        requestAnimationFrame(animate);\n\n        // Rotate the cube\n        cube.rotation.x += rotationSpeed;\n        cube.rotation.y += rotationSpeed;\n\n        camera.position.copy(self.cameraPosition);\n        camera.rotation.set(self.cameraAngle.x, self.cameraAngle.y, self.cameraAngle.z);\n\n        // Render the scene with the camera\n        renderer.render(scene, camera);\n        \n    }\n    this.windowResizeHandler();\n    animate();\n    window.addEventListener('resize', this.windowResizeHandler);\n  }, \n  beforeUnmount() {\n    window.removeEventListener('resize', this.windowResizeHandler);\n},\n  methods: {\n    windowResizeHandler() {\n        console.log(\"hi\");\n        const width = this.$el.clientWidth;\n        const height = this.$el.clientHeight;\n\n        camera.aspect = width / height;\n        camera.updateProjectionMatrix();\n        renderer.setSize(width, height);\n    }\n  }\n}\n</script>\n\n<style>\n\n.grid {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}