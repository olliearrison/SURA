{"ast":null,"code":"import * as THREE from 'three';\nimport { ArcballControls } from 'three/addons/controls/ArcballControls.js';\nimport { arcRenderer } from '../App.vue';\n\n//export let renderer = new THREE.WebGLRenderer({alpha: true, antialias: true});\n\nlet controls, scene;\nexport default {\n  name: 'ArcballControl',\n  props: {\n    cameraPosition: {\n      type: Object,\n      required: true\n    },\n    cameraAngle: {\n      type: Object,\n      required: true\n    }\n  },\n  /*\n  data() {\n    return {\n      renderer: renderer,\n      controls: null,\n      scene: null\n    };\n  },\n  */\n  mounted() {\n    arcRenderer.setSize(this.$el.clientWidth, this.$el.clientHeight);\n    arcRenderer.setPixelRatio(window.devicePixelRatio);\n    //document.body.appendChild(renderer.domElement);\n    this.$el.appendChild(arcRenderer.domElement);\n    scene = new THREE.Scene();\n\n    //this.$emit('update:camera', camera);\n\n    //this.$emit('update:camera', camera.clone());\n    //const domElement = this.$refs.arcball;\n\n    /*\n    domElement.addEventListener('mousedown', () => {\n      console.log('mousedown picked up');\n    });\n      document.body.addEventListener('mouseup', () => {\n      console.log('mouseup picked up');\n    });\n    */\n\n    controls = new ArcballControls(camera, arcRenderer.domElement, scene);\n    controls.addEventListener('change', this.handleCameraChange);\n    camera.position.set(0, .5, 5);\n    //camera.angle.set(0,0,0);\n    this.windowResizeHandler();\n    controls.update();\n    this.animate();\n    window.addEventListener('resize', this.windowResizeHandler);\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.windowResizeHandler);\n    controls.removeEventListener('change', this.handleCameraChange);\n  },\n  methods: {\n    handleCameraChange() {\n      const cameraPosition = camera.position.clone();\n      const cameraAngle = camera.rotation.clone();\n      this.$emit('camera-updated', {\n        position: cameraPosition,\n        angle: cameraAngle\n      });\n      arcRenderer.render(scene, camera);\n    },\n    windowResizeHandler() {\n      const width = this.$el.clientWidth;\n      const height = this.$el.clientHeight;\n\n      /*\n      this.$emit('update:camera', {\n        aspect: width / height,\n        width: width,\n        height: height\n      });\n      */\n\n      arcRenderer.setSize(width, height);\n    },\n    animate() {\n      requestAnimationFrame(this.animate);\n      controls.update();\n      arcRenderer.render(scene, camera);\n    }\n  }\n};","map":{"version":3,"names":["THREE","ArcballControls","arcRenderer","controls","scene","name","props","cameraPosition","type","Object","required","cameraAngle","mounted","setSize","$el","clientWidth","clientHeight","setPixelRatio","window","devicePixelRatio","appendChild","domElement","Scene","camera","addEventListener","handleCameraChange","position","set","windowResizeHandler","update","animate","beforeUnmount","removeEventListener","methods","clone","rotation","$emit","angle","render","width","height","requestAnimationFrame"],"sources":["/Users/olliearrison/Desktop/SURA/src/components/ArcballControl.vue"],"sourcesContent":["<template>\n    <div class=\"arc\" ref=\"arcball\"></div>\n</template>\n\n<script>\nimport * as THREE from 'three';\nimport { ArcballControls } from 'three/addons/controls/ArcballControls.js';\nimport { arcRenderer } from '../App.vue';\n\n//export let renderer = new THREE.WebGLRenderer({alpha: true, antialias: true});\n\nlet controls, scene;\n\nexport default {\n  name: 'ArcballControl',\n  props: {\n    cameraPosition: {\n      type: Object,\n      required: true\n    },\n    cameraAngle: {\n      type: Object,\n      required: true\n    }\n  },\n  /*\n  data() {\n    return {\n      renderer: renderer,\n      controls: null,\n      scene: null\n    };\n  },\n  */\n  mounted() {\n    \n    arcRenderer.setSize(this.$el.clientWidth, this.$el.clientHeight);\n    arcRenderer.setPixelRatio(window.devicePixelRatio);\n    //document.body.appendChild(renderer.domElement);\n    this.$el.appendChild(arcRenderer.domElement);\n\n    scene = new THREE.Scene();\n\n    //this.$emit('update:camera', camera);\n\n    //this.$emit('update:camera', camera.clone());\n    //const domElement = this.$refs.arcball;\n\n    /*\n    domElement.addEventListener('mousedown', () => {\n      console.log('mousedown picked up');\n    });\n\n\n    document.body.addEventListener('mouseup', () => {\n      console.log('mouseup picked up');\n    });\n    */\n\n\n    controls = new ArcballControls( camera, arcRenderer.domElement, scene );\n    controls.addEventListener('change', this.handleCameraChange);\n\n\n    camera.position.set( 0, .5, 5 );\n    //camera.angle.set(0,0,0);\n    this.windowResizeHandler();\n    controls.update();\n    this.animate();\n    window.addEventListener('resize', this.windowResizeHandler);\n\n  },beforeUnmount() {\n    window.removeEventListener('resize', this.windowResizeHandler);\n    controls.removeEventListener('change', this.handleCameraChange);\n  },\n   methods: {\n    handleCameraChange() {\n      const cameraPosition = camera.position.clone();\n      const cameraAngle = camera.rotation.clone();\n\n\n      this.$emit('camera-updated', {\n        position: cameraPosition,\n        angle: cameraAngle\n      });\n\n      arcRenderer.render( scene, camera );\n\n    },\n\n    windowResizeHandler() {\n      const width = this.$el.clientWidth;\n      const height = this.$el.clientHeight;\n\n      /*\n      this.$emit('update:camera', {\n        aspect: width / height,\n        width: width,\n        height: height\n      });\n      */\n      \n\n      arcRenderer.setSize(width, height);\n    },\n    animate() {\n      requestAnimationFrame(this.animate);\n      controls.update();\n      arcRenderer.render(scene, camera);\n    }\n  }\n}\n</script>\n\n<style>\n.arc {\n  position: absolute;\n  top: 10%;\n  right: 5%;\n  width: 150px;  /* Adjust these as necessary */\n  height: 150px; /* Adjust these as necessary */\n}\n</style>"],"mappings":"AAKA,OAAO,KAAKA,KAAI,MAAO,OAAO;AAC9B,SAASC,eAAc,QAAS,0CAA0C;AAC1E,SAASC,WAAU,QAAS,YAAY;;AAExC;;AAEA,IAAIC,QAAQ,EAAEC,KAAK;AAEnB,eAAe;EACbC,IAAI,EAAE,gBAAgB;EACtBC,KAAK,EAAE;IACLC,cAAc,EAAE;MACdC,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDC,WAAW,EAAE;MACXH,IAAI,EAAEC,MAAM;MACZC,QAAQ,EAAE;IACZ;EACF,CAAC;EACD;;;;;;;;;EASAE,OAAOA,CAAA,EAAG;IAERV,WAAW,CAACW,OAAO,CAAC,IAAI,CAACC,GAAG,CAACC,WAAW,EAAE,IAAI,CAACD,GAAG,CAACE,YAAY,CAAC;IAChEd,WAAW,CAACe,aAAa,CAACC,MAAM,CAACC,gBAAgB,CAAC;IAClD;IACA,IAAI,CAACL,GAAG,CAACM,WAAW,CAAClB,WAAW,CAACmB,UAAU,CAAC;IAE5CjB,KAAI,GAAI,IAAIJ,KAAK,CAACsB,KAAK,CAAC,CAAC;;IAEzB;;IAEA;IACA;;IAEA;;;;;;;;;IAYAnB,QAAO,GAAI,IAAIF,eAAe,CAAEsB,MAAM,EAAErB,WAAW,CAACmB,UAAU,EAAEjB,KAAM,CAAC;IACvED,QAAQ,CAACqB,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,kBAAkB,CAAC;IAG5DF,MAAM,CAACG,QAAQ,CAACC,GAAG,CAAE,CAAC,EAAE,EAAE,EAAE,CAAE,CAAC;IAC/B;IACA,IAAI,CAACC,mBAAmB,CAAC,CAAC;IAC1BzB,QAAQ,CAAC0B,MAAM,CAAC,CAAC;IACjB,IAAI,CAACC,OAAO,CAAC,CAAC;IACdZ,MAAM,CAACM,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACI,mBAAmB,CAAC;EAE7D,CAAC;EAACG,aAAaA,CAAA,EAAG;IAChBb,MAAM,CAACc,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACJ,mBAAmB,CAAC;IAC9DzB,QAAQ,CAAC6B,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACP,kBAAkB,CAAC;EACjE,CAAC;EACAQ,OAAO,EAAE;IACRR,kBAAkBA,CAAA,EAAG;MACnB,MAAMlB,cAAa,GAAIgB,MAAM,CAACG,QAAQ,CAACQ,KAAK,CAAC,CAAC;MAC9C,MAAMvB,WAAU,GAAIY,MAAM,CAACY,QAAQ,CAACD,KAAK,CAAC,CAAC;MAG3C,IAAI,CAACE,KAAK,CAAC,gBAAgB,EAAE;QAC3BV,QAAQ,EAAEnB,cAAc;QACxB8B,KAAK,EAAE1B;MACT,CAAC,CAAC;MAEFT,WAAW,CAACoC,MAAM,CAAElC,KAAK,EAAEmB,MAAO,CAAC;IAErC,CAAC;IAEDK,mBAAmBA,CAAA,EAAG;MACpB,MAAMW,KAAI,GAAI,IAAI,CAACzB,GAAG,CAACC,WAAW;MAClC,MAAMyB,MAAK,GAAI,IAAI,CAAC1B,GAAG,CAACE,YAAY;;MAEpC;;;;;;;;MASAd,WAAW,CAACW,OAAO,CAAC0B,KAAK,EAAEC,MAAM,CAAC;IACpC,CAAC;IACDV,OAAOA,CAAA,EAAG;MACRW,qBAAqB,CAAC,IAAI,CAACX,OAAO,CAAC;MACnC3B,QAAQ,CAAC0B,MAAM,CAAC,CAAC;MACjB3B,WAAW,CAACoC,MAAM,CAAClC,KAAK,EAAEmB,MAAM,CAAC;IACnC;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}