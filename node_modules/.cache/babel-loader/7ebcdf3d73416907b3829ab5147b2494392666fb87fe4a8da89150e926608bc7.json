{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport LayerViewer from \"./LayerViewer.vue\";\nimport { draw } from \"./DrawHelper.js\";\nimport { HistoryController } from \"./HistoryController.js\";\nimport { arcRenderer, drawSceneList } from '../App.vue';\nimport * as THREE from 'three';\nexport let index = 0;\nexport let canvasIndex = 0;\nlet drawing = false;\nlet rotatingInterval = null; // Interval to rotate index\nlet historyController = new HistoryController();\nexport default {\n  name: 'DrawingInput',\n  components: {\n    LayerViewer\n  },\n  data() {\n    return {\n      icons: ['mdi-cylinder', 'mdi-square-outline', 'mdi-sphere'],\n      currentIconIndex: 1,\n      isDrawing: false,\n      rotatingCondition: false,\n      stroke: {\n        show_stroke: true,\n        lineWidth: .25,\n        color: 0x000000,\n        eraser: false\n      },\n      showColorPicker: false,\n      onionSkin: false,\n      canUndo: false,\n      canRedo: false,\n      sizeMultiplier: .5,\n      newMode: false\n    };\n  },\n  computed: {\n    color: {\n      get() {\n        // Convert color from 0xRRGGBB to #RRGGBB when getting\n        return '#' + this.stroke.color.toString(16).padStart(6, '0');\n      },\n      set(value) {\n        // Convert color from #RRGGBB to 0xRRGGBB when setting\n        this.stroke.color = parseInt(value.slice(1), 16);\n      }\n    }\n  },\n  mounted() {\n    this.$watch(() => this.rotatingCondition, newValue => {\n      console.log(\"hello\");\n      if (newValue) {\n        if (rotatingInterval == null) {\n          console.log(\"hello\");\n          // Rotate the index 5 times per second\n          rotatingInterval = setInterval(() => {\n            index = (index + 1) % drawSceneList.length;\n          }, 1000 / 5); // 1000 ms (1s) divided by 5 gives 200 ms\n        }\n      } else {\n        // Stop rotating the index\n        if (rotatingInterval != null) {\n          clearInterval(rotatingInterval);\n          rotatingInterval = null;\n        }\n      }\n    });\n    // document.body \n    /*\r\n    const button = this.$refs.eraserButton;\r\n    \r\n    button.addEventListener('click', () => {\r\n        console.log(\"pointer down\");\r\n        this.isEraserMode = !this.isEraserMode;\r\n    });\r\n    */\n\n    document.body.addEventListener('mouseup', event => {\n      if (this.inCanvas(event)) {\n        this.handleMouseUp();\n        drawing = false;\n      }\n    });\n    document.body.addEventListener('mousedown', event => {\n      if (this.inCanvas(event)) {\n        drawing = true;\n        this.handleMouseDown(event);\n      }\n    });\n    document.body.addEventListener('pointermove', event => {\n      if (event.pressure > 0) {\n        this.stroke.lineWidth = event.pressure * .5 * this.sizeMultiplier;\n      }\n    });\n    document.body.addEventListener('mousemove', event => {\n      //console.log(event.pressure);\n      if (this.inCanvas(event)) {\n        if (drawing) {\n          this.handleMouseMove(event);\n        }\n      } else {\n        if (drawing) {\n          this.handleMouseUp();\n          drawing = false;\n        }\n      }\n    });\n    //this.handleMouseMove(event);\n  },\n\n  methods: {\n    inCanvas(event) {\n      var rect = arcRenderer.domElement.getBoundingClientRect();\n      var centerX = rect.left + rect.width / 2;\n      var centerY = rect.top + rect.height / 2;\n      const dx = event.clientX - centerX;\n      const dy = event.clientY - centerY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      if (distance < rect.width / 2) {\n        return false;\n      }\n      return true;\n    },\n    handleMouseMove(event) {\n      if (!this.isDrawing) return;\n      let x = event.clientX;\n      let y = event.clientY;\n      // Assuming a 2D drawing, so Z is constant, but this could be modified as per the requirement.\n      draw.onMove(x, y, this.stroke);\n    },\n    handleMouseDown(event) {\n      //console.log(\"mouse down\");\n      this.isDrawing = true;\n      let x = event.clientX;\n      let y = event.clientY;\n      draw.onStart(x, y, this.stroke);\n      this.canUndo = historyController.canUndo();\n      this.canRedo = historyController.canRedo();\n    },\n    handleMouseUp() {\n      this.isDrawing = false;\n      let result = draw.onEnd(this.stroke);\n      if (result[0] != false) {\n        historyController.action(result);\n      }\n      this.canUndo = historyController.canUndo();\n      this.canRedo = historyController.canRedo();\n      //console.log(this.canUndo);\n    },\n\n    toggleEraserMode() {\n      this.stroke.eraser = !this.stroke.eraser;\n    },\n    toggleColorSelect() {\n      console.log(this.showColorPicker);\n      this.showColorPicker = !this.showColorPicker;\n    },\n    toggleOnionSkin() {\n      this.onionSkin = !this.onionSkin;\n    },\n    toggleNewMode() {\n      this.newMode = !this.newMode;\n    },\n    backward() {\n      const len = drawSceneList.length;\n      console.log(len);\n      historyController = new HistoryController();\n      if (index > -1) {\n        drawSceneList.splice(index, 1);\n      }\n      index--;\n      //drawSceneList.remove(index);\n      const layerViewer = this.$refs.layerViewer;\n      layerViewer.updateLayers();\n    },\n    forward() {\n      console.log(index);\n      console.log(\"forwardddd\");\n      const newScene = new THREE.Scene();\n      drawSceneList.push(newScene);\n      historyController = new HistoryController();\n      index++;\n      const layerViewer = this.$refs.layerViewer;\n\n      // Call the function in the child component\n      layerViewer.updateLayers();\n    },\n    play() {\n      this.rotatingCondition = !this.rotatingCondition;\n      this.isDrawing = this.rotatingCondition;\n    },\n    undo() {\n      historyController.undo();\n      this.canRedo = historyController.canRedo();\n    },\n    redo() {\n      historyController.redo();\n      this.canUndo = historyController.canUndo();\n    },\n    updateSizeMultiplier() {\n      // .5 is the constant multiplier\n      // this is multiplied by .5, the default pressure\n      this.stroke.lineWidth = .25 * this.sizeMultiplier;\n    },\n    handleCardSelected(selectedIndex) {\n      // Use the selected index as needed\n      console.log('Selected index:', selectedIndex);\n      index = selectedIndex;\n    },\n    nextIcon() {\n      console.log(\"index changed\");\n      this.currentIconIndex = (this.currentIconIndex + 1) % this.icons.length;\n      canvasIndex = this.currentIconIndex;\n    },\n    loadPosition() {}\n  }\n};","map":{"version":3,"names":["LayerViewer","draw","HistoryController","arcRenderer","drawSceneList","THREE","index","canvasIndex","drawing","rotatingInterval","historyController","name","components","data","icons","currentIconIndex","isDrawing","rotatingCondition","stroke","show_stroke","lineWidth","color","eraser","showColorPicker","onionSkin","canUndo","canRedo","sizeMultiplier","newMode","computed","get","toString","padStart","set","value","parseInt","slice","mounted","$watch","newValue","console","log","setInterval","length","clearInterval","document","body","addEventListener","event","inCanvas","handleMouseUp","handleMouseDown","pressure","handleMouseMove","methods","rect","domElement","getBoundingClientRect","centerX","left","width","centerY","top","height","dx","clientX","dy","clientY","distance","Math","sqrt","x","y","onMove","onStart","result","onEnd","action","toggleEraserMode","toggleColorSelect","toggleOnionSkin","toggleNewMode","backward","len","splice","layerViewer","$refs","updateLayers","forward","newScene","Scene","push","play","undo","redo","updateSizeMultiplier","handleCardSelected","selectedIndex","nextIcon","loadPosition"],"sources":["C:\\Users\\peopl\\Documents\\Arduino\\6d2\\SURA\\src\\components\\DrawingInput.vue"],"sourcesContent":["<template>\r\n    <div class=\"drawing-input\" >\r\n        <LayerViewer @card-selected=\"handleCardSelected\" ref=\"layerViewer\"/>\r\n        <v-app>\r\n            <v-color-picker v-if=\"showColorPicker\" v-model=\"color\"></v-color-picker>\r\n\r\n            <v-app-bar class=\"small-bar justify-center\" >\r\n                <div class=\"spacer\"></div>\r\n                <v-btn icon class=\"fixed-button\" @click=\"toggleColorSelect\">\r\n                    <v-icon>mdi-home</v-icon>\r\n                </v-btn>\r\n                <div class=\"spacer\"></div>\r\n                <v-btn icon class=\"fixed-button\">\r\n                    <v-icon>mdi-file</v-icon>\r\n                </v-btn>\r\n                <v-spacer></v-spacer>\r\n                <v-btn icon class=\"fixed-button\" @click=\"toggleNewMode\">\r\n                    <v-icon>\r\n                        {{ newMode ? 'mdi-toggle-switch-outline' : 'mdi-toggle-switch-off-outline' }}\r\n                    </v-icon>\r\n                </v-btn>\r\n                <div class=\"spacer\"></div>\r\n                <v-btn icon class=\"fixed-button\" @click=\"loadPosition\">\r\n                    <v-icon>mdi-target</v-icon>\r\n                </v-btn>\r\n                <div class=\"spacer\"></div>\r\n                <v-btn icon class=\"fixed-button\" ref=\"eraserButton\" @click=\"toggleEraserMode\">\r\n                    <v-icon>\r\n                    {{ stroke.eraser ? 'mdi-eraser' : 'mdi-brush-outline' }}\r\n                    </v-icon>\r\n                </v-btn>\r\n                <div class=\"spacer\"></div>\r\n                <v-btn icon class=\"fixed-button\">\r\n                    <v-icon>mdi-layers-outline</v-icon>\r\n                </v-btn>\r\n                <div class=\"spacer\"></div>\r\n                <v-btn icon class=\"fixed-button\" @click=\"toggleOnionSkin\">\r\n                    <v-icon>\r\n                        {{ onionSkin ? 'mdi-animation' : 'mdi-animation-outline' }}\r\n                    </v-icon>\r\n                </v-btn>\r\n                \r\n            </v-app-bar>\r\n\r\n        \r\n\r\n\r\n            <v-card class=\"pa-2\" outlined>\r\n                <v-container class=\"align-center\">\r\n                    <v-row justify=\"center\">\r\n                        <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n                            <v-slider\r\n                                show-ticks\r\n                                class=\"my-slider\"\r\n                                color=\"blue-grey-lighten-3\"\r\n                                density=\"compact\"\r\n                                track-size=\"15\"\r\n                                direction=\"vertical\"\r\n                                v-model=\"sizeMultiplier\"\r\n                                :step=\"0.1\"\r\n                                :min=\"0.4\"\r\n                                :max=\"1.5\"\r\n                                @click=\"updateSizeMultiplier\"\r\n                                >\r\n                            </v-slider>\r\n                        </v-col>\r\n                    </v-row>\r\n\r\n                    <v-row justify=\"center\">\r\n                        <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n                            <v-btn icon class=\"fixed-button\" @click=\"showColorPicker = !showColorPicker\">\r\n                                        <v-icon>mdi-palette</v-icon>\r\n                            </v-btn>\r\n                        </v-col>\r\n                    </v-row>\r\n\r\n                    <v-row justify=\"center\">\r\n                        <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n                            <v-btn icon class=\"fixed-button\" @click=\"nextIcon\">\r\n                                <v-icon>{{ icons[currentIconIndex] }}</v-icon>\r\n                            </v-btn>\r\n                        </v-col>\r\n                    </v-row>\r\n\r\n                    <v-row justify=\"center\">\r\n                        <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n                            <v-btn icon class=\"fixed-button custom-button\" :style=\"{ color: canRedo ? '#B0BEC5' : '#78909C'}\" @click=\"redo\">\r\n                                        <v-icon>mdi-arrow-u-right-top</v-icon>\r\n                            </v-btn>\r\n                        </v-col>\r\n                    </v-row>\r\n\r\n                    <v-row justify=\"center\">\r\n                        <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n                            <v-btn icon class=\"fixed-button custom-button\" :style=\"{ color: canUndo ? '#B0BEC5' : '#78909C'}\" @click=\"undo\">\r\n                                        <v-icon>mdi-arrow-u-left-top</v-icon>\r\n                            </v-btn>\r\n                        </v-col>\r\n                    </v-row>\r\n                </v-container>\r\n            </v-card>\r\n            \r\n            \r\n            <v-row class=\"bottom-buttons\">\r\n                <v-btn class=\"fixed-button\" @click=\"backward\" large>\r\n                    <v-icon>\r\n                        mdi-minus\r\n                    </v-icon>\r\n                </v-btn>\r\n                <v-spacer></v-spacer>\r\n                <v-btn class=\"fixed-button\" @click=\"forward\" large>\r\n                    <v-icon>\r\n                        mdi-plus\r\n                    </v-icon>\r\n                </v-btn>\r\n                <v-spacer></v-spacer>\r\n                <v-btn class=\"fixed-button\" @click=\"play\" large>\r\n                    <v-icon>\r\n                        {{ rotatingCondition ? 'mdi-pause' : 'mdi-play' }}\r\n                    </v-icon>\r\n                </v-btn>\r\n            </v-row>\r\n    </v-app>\r\n    </div>\r\n    \r\n</template>\r\n  \r\n<script>\r\nimport LayerViewer from \"./LayerViewer.vue\";\r\nimport { draw } from \"./DrawHelper.js\";\r\nimport { HistoryController } from \"./HistoryController.js\";\r\nimport { arcRenderer, drawSceneList } from '../App.vue';\r\nimport * as THREE from 'three';\r\n\r\nexport let index = 0;\r\nexport let canvasIndex = 0;\r\n\r\nlet drawing = false;\r\n\r\nlet rotatingInterval = null;  // Interval to rotate index\r\nlet historyController = new HistoryController();\r\n\r\nexport default {\r\n    name: 'DrawingInput',\r\n    components: {\r\n        LayerViewer,\r\n    },\r\n\r\n    data(){\r\n        return {\r\n            icons: ['mdi-cylinder', 'mdi-square-outline', 'mdi-sphere'],\r\n            currentIconIndex: 1,\r\n            isDrawing: false,\r\n            rotatingCondition: false,\r\n            stroke: {\r\n                show_stroke: true,\r\n                lineWidth: .25,\r\n                color: 0x000000,\r\n                eraser: false,\r\n                \r\n                \r\n            },\r\n            showColorPicker: false,\r\n            onionSkin: false,\r\n            canUndo: false,\r\n            canRedo: false,\r\n            sizeMultiplier: .5,\r\n            newMode: false,\r\n        };\r\n    },\r\n    computed: {\r\n        color: {\r\n        get() {\r\n            // Convert color from 0xRRGGBB to #RRGGBB when getting\r\n            return '#' + this.stroke.color.toString(16).padStart(6, '0');\r\n        },\r\n        set(value) {\r\n            // Convert color from #RRGGBB to 0xRRGGBB when setting\r\n            this.stroke.color = parseInt(value.slice(1), 16);\r\n        },\r\n        },\r\n    },\r\n    mounted (){\r\n        this.$watch(() => this.rotatingCondition, (newValue) => {\r\n            console.log(\"hello\");\r\n            if(newValue){\r\n                if(rotatingInterval == null){\r\n                    console.log(\"hello\");\r\n                    // Rotate the index 5 times per second\r\n                    rotatingInterval = setInterval(() => {\r\n                        index = (index + 1) % drawSceneList.length;\r\n                    }, 1000/5); // 1000 ms (1s) divided by 5 gives 200 ms\r\n                }\r\n            }else{\r\n                // Stop rotating the index\r\n                if(rotatingInterval != null){\r\n                    clearInterval(rotatingInterval);\r\n                    rotatingInterval = null;\r\n                }\r\n            }\r\n        });\r\n        // document.body \r\n        /*\r\n        const button = this.$refs.eraserButton;\r\n        \r\n        button.addEventListener('click', () => {\r\n            console.log(\"pointer down\");\r\n            this.isEraserMode = !this.isEraserMode;\r\n        });\r\n        */\r\n\r\n\r\n        document.body.addEventListener('mouseup', (event) => {\r\n            if (this.inCanvas(event)){\r\n                this.handleMouseUp();\r\n                drawing = false;\r\n            }\r\n        });\r\n\r\n        document.body.addEventListener('mousedown', (event) => {\r\n            if (this.inCanvas(event)) {\r\n                drawing = true;\r\n                this.handleMouseDown(event);\r\n            }\r\n        });\r\n\r\n        document.body.addEventListener('pointermove', (event) => {\r\n            if (event.pressure > 0){\r\n                this.stroke.lineWidth = event.pressure * .5 * this.sizeMultiplier;\r\n            }\r\n\r\n        });\r\n\r\n        document.body.addEventListener('mousemove', (event) => {\r\n            //console.log(event.pressure);\r\n            if (this.inCanvas(event)) {\r\n                if (drawing) {\r\n                    this.handleMouseMove(event);\r\n                }\r\n            } else {\r\n                if (drawing){\r\n                    this.handleMouseUp();\r\n                    drawing = false;\r\n                }\r\n            }\r\n        });\r\n        //this.handleMouseMove(event);\r\n\r\n       \r\n\r\n    },\r\n    methods: {\r\n        inCanvas( event ) {\r\n            var rect = arcRenderer.domElement.getBoundingClientRect();\r\n            var centerX = rect.left + rect.width / 2;\r\n            var centerY = rect.top + rect.height / 2;\r\n\r\n            const dx = event.clientX - centerX;\r\n            const dy = event.clientY - centerY;\r\n            const distance = Math.sqrt(dx * dx + dy * dy);\r\n\r\n            if (distance < rect.width/2){\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        handleMouseMove(event) {\r\n            if (!this.isDrawing) return;\r\n            let x = event.clientX;\r\n            let y = event.clientY;\r\n            // Assuming a 2D drawing, so Z is constant, but this could be modified as per the requirement.\r\n            draw.onMove(x, y, this.stroke);\r\n        },\r\n        handleMouseDown(event) {\r\n            //console.log(\"mouse down\");\r\n            this.isDrawing = true;\r\n            let x = event.clientX;\r\n            let y = event.clientY;\r\n            draw.onStart(x, y, this.stroke);\r\n            this.canUndo = historyController.canUndo();\r\n            this.canRedo = historyController.canRedo();\r\n        },\r\n        handleMouseUp() {\r\n            this.isDrawing = false;\r\n            let result = draw.onEnd(this.stroke);\r\n            if (result[0] != false){\r\n                historyController.action(result);\r\n            }\r\n            this.canUndo = historyController.canUndo();\r\n            this.canRedo = historyController.canRedo();\r\n            //console.log(this.canUndo);\r\n        },\r\n        toggleEraserMode() {\r\n            this.stroke.eraser = !this.stroke.eraser;\r\n        },\r\n        toggleColorSelect(){\r\n            console.log(this.showColorPicker);\r\n            this.showColorPicker = !this.showColorPicker;\r\n        },\r\n        toggleOnionSkin(){\r\n            this.onionSkin = !this.onionSkin;\r\n        },\r\n        toggleNewMode(){\r\n            this.newMode = !this.newMode;\r\n        },\r\n        backward() {\r\n            const len = drawSceneList.length;\r\n            console.log(len);\r\n\r\n            historyController = new HistoryController();\r\n            if (index > -1) {\r\n                drawSceneList.splice(index, 1);\r\n            }\r\n            index --;\r\n            //drawSceneList.remove(index);\r\n            const layerViewer = this.$refs.layerViewer;\r\n            layerViewer.updateLayers();\r\n        },\r\n        forward() {\r\n            console.log(index);\r\n            console.log(\"forwardddd\");\r\n            const newScene = new THREE.Scene();\r\n            drawSceneList.push(newScene);\r\n            historyController = new HistoryController();\r\n            index++;\r\n            \r\n            const layerViewer = this.$refs.layerViewer;\r\n      \r\n            // Call the function in the child component\r\n            layerViewer.updateLayers();\r\n        },\r\n        play() {\r\n            this.rotatingCondition = !this.rotatingCondition;\r\n            this.isDrawing = this.rotatingCondition;\r\n        },\r\n        undo(){\r\n            historyController.undo();\r\n            this.canRedo = historyController.canRedo();\r\n        },\r\n        redo(){\r\n            historyController.redo();\r\n            this.canUndo = historyController.canUndo();\r\n        },\r\n        updateSizeMultiplier() {\r\n            // .5 is the constant multiplier\r\n            // this is multiplied by .5, the default pressure\r\n            this.stroke.lineWidth = .25 * this.sizeMultiplier;\r\n        },\r\n        handleCardSelected(selectedIndex) {\r\n        // Use the selected index as needed\r\n            console.log('Selected index:', selectedIndex);\r\n            index = selectedIndex;\r\n        },\r\n        nextIcon() {\r\n            console.log(\"index changed\");\r\n            this.currentIconIndex = (this.currentIconIndex + 1) % this.icons.length;\r\n            canvasIndex = this.currentIconIndex;\r\n\r\n        },\r\n        loadPosition(){\r\n\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.drawing-input {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n\r\n.fixed-button {\r\n  z-index: 1200;\r\n  background-color: rgb(33, 33, 33);\r\n  color: rgb(176, 190, 197);\r\n}\r\n\r\n.v-card {\r\n  position: fixed;\r\n  top: 10%;\r\n  bottom: 90%;\r\n  left: 1%;\r\n  display: flex;\r\n  align-items: center;\r\n  z-index: 998;\r\n  height: 80%;\r\n  width: 5%;\r\n  justify-content: flex-start;\r\n  background-color: rgba(1, 1, 1, 0.7);\r\n}\r\n\r\n.button-container {\r\n  position: fixed;\r\n  top: 2%;\r\n  left: 2%;\r\n  height: 50%;\r\n  z-index: 999;\r\n  width: 10%;\r\n}\r\n\r\n.spacer {\r\n  width: 1%;\r\n  height: 1%;\r\n}\r\n\r\n.small-bar {\r\n  height: 8%;  /* Adjust this value as needed */\r\n  background-color: rgba(1, 1, 1, 0.7) !important;\r\n}\r\n\r\n.bottom-buttons {\r\n  position: fixed;\r\n  width: 20%;\r\n  bottom: 40px; /* Adjust the bottom value as needed */\r\n  left: 2%; /* Adjust the right value as needed */\r\n  z-index: 999; /* Set an appropriate z-index if necessary */\r\n  /* Add any other desired styles */\r\n}\r\n\r\n.v-color-picker {\r\n    position: fixed;\r\n    top: 10%;\r\n    left: 10%;\r\n    z-index: 1001;\r\n}\r\n\r\n.custom-button {\r\n  color: inherit;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}