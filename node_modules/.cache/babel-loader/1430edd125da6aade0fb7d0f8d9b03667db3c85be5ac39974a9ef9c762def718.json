{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-add1d17a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"layer-viewer\"\n};\nconst _hoisted_2 = {\n  class: \"card-wrapper\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"card-content\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"d-flex fill-height align-center justify-center\"\n})], -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_slide_group_item = _resolveComponent(\"v-slide-group-item\");\n  const _component_v_slide_group = _resolveComponent(\"v-slide-group\");\n  const _component_v_sheet = _resolveComponent(\"v-sheet\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_v_sheet, {\n    class: \"mx-auto\",\n    elevation: \"0\",\n    \"max-width\": \"800\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_slide_group, {\n      modelValue: $data.model,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.model = $event),\n      class: \"pa-4\",\n      \"show-arrows\": \"\"\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.drawSceneList, (scene, index) => {\n        return _openBlock(), _createBlock(_component_v_slide_group_item, {\n          key: index\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_v_card, {\n            width: \"100\",\n            height: \"100\",\n            color: \"white\",\n            class: \"transparent-card ma-4\"\n          }, {\n            default: _withCtx(() => [_hoisted_3]),\n            _: 1 /* STABLE */\n          })])]),\n\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */);\n      }), 128 /* KEYED_FRAGMENT */))]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_v_sheet","elevation","_component_v_slide_group","$data","model","$event","_Fragment","_renderList","_ctx","drawSceneList","scene","index","_createBlock","_component_v_slide_group_item","key","_hoisted_2","_component_v_card","width","height","color","_hoisted_3"],"sources":["/Users/olliearrison/Desktop/SURA/src/components/LayerViewer.vue"],"sourcesContent":["<template>\n    <div class=\"layer-viewer\">\n      <v-sheet class=\"mx-auto\" elevation=\"0\" max-width=\"800\">\n        <v-slide-group v-model=\"model\" class=\"pa-4\" show-arrows>\n          <v-slide-group-item v-for=\"(scene, index) in drawSceneList\" :key=\"index\">\n            <div class=\"card-wrapper\">\n              <v-card width=\"100\" height=\"100\" color=\"white\" class=\"transparent-card ma-4\">\n                <div class=\"card-content\">\n                  <div class=\"d-flex fill-height align-center justify-center\"></div>\n                </div>\n              </v-card>\n            </div>\n          </v-slide-group-item>\n        </v-slide-group>\n      </v-sheet>\n    </div>\n  </template>\n  \n  <script>\n  import { WebGLRenderer } from 'three';\n  import { camera, drawSceneList, plane } from '../App.vue';\n  \n  export default {\n    data() {\n      return {\n        model: null,\n        renderers: [],\n      };\n    },\n    mounted() {\n      this.$nextTick(() => {\n        this.initializeScene();\n      });\n    },\n    methods: {\n      initializeScene() {\n        const cardElements = this.$refs.cardElements;\n        this.renderers = [];\n  \n        if (cardElements) {\n          if (Array.isArray(cardElements)) {\n            cardElements.forEach((cardElement) => {\n              const renderer = new WebGLRenderer({ antialias: true });\n              const width = cardElement.offsetWidth;\n              const height = cardElement.offsetHeight;\n              renderer.setSize(width, height);\n  \n              const cardContentElement = cardElement.querySelector('.card-content');\n              cardContentElement.appendChild(renderer.domElement);\n  \n              this.renderers.push(renderer);\n            });\n          } else {\n            const renderer = new WebGLRenderer({ antialias: true });\n            const width = cardElements.offsetWidth;\n            const height = cardElements.offsetHeight;\n            renderer.setSize(width, height);\n  \n            const cardContentElement = cardElements.querySelector('.card-content');\n            cardContentElement.appendChild(renderer.domElement);\n  \n            this.renderers.push(renderer);\n          }\n        }\n  \n        this.animate();\n      },\n      animate() {\n        requestAnimationFrame(this.animate);\n  \n        const cardElements = this.$refs.cardElements;\n        cardElements.forEach((cardElement, index) => {\n          const renderer = this.renderers[index];\n          const scene = drawSceneList[index].remove(plane);\n          const cardCamera = camera;\n  \n          const width = cardElement.offsetWidth;\n          const height = cardElement.offsetHeight;\n          renderer.setSize(width, height);\n  \n          renderer.render(scene, cardCamera);\n        });\n      },\n    },\n  };\n  </script>\n  \n  \n  \n  <style scoped>\n\n  .slide-group {\n    color: rgb(176, 190, 197);\n    z-index: 1100;\n  }\n  .layer-viewer {\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n    height: 6%;\n    z-index: 1100;\n    align-items: center;\n    justify-content: center;\n    display: flex;\n    color: rgb(176, 190, 197);\n  }\n  \n  .v-card {\n    background-color: transparent;\n    box-shadow: none;\n    color: rgb(176, 190, 197);\n  }\n  \n  .transparent-card {\n    background-color: transparent;\n    border: none;\n  }\n\n  .v-sheet {\n    position: fixed;\n    bottom: 0;\n    background-color: rgba(1, 1, 1, 0.7);\n    color: rgb(176, 190, 197);\n    border-radius: 5px;\n    width: 50%;\n  }\n  \n  .card-wrapper {\n    display: inline-block;\n  }\n  \n  .card-content {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  </style>\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAc;;EAIZA,KAAK,EAAC;AAAc;gEAErBC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAc,I,aACvBC,mBAAA,CAAkE;EAA7DD,KAAK,EAAC;AAAgD,G;;;;;;;uBAPzEE,mBAAA,CAcM,OAdNC,UAcM,GAbJC,YAAA,CAYUC,kBAAA;IAZDL,KAAK,EAAC,SAAS;IAACM,SAAS,EAAC,GAAG;IAAC,WAAS,EAAC;;sBAC/C,MAUgB,CAVhBF,YAAA,CAUgBG,wBAAA;kBAVQC,KAAA,CAAAC,KAAK;iEAALD,KAAA,CAAAC,KAAK,GAAAC,MAAA;MAAEV,KAAK,EAAC,MAAM;MAAC,aAAW,EAAX;;wBACtB,MAAuC,E,kBAA3DE,mBAAA,CAQqBS,SAAA,QAAAC,WAAA,CARwBC,IAAA,CAAAC,aAAa,GAA9BC,KAAK,EAAEC,KAAK;6BAAxCC,YAAA,CAQqBC,6BAAA;UARwCC,GAAG,EAAEH;QAAK;4BACrE,MAMM,CANNf,mBAAA,CAMM,OANNmB,UAMM,GALJhB,YAAA,CAISiB,iBAAA;YAJDC,KAAK,EAAC,KAAK;YAACC,MAAM,EAAC,KAAK;YAACC,KAAK,EAAC,OAAO;YAACxB,KAAK,EAAC;;8BACnD,MAEM,CAFNyB,UAEM,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}