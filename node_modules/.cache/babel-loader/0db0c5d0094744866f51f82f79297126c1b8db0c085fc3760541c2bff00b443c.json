{"ast":null,"code":"const scene = new THREE.Scene();\n\n// Create a renderer\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setSize(window.innerWidth / 2, window.innerHeight / 2);\ndocument.body.appendChild(renderer.domElement);\n\n// Create a camera\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\ncamera.position.z = 5;\nrenderer.setClearColor(0xFFFFFF);\n\n// Create a geometry\nconst geometry = new THREE.BoxGeometry(1, 1, 1);\nconst edges = new THREE.EdgesGeometry(geometry);\n\n// Create a material\nconst material = new THREE.MeshBasicMaterial({\n  color: 0x00ff00\n});\nconst lineMaterial = new THREE.LineBasicMaterial({\n  color: 0x00ff00\n});\n\n// Create a mesh\nconst cube = new THREE.LineSegments(edges, lineMaterial);\n\n// Add the mesh to the scene\nscene.add(cube);\nlet rotationSpeed = 0.01; // Initial rotation speed\n\n// Create a button\nconst button = document.createElement('button');\nbutton.textContent = 'Increase Speed';\ndocument.body.appendChild(button);\n\n// Add event listener to the button\nbutton.addEventListener('click', () => {\n  rotationSpeed += 0.01; // Increase the rotation speed by 0.01\n});\n\nfunction animate() {\n  requestAnimationFrame(animate);\n\n  // Rotate the cube\n  cube.rotation.x += rotationSpeed;\n  cube.rotation.y += rotationSpeed;\n\n  // Render the scene with the camera\n  renderer.render(scene, camera);\n}\nanimate();\nimport HelloWorld from './components/HelloWorld.vue';\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld\n  }\n};","map":{"version":3,"names":["scene","THREE","Scene","renderer","WebGLRenderer","setSize","window","innerWidth","innerHeight","document","body","appendChild","domElement","camera","PerspectiveCamera","position","z","setClearColor","geometry","BoxGeometry","edges","EdgesGeometry","material","MeshBasicMaterial","color","lineMaterial","LineBasicMaterial","cube","LineSegments","add","rotationSpeed","button","createElement","textContent","addEventListener","animate","requestAnimationFrame","rotation","x","y","render","HelloWorld","name","components"],"sources":["/Users/olliearrison/Desktop/v1/src/App.vue"],"sourcesContent":["<template>\n  <HelloWorld msg=\"Welcome to Your Vue.js App\"/>\n</template>\n\n<script>\nconst scene = new THREE.Scene();\n\n// Create a renderer\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setSize(window.innerWidth/2, window.innerHeight/2);\ndocument.body.appendChild(renderer.domElement);\n\n// Create a camera\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\ncamera.position.z = 5;\n\nrenderer.setClearColor(0xFFFFFF);\n\n// Create a geometry\nconst geometry = new THREE.BoxGeometry(1, 1, 1);\n\nconst edges = new THREE.EdgesGeometry(geometry);\n\n// Create a material\nconst material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n\nconst lineMaterial = new THREE.LineBasicMaterial({ color: 0x00ff00 });\n\n// Create a mesh\nconst cube = new THREE.LineSegments(edges, lineMaterial);\n\n// Add the mesh to the scene\nscene.add(cube);\n\nlet rotationSpeed = 0.01; // Initial rotation speed\n\n// Create a button\nconst button = document.createElement('button');\nbutton.textContent = 'Increase Speed';\ndocument.body.appendChild(button);\n\n// Add event listener to the button\nbutton.addEventListener('click', () => {\n  rotationSpeed += 0.01; // Increase the rotation speed by 0.01\n});\n\nfunction animate() {\n  requestAnimationFrame(animate);\n\n  // Rotate the cube\n  cube.rotation.x += rotationSpeed;\n  cube.rotation.y += rotationSpeed;\n\n  // Render the scene with the camera\n  renderer.render(scene, camera);\n}\n\nanimate();\n\n\nimport HelloWorld from './components/HelloWorld.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld\n  }\n}\n\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"mappings":"AAKA,MAAMA,KAAI,GAAI,IAAIC,KAAK,CAACC,KAAK,CAAC,CAAC;;AAE/B;AACA,MAAMC,QAAO,GAAI,IAAIF,KAAK,CAACG,aAAa,CAAC,CAAC;AAC1CD,QAAQ,CAACE,OAAO,CAACC,MAAM,CAACC,UAAU,GAAC,CAAC,EAAED,MAAM,CAACE,WAAW,GAAC,CAAC,CAAC;AAC3DC,QAAQ,CAACC,IAAI,CAACC,WAAW,CAACR,QAAQ,CAACS,UAAU,CAAC;;AAE9C;AACA,MAAMC,MAAK,GAAI,IAAIZ,KAAK,CAACa,iBAAiB,CAAC,EAAE,EAAER,MAAM,CAACC,UAAS,GAAID,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;AACjGK,MAAM,CAACE,QAAQ,CAACC,CAAA,GAAI,CAAC;AAErBb,QAAQ,CAACc,aAAa,CAAC,QAAQ,CAAC;;AAEhC;AACA,MAAMC,QAAO,GAAI,IAAIjB,KAAK,CAACkB,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;AAE/C,MAAMC,KAAI,GAAI,IAAInB,KAAK,CAACoB,aAAa,CAACH,QAAQ,CAAC;;AAE/C;AACA,MAAMI,QAAO,GAAI,IAAIrB,KAAK,CAACsB,iBAAiB,CAAC;EAAEC,KAAK,EAAE;AAAS,CAAC,CAAC;AAEjE,MAAMC,YAAW,GAAI,IAAIxB,KAAK,CAACyB,iBAAiB,CAAC;EAAEF,KAAK,EAAE;AAAS,CAAC,CAAC;;AAErE;AACA,MAAMG,IAAG,GAAI,IAAI1B,KAAK,CAAC2B,YAAY,CAACR,KAAK,EAAEK,YAAY,CAAC;;AAExD;AACAzB,KAAK,CAAC6B,GAAG,CAACF,IAAI,CAAC;AAEf,IAAIG,aAAY,GAAI,IAAI,EAAE;;AAE1B;AACA,MAAMC,MAAK,GAAItB,QAAQ,CAACuB,aAAa,CAAC,QAAQ,CAAC;AAC/CD,MAAM,CAACE,WAAU,GAAI,gBAAgB;AACrCxB,QAAQ,CAACC,IAAI,CAACC,WAAW,CAACoB,MAAM,CAAC;;AAEjC;AACAA,MAAM,CAACG,gBAAgB,CAAC,OAAO,EAAE,MAAM;EACrCJ,aAAY,IAAK,IAAI,EAAE;AACzB,CAAC,CAAC;;AAEF,SAASK,OAAOA,CAAA,EAAG;EACjBC,qBAAqB,CAACD,OAAO,CAAC;;EAE9B;EACAR,IAAI,CAACU,QAAQ,CAACC,CAAA,IAAKR,aAAa;EAChCH,IAAI,CAACU,QAAQ,CAACE,CAAA,IAAKT,aAAa;;EAEhC;EACA3B,QAAQ,CAACqC,MAAM,CAACxC,KAAK,EAAEa,MAAM,CAAC;AAChC;AAEAsB,OAAO,CAAC,CAAC;AAGT,OAAOM,UAAS,MAAO,6BAA4B;AAEnD,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}