{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"arc\"\n};\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1"],"sources":["/Users/olliearrison/Desktop/SURA/src/components/ArcballControl.vue"],"sourcesContent":["<template>\n    <div class=\"arc\"> </div>\n</template>\n\n<script>\nimport * as THREE from 'three';\nimport { ArcballControls } from 'three/addons/controls/ArcballControls.js';\n\n\nexport default {\n  name: 'ArcballControl',\n  props: {\n  }\n  mounted() {\n    const renderer = new THREE.WebGLRenderer();\nrenderer.setSize( window.innerWidth, window.innerHeight );\ndocument.body.appendChild( renderer.domElement );\n\nconst scene = new THREE.Scene();\n\nconst camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 10000 );\n\nconst controls = new ArcballControls( camera, renderer.domElement, scene );\n\ncontrols.addEventListener( 'change', function () {\n\n\trenderer.render( scene, camera );\n\n} );\n\n//controls.update() must be called after any manual changes to the camera's transform\ncamera.position.set( 0, 20, 100 );\ncontrols.update();\n\n  }\n}\n</script>\n\n<style>\n.arc {\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  width: 150px;  /* Adjust these as necessary */\n  height: 150px; /* Adjust these as necessary */\n}\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAK;;uBAAhBC,mBAAA,CAAwB,OAAxBC,UAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}